[{"layout":"docs","title":"Brand guidelines","description":"Documentation and examples for ndb-uikit's logo and brand usage guidelines.","group":"about","toc":true,"skipSize":157,"id":"brand.md","fullContent":"Have a need for ndbuikits brand resources Great We have only a few guidelines we follow and in turn ask you to follow as wellLogoWhen referencing ndbuikit use our logo mark Do not modify our logos in any way Do not use ndbuikits branding for your own open or closed source projects Do not use the Twitter name or logo in association with ndbuikit  assetsbrandndbuikitlogosvg altndbuikit width heightOur logo mark is also available in black and white All rules for our primary logo apply to these as well      assetsbrandndbuikitlogoblacksvg altndbuikit width height loadinglazy        assetsbrandndbuikitlogowhitesvg altndbuikit width height loadinglazy  Namendbuikit should always be referred to as just ndbuikit No Twitter before it and no capital s      ndbuikit    Correct        ndbuikit    Incorrect        Twitter ndbuikit    Incorrect"},{"layout":"docs","title":"License FAQs","description":"Commonly asked questions about ndb-uikit's open source license.","group":"about","skipSize":131,"id":"license.md","fullContent":"ndbuikit is released under the MIT license and is copyright  Twitter Boiled down to smaller chunks it can be described with the following conditionsIt requires you to Keep the license and copyright notice included in ndbuikits CSS and JavaScript files when you use them in your worksIt permits you to Freely download and use ndbuikit in whole or in part for personal private company internal or commercial purposes Use ndbuikit in packages or distributions that you create Modify the source code Grant a sublicense to modify and distribute ndbuikit to third parties not included in the licenseIt forbids you to Hold the authors and license owners liable for damages as ndbuikit is provided without warranty Hold the creators or copyright holders of ndbuikit liable Redistribute any piece of ndbuikit without proper attribution Use any marks owned by Twitter in any way that might state or imply that Twitter endorses your distribution Use any marks owned by Twitter in any way that might state or imply that you created the Twitter software in questionIt does not require you to Include the source of ndbuikit itself or of any modifications you may have made to it in any redistribution you may assemble that includes it Submit changes that you make to ndbuikit back to the ndbuikit project though such feedback is encouragedThe full ndbuikit license is located in the project repositoryblobvLICENSE for more information"},{"layout":"docs","title":"About","description":"Learn more about the team maintaining ndb-uikit, how and why the project started, and how to get involved.","group":"about","aliases":["/about/","/docs/1.0/about/"],"skipSize":213,"id":"overview.md","fullContent":"TeamTo be continued HistoryTo be continued Get involvedGet involved with ndbuikit development by opening an issueissuesnewchoose or submitting a pull request Read our contributing guidelinesblobvgithubCONTRIBUTINGmd for information on how we develop"},{"layout":"docs","title":"Team","description":"An overview of the founding team and core contributors to ndb-uikit.","group":"about","skipSize":128,"id":"team.md","fullContent":"ndbuikit is maintained by the founding team and a small group of invaluable core contributors with the massive support and involvement of our community  index SiteData coreteam                                      Get involved with ndbuikit development by opening an issueissuesnewchoose or submitting a pull request Read our contributing guidelinesblobvgithubCONTRIBUTINGmd for information on how we develop"},{"layout":"docs","title":"Translations","description":"Links to community-translated ndb-uikit documentation sites.","group":"about","skipSize":128,"id":"translations.md","fullContent":"Community members have translated ndbuikits documentation into various languages None are officially supported and they may not always be uptodate   We dont help organize or host translations we just link to themFinished a new or better translation Open a pull request to add it to our list"},{"layout":"docs","title":"Accordion","description":"Build vertically collapsing accordions in combination with our Collapse JavaScript plugin.","group":"components","aliases":["/components/","/docs/1.0/components/"],"toc":true,"skipSize":226,"id":"accordion.md","fullContent":"How it worksThe accordion uses collapse internally to make it collapsible To render an accordion thats expanded add the  class on the ExampleClick the accordions below to expandcollapse the accordion content                    Accordion Item                             This is the first items accordion body It is shown by default until the collapse plugin adds the appropriate classes that we use to style each element These classes control the overall appearance as well as the showing and hiding via CSS transitions You can modify any of this with custom CSS or overriding our default variables Its also worth noting that just about any HTML can go within the accordionbody though the transition does limit overflow                                Accordion Item                             This is the second items accordion body It is hidden by default until the collapse plugin adds the appropriate classes that we use to style each element These classes control the overall appearance as well as the showing and hiding via CSS transitions You can modify any of this with custom CSS or overriding our default variables Its also worth noting that just about any HTML can go within the accordionbody though the transition does limit overflow                                Accordion Item                             This is the third items accordion body It is hidden by default until the collapse plugin adds the appropriate classes that we use to style each element These classes control the overall appearance as well as the showing and hiding via CSS transitions You can modify any of this with custom CSS or overriding our default variables Its also worth noting that just about any HTML can go within the accordionbody though the transition does limit overflow            FlushAdd  to remove the default  some borders and some rounded corners to render accordions edgetoedge with their parent container                    Accordion Item                     Placeholder content for this accordion which is intended to demonstrate the accordionflush class This is the first items accordion body                          Accordion Item                     Placeholder content for this accordion which is intended to demonstrate the accordionflush class This is the second items accordion body Lets imagine this being filled with some actual content                          Accordion Item                     Placeholder content for this accordion which is intended to demonstrate the accordionflush class This is the third items accordion body Nothing more exciting happening here in terms of content but just filling up the space to make it look at least at first glance a bit more representative of how this would look in a realworld application      Always openOmit the  attribute on each  to make accordion items stay open when another item is opened                    Accordion Item                             This is the first items accordion body It is shown by default until the collapse plugin adds the appropriate classes that we use to style each element These classes control the overall appearance as well as the showing and hiding via CSS transitions You can modify any of this with custom CSS or overriding our default variables Its also worth noting that just about any HTML can go within the accordionbody though the transition does limit overflow                                Accordion Item                             This is the second items accordion body It is hidden by default until the collapse plugin adds the appropriate classes that we use to style each element These classes control the overall appearance as well as the showing and hiding via CSS transitions You can modify any of this with custom CSS or overriding our default variables Its also worth noting that just about any HTML can go within the accordionbody though the transition does limit overflow                                Accordion Item                             This is the third items accordion body It is hidden by default until the collapse plugin adds the appropriate classes that we use to style each element These classes control the overall appearance as well as the showing and hiding via CSS transitions You can modify any of this with custom CSS or overriding our default variables Its also worth noting that just about any HTML can go within the accordionbody though the transition does limit overflow            AccessibilityPlease read the collapse accessibility section for more informationCSSVariablesAs part of ndbuikits evolving CSS variables approach accordions now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variables"},{"layout":"docs","title":"Alerts","description":"Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.","group":"components","toc":true,"skipSize":197,"id":"alerts.md","fullContent":"ExamplesAlerts are available for any length of text as well as an optional close button For proper styling use one of the eight required contextual classes eg  For inline dismissal use the alerts JavaScript plugindismissingindex SiteData themecolors   A simple  alertcheck it outLive exampleClick the button below to show an alert hidden with inline styles to start then dismiss and destroy it with the builtin close buttonShow live alertWe use the following JavaScript to trigger our live alert demo   Link colorUse the  utility class to quickly provide matching colored links within any alertindex SiteData themecolors   A simple  alert with an example link Give it a click if you likeAdditional contentAlerts can also contain additional HTML elements like headings paragraphs and dividers  Well done  Aww yeah you successfully read this important alert message This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content    Whenever you need to be sure to use margin utilities to keep things nice and tidyIconsSimilarly you can use flexbox utilities and ndbuikit Icons to create alerts with icons Depending on your icons and content you may want to add more utilities or custom styles              An example alert with an icon  Need more than one icon for your alerts Consider using more ndbuikit Icons and making a local SVG sprite like so to easily reference the same icons repeatedly                                An example alert with an icon          An example success alert with an icon          An example warning alert with an icon          An example danger alert with an icon  DismissingUsing the alert JavaScript plugin its possible to dismiss any alert inline Heres how Be sure youve loaded the alert plugin or the compiled ndbuikit JavaScript Add a close button and the  class which adds extra padding to the right of the alert and positions the close button On the close button add the  attribute which triggers the JavaScript functionality Be sure to use the  element with it for proper behavior across all devices To animate alerts when dismissing them be sure to add the  and  classesYou can see this in action with a live demo  Holy guacamole You should check in on some of those fields below  When an alert is dismissed the element is completely removed from the page structure If a keyboard user dismisses the alert using the close button their focus will suddenly be lost and depending on the browser reset to the start of the pagedocument For this reason we recommend including additional JavaScript that listens for the  event and programmatically sets  to the most appropriate location in the page If youre planning to move focus to a noninteractive element that normally does not receive focus make sure to add  to the elementCSSVariablesAs part of ndbuikits evolving CSS variables approach alerts now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variablesSass mixinUsed in combination with  to create contextual modifier classes for our alertsSass loopLoop that generates the modifier classes with the  mixinJavaScript behaviorInitializeInitialize elements as alertsFor the sole purpose of dismissing an alert it isnt necessary to initialize the component manually via the JS API By making use of  the component will be initialized automatically and properly dismissedSee the triggerstriggers section for more detailsTriggersNote that closing an alert will remove it from the DOMMethodsYou can create an alert instance with the alert constructor for exampleThis makes an alert listen for click events on descendant elements which have the  attribute Not necessary when using the dataapis autoinitialization Method  Description        Closes an alert by removing it from the DOM If the  and  classes are present on the element the alert will fade out before it is removed    Destroys an elements alert Removes stored data on the DOM element    Static method which allows you to get the alert instance associated to a DOM element For example     Static method which returns an alert instance associated to a DOM element or create a new one in case it wasnt initialized You can use it like this  Basic usageEventsndbuikits alert plugin exposes a few events for hooking into alert functionality Event  Description        Fires immediately when the  instance method is called    Fired when the alert has been closed and CSS transitions have completed"},{"layout":"docs","title":"Badges","description":"Documentation and examples for badges, our small count and labeling component.","group":"components","toc":true,"skipSize":155,"id":"badge.md","fullContent":"ExamplesBadges scale to match the size of the immediate parent element by using relative font sizing and  units As of v badges no longer have focus or hover styles for linksHeadingsExample heading NewExample heading NewExample heading NewExample heading NewExample heading NewExample heading NewButtonsBadges can be used as part of links or buttons to provide a counter  Notifications Note that depending on how they are used badges may be confusing for users of screen readers and similar assistive technologies While the styling of badges provides a visual cue as to their purpose these users will simply be presented with the content of the badge Depending on the specific situation these badges may seem like random additional words or numbers at the end of a sentence link or buttonUnless the context is clear as with the Notifications example where it is understood that the  is the number of notifications consider including additional context with a visually hidden piece of additional textPositionedUse utilities to modify a  and position it in the corner of a link or button  Inbox          unread messages  You can also replace the  class with a few more utilities without a count for a more generic indicator  Profile      New alerts  Background colorsSet a  with contrasting foreground  with our  helpers Previously it was required to manually pair your choice of  and  utilities for styling which you still may use if you preferindex SiteData themecolors Pill badgesUse the  utility class to make badges more rounded with a larger index SiteData themecolors CSSVariablesAs part of ndbuikits evolving CSS variables approach badges now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variables"},{"layout":"docs","title":"Breadcrumb","description":"Indicate the current page's location within a navigational hierarchy that automatically adds separators via CSS.","group":"components","toc":true,"skipSize":193,"id":"breadcrumb.md","fullContent":"ExampleUse an ordered or unordered list with linked list items to create a minimally styled breadcrumb Use our utilities to add additional styles as desired      Home        Home    Library        Home    Library    Data  DividersDividers are automatically added in CSS through httpsdevelopermozillaorgenUSdocsWebCSSbefore and httpsdevelopermozillaorgenUSdocsWebCSScontent They can be changed by modifying a local CSS custom property  or through the  Sass variable  and  for its RTL counterpart if needed We default to our Sass variable which is set as a fallback to the custom property This way you get a global divider that you can override without recompiling CSS at any time arialabelbreadcrumb      Home    Library  When modifying via Sass the quotehttpssasslangcomdocumentationmodulesstringquote function is required to generate the quotes around a string For example using  as the divider you can use thisIts also possible to use an embedded SVG icon Apply it via our CSS custom property or use the Sass variableUsing embedded SVGInlining SVG as data URI requires to URL escape a few characters most notably  and  Thats why the  variable is passed through our  Sass function When using the CSS custom property you need to URL escape your SVG on your own Read Kevin Webers explanations on CodePenhttpscodepeniokevinweberpendXWoRw  for detailed information on what to escape      Home    Library  You can also remove the divider setting  empty strings in CSS custom properties counts as a value or setting the Sass variable to       Home    Library  AccessibilitySince breadcrumbs provide a navigation its a good idea to add a meaningful label such as  to describe the type of navigation provided in the  element as well as applying an  to the last item of the set to indicate that it represents the current pageFor more information see the ARIA Authoring Practices Guide breadcrumb patternhttpswwwworgWAIARIAapgpatternsbreadcrumbCSSVariablesAs part of ndbuikits evolving CSS variables approach breadcrumbs now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variables"},{"layout":"docs","title":"Button group","description":"Group a series of buttons together on a single line or stack them in a vertical column.","group":"components","toc":true,"skipSize":170,"id":"button-group.md","fullContent":"Basic exampleWrap a series of buttons with  in   Left  Middle  Right Ensure correct  and provide a labelIn order for assistive technologies such as screen readers to convey that a series of buttons is grouped an appropriate  attribute needs to be provided For button groups this would be  while toolbars should have a In addition groups and toolbars should be given an explicit label as most assistive technologies will otherwise not announce them despite the presence of the correct role attribute In the examples provided here we use  but alternatives such as  can also be usedThese classes can also be added to groups of links as an alternative to the  navigation components  Active link  Link  LinkMixed styles  Left  Middle  RightOutlined styles  Left  Middle  RightCheckbox and radio button groupsCombine buttonlike checkbox and radio toggle buttons into a seamless looking button group    Checkbox     Checkbox     Checkbox     Radio     Radio     Radio Button toolbarCombine sets of button groups into button toolbars for more complex components Use utility classes as needed to space out groups buttons and more                                            Feel free to mix input groups with button groups in your toolbars Similar to the example above youll likely need some utilities though to space things properly                                                                SizingInstead of applying button sizing classes to every button in a group just add  to each  including each one when nesting multiple groups  Left  Middle  Right  Left  Middle  Right  Left  Middle  RightNestingPlace a  within another  when you want dropdown menus mixed with a series of buttons                Dropdown              Dropdown link      Dropdown link      Vertical variationMake a set of buttons appear vertically stacked rather than horizontally Split button dropdowns are not supported here  Button  Button  Button  Button  Button  Button  Button  Button            Dropdown              Dropdown link      Dropdown link        Button  Button            Dropdown              Dropdown link      Dropdown link                  Dropdown              Dropdown link      Dropdown link                  Dropdown              Dropdown link      Dropdown link          Radio     Radio     Radio"},{"layout":"docs","title":"Buttons","description":"Use ndb-uikit's custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.","group":"components","toc":true,"skipSize":205,"id":"buttons.md","fullContent":"Examplesndbuikit includes several predefined button styles each serving its own semantic purpose with a few extras thrown in for more controlindex SiteData themecolors LinkDisable text wrappingIf you dont want the button text to wrap you can add the  class to the button In Sass you can set  to disable text wrapping for each buttonButton tagsThe  classes are designed to be used with the  element However you can also use these classes on  or  elements though some browsers may apply a slightly different renderingWhen using button classes on  elements that are used to trigger inpage functionality like collapsing content rather than linking to new pages or sections within the current page these links should be given a  to appropriately convey their purpose to assistive technologies such as screen readersLinkButtonOutline buttonsIn need of a button but not the hefty background colors they bring Replace the default modifier classes with the  ones to remove all background images and colors on any buttonindex SiteData themecolors Some of the button styles use a relatively light foreground color and should only be used on a dark background in order to have sufficient contrastSizesFancy larger or smaller buttons Add  or  for additional sizesLarge buttonLarge buttonSmall buttonSmall buttonYou can even roll your own custom sizing with CSS variables  Custom buttonDisabled stateMake buttons look inactive by adding the  boolean attribute to any  element Disabled buttons have  applied to preventing hover and active states from triggeringPrimary buttonButtonPrimary buttonButtonDisabled buttons using the  element behave a bit different s dont support the  attribute so you must add the  class to make it visually appear disabled Some futurefriendly styles are included to disable all  on anchor buttons Disabled buttons using  should include the  attribute to indicate the state of the element to assistive technologies Disabled buttons using  should not include the  attributePrimary linkLinkLink functionality caveatTo cover cases where you have to keep the  attribute on a disabled link the  class uses  to try to disable the link functionality of s Note that this CSS property is not yet standardized for HTML but all modern browsers support it In addition even in browsers that do support  keyboard navigation remains unaffected meaning that sighted keyboard users and users of assistive technologies will still be able to activate these links So to be safe in addition to  also include a  attribute on these links to prevent them from receiving keyboard focus and use custom JavaScript to disable their functionality altogetherPrimary linkLinkBlock buttonsCreate responsive stacks of fullwidth block buttons like those in ndbuikit  with a mix of our display and gap utilities By using utilities instead of button specific classes we have much greater control over spacing alignment and responsive behaviors  Button  ButtonHere we create a responsive variation starting with vertically stacked buttons until the  breakpoint where  replaces the  class thus nullifying the  utility Resize your browser to see them change  Button  ButtonYou can adjust the width of your block buttons with grid column width classes For example for a halfwidth block button use  Center it horizontally with  too  Button  ButtonAdditional utilities can be used to adjust the alignment of buttons when horizontal Here weve taken our previous responsive example and added some flex utilities and a margin utility on the button to right align the buttons when theyre no longer stacked  Button  ButtonButton pluginThe button plugin allows you to create simple onoff toggle buttonsVisually these toggle buttons are identical to the checkbox toggle buttons However they are conveyed differently by assistive technologies the checkbox toggles will be announced by screen readers as checkednot checked since despite their appearance they are fundamentally still checkboxes whereas these toggle buttons will be announced as buttonbutton pressed The choice between these two approaches will depend on the type of toggle you are creating and whether or not the toggle will make sense to users when announced as a checkbox or as an actual buttonToggle statesAdd  to toggle a buttons  state If youre pretoggling a button you must manually add the  class and  to ensure that it is conveyed appropriately to assistive technologiesToggle buttonActive toggle buttonDisabled toggle buttonToggle linkActive toggle linkDisabled toggle linkMethodsYou can create a button instance with the button constructor for example Method  Description        Destroys an elements button Removes stored data on the DOM element    Static method which allows you to get the button instance associated to a DOM element you can use it like this    Static method which returns a button instance associated to a DOM element or create a new one in case it wasnt initialized You can use it like this     Toggles push state Gives the button the appearance that it has been activated For example to toggle all buttonsCSSVariablesAs part of ndbuikits evolving CSS variables approach buttons now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooEach  modifier class updates the appropriate CSS variables to minimize additional CSS rules with our   and  mixinsHeres an example of building a custom  modifier class like we do for the buttons unique to ourdocumentationby reassigning ndbuikits CSS variables with a mixture of our own CSS and Sass variables  Custom buttonSass variablesSass mixinsThere are three mixins for buttons button and button outline variant mixins both based on  plus a button size mixinSass loopsButton variants for regular and outline buttons use their respective mixins with our  map to generate the modifier classes in"},{"layout":"docs","title":"Cards","description":"ndb-uikit's cards provide a flexible and extensible content container with multiple variants and options.","group":"components","toc":true,"skipSize":181,"id":"card.md","fullContent":"AboutA card is a flexible and extensible content container It includes options for headers and footers a wide variety of content contextual background colors and powerful display options If youre familiar with ndbuikit  cards replace our old panels wells and thumbnails Similar functionality to those components is available as modifier classes for cardsExampleCards are built with as little markup and styles as possible but still manage to deliver a ton of control and customization Built with flexbox they offer easy alignment and mix well with other ndbuikit components They have no  by default so use spacing utilities as neededBelow is an example of a basic card with mixed content and a fixed width Cards have no fixed width to start so theyll naturally fill the full width of its parent element This is easily customized with our various sizing optionssizing        Card title    Some quick example text to build on the card title and make up the bulk of the cards content    Go somewhere  Content typesCards support a wide variety of content including images text list groups links and more Below are examples of whats supportedBodyThe building block of a card is the  Use it whenever you need a padded section within a card      This is some text within a card body  Titles text and linksCard titles are used by adding  to a  tag In the same way links are added and placed next to each other by adding  to an  tagSubtitles are used by adding a  to a  tag If the  and the  items are placed in a  item the card title and subtitle are aligned nicely      Card title    Card subtitle    Some quick example text to build on the card title and make up the bulk of the cards content    Card link    Another link  Images places an image to the top of the card With  text can be added to the card Text within  can also be styled with the standard HTML tags        Some quick example text to build on the card title and make up the bulk of the cards content  List groupsCreate lists of content in a card with a flush list group      An item    A second item    A third item        Featured        An item    A second item    A third item        An item    A second item    A third item        Card footer  Kitchen sinkMix and match multiple content types to create the card you need or throw everything in there Shown below are image styles blocks text styles and a list groupall wrapped in a fixedwidth card        Card title    Some quick example text to build on the card title and make up the bulk of the cards content        An item    A second item    A third item        Card link    Another link  Header and footerAdd an optional header andor footer within a card      Featured        Special title treatment    With supporting text below as a natural leadin to additional content    Go somewhere  Card headers can be styled by adding  to  elements  Featured      Special title treatment    With supporting text below as a natural leadin to additional content    Go somewhere        Quote              A wellknown quote contained in a blockquote element      Someone famous in Source Title            Featured        Special title treatment    With supporting text below as a natural leadin to additional content    Go somewhere         days ago  SizingCards assume no specific  to start so theyll be  wide unless otherwise stated You can change this as needed with custom CSS grid classes grid Sass mixins or utilitiesUsing grid markupUsing the grid wrap cards in columns and rows as needed                    Special title treatment        With supporting text below as a natural leadin to additional content        Go somewhere                                Special title treatment        With supporting text below as a natural leadin to additional content        Go somewhere            Using utilitiesUse our handful of available sizing utilities to quickly set a cards width      Card title    With supporting text below as a natural leadin to additional content    Button        Card title    With supporting text below as a natural leadin to additional content    Button  Using custom CSSUse custom CSS in your stylesheets or as inline styles to set a width      Special title treatment    With supporting text below as a natural leadin to additional content    Go somewhere  Text alignmentYou can quickly change the text alignment of any cardin its entirety or specific partswith our text align classes      Special title treatment    With supporting text below as a natural leadin to additional content    Go somewhere        Special title treatment    With supporting text below as a natural leadin to additional content    Go somewhere        Special title treatment    With supporting text below as a natural leadin to additional content    Go somewhere  NavigationAdd some navigation to a cards header or block with ndbuikits nav components                    Active                    Link                    Disabled                  Special title treatment    With supporting text below as a natural leadin to additional content    Go somewhere                      Active                    Link                    Disabled                  Special title treatment    With supporting text below as a natural leadin to additional content    Go somewhere  ImagesCards include a few options for working with images Choose from appending image caps at either end of a card overlaying images with card content or simply embedding the image in a cardImage capsSimilar to headers and footers cards can include top and bottom image capsimages at the top or bottom of a card        Card title    This is a wider card with supporting text below as a natural leadin to additional content This content is a little bit longer    Last updated  mins ago        Card title    This is a wider card with supporting text below as a natural leadin to additional content This content is a little bit longer    Last updated  mins ago    Image overlaysTurn an image into a card background and overlay your cards text Depending on the image you may or may not need additional styles or utilities        Card title    This is a wider card with supporting text below as a natural leadin to additional content This content is a little bit longer    Last updated  mins ago  Note that content should not be larger than the height of the image If content is larger than the image the content will be displayed outside the imageHorizontalUsing a combination of grid and utility classes cards can be made horizontal in a mobilefriendly and responsive way In the example below we remove the grid gutters with  and use  classes to make the card horizontal at the  breakpoint Further adjustments may be needed depending on your card content                                  Card title        This is a wider card with supporting text below as a natural leadin to additional content This content is a little bit longer        Last updated  mins ago            Card stylesCards include various options for customizing their backgrounds borders and colorBackground and colorSet a  with contrasting foreground  with our  helpers Previously it was required to manually pair your choice of  and  utilities for styling which you still may use if you preferindex SiteData themecolors   Header       card title    Some quick example text to build on the card title and make up the bulk of the cards content  BorderUse border utilities to change just the  of a card Note that you can put  classes on the parent  or a subset of the cards contents as shown belowindex SiteData themecolors   Header       card title    Some quick example text to build on the card title and make up the bulk of the cards content  Mixins utilitiesYou can also change the borders on the card header and footer as needed and even remove their  with   Header      Success card title    Some quick example text to build on the card title and make up the bulk of the cards content    FooterCard layoutIn addition to styling the content within cards ndbuikit includes a few options for laying out series of cards For the time being these layout options are not yet responsiveCard groupsUse card groups to render cards as a single attached element with equal width and height columns Card groups start off stacked and use  to become attached with uniform dimensions starting at the  breakpoint                Card title      This is a wider card with supporting text below as a natural leadin to additional content This content is a little bit longer      Last updated  mins ago                      Card title      This card has supporting text below as a natural leadin to additional content      Last updated  mins ago                      Card title      This is a wider card with supporting text below as a natural leadin to additional content This card has even longer content than the first to show that equal height action      Last updated  mins ago      When using card groups with footers their content will automatically line up                Card title      This is a wider card with supporting text below as a natural leadin to additional content This content is a little bit longer              Last updated  mins ago                      Card title      This card has supporting text below as a natural leadin to additional content              Last updated  mins ago                      Card title      This is a wider card with supporting text below as a natural leadin to additional content This card has even longer content than the first to show that equal height action              Last updated  mins ago      Grid cardsUse the ndbuikit grid system and its  classes to control how many grid columns wrapped around your cards you show per row For example heres  laying out the cards on one column and  splitting four cards to equal width across multiple rows from the medium breakpoint up                          Card title        This is a longer card with supporting text below as a natural leadin to additional content This content is a little bit longer                                      Card title        This is a longer card with supporting text below as a natural leadin to additional content This content is a little bit longer                                      Card title        This is a longer card with supporting text below as a natural leadin to additional content                                      Card title        This is a longer card with supporting text below as a natural leadin to additional content This content is a little bit longer            Change it to  and youll see the fourth card wrap                          Card title        This is a longer card with supporting text below as a natural leadin to additional content This content is a little bit longer                                      Card title        This is a longer card with supporting text below as a natural leadin to additional content This content is a little bit longer                                      Card title        This is a longer card with supporting text below as a natural leadin to additional content                                      Card title        This is a longer card with supporting text below as a natural leadin to additional content This content is a little bit longer            When you need equal height add  to the cards If you want equal heights by default you can set  in Sass                          Card title        This is a longer card with supporting text below as a natural leadin to additional content This content is a little bit longer                                      Card title        This is a short card                                      Card title        This is a longer card with supporting text below as a natural leadin to additional content                                      Card title        This is a longer card with supporting text below as a natural leadin to additional content This content is a little bit longer            Just like with card groups card footers will automatically line up                          Card title        This is a wider card with supporting text below as a natural leadin to additional content This content is a little bit longer                    Last updated  mins ago                                      Card title        This card has supporting text below as a natural leadin to additional content                    Last updated  mins ago                                      Card title        This is a wider card with supporting text below as a natural leadin to additional content This card has even longer content than the first to show that equal height action                    Last updated  mins ago            MasonryIn  we used a CSSonly technique to mimic the behavior of Masonryhttpsmasonrydesandrocomlike columns but this technique came with lots of unpleasant side effectshttpstwbsndbuikitpull If you want to have this type of layout in  you can just make use of Masonry plugin Masonry is not included in ndbuikit but weve made a demo example to help you get startedCSSVariablesAs part of ndbuikits evolving CSS variables approach cards now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variables"},{"layout":"docs","title":"Carousel","description":"A slideshow component for cycling through elements—images or slides of text—like a carousel.","group":"components","toc":true,"skipSize":171,"id":"carousel.md","fullContent":"How it worksThe carousel is a slideshow for cycling through a series of content built with CSS D transforms and a bit of JavaScript It works with a series of images text or custom markup It also includes support for previousnext controls and indicatorsIn browsers where the Page Visibility APIhttpswwwworgTRpagevisibility is supported the carousel will avoid sliding when the webpage is not visible to the user such as when the browser tab is inactive the browser window is minimized etcPlease be aware that nested carousels are not supported and carousels are generally not compliant with accessibility standardsExampleCarousels dont automatically normalize slide dimensions As such you may need to use additional utilities or custom styles to appropriately size content While carousels support previousnext controls and indicators theyre not explicitly required Add and customize as you see fitThe  class needs to be added to one of the slides otherwise the carousel will not be visible Also be sure to set a unique  on the  for optional controls especially if youre using multiple carousels on a single page Control and indicator elements must have a  attribute or  for links that matches the  of the  elementSlides onlyHeres a carousel with slides only Note the presence of the  and  on carousel images to prevent browser default image alignment                                              With controlsAdding in the previous and next controls We recommend using  elements but you can also use  elements with                                                         Previous            Next  With indicatorsYou can also add the indicators to the carousel alongside the controls too                                                                        Previous            Next  With captionsAdd captions to your slides easily with the  element within any  They can be easily hidden on smaller viewports as shown below with optional display utilities We hide them initially with  and bring them back on mediumsized devices with                                           First slide label        Some representative placeholder content for the first slide                                  Second slide label        Some representative placeholder content for the second slide                                  Third slide label        Some representative placeholder content for the third slide                      Previous            Next  CrossfadeAdd  to your carousel to animate slides with a fade transition instead of a slide Depending on your carousel content eg text only slides you may want to add  or some custom CSS to the s for proper crossfading                                                        Previous            Next  Individual  intervalAdd  to a  to change the amount of time to delay between automatically cycling to the next item                                                        Previous            Next  Disable touch swipingCarousels support swiping leftright on touchscreen devices to move between slides This can be disabled using the  attribute The example below also does not include the  attribute so it doesnt autoplay                                                        Previous            Next  Dark variantAdd  to the  for darker controls indicators and captions Controls have been inverted from their default white fill with the  CSS property Captions and controls have additional Sass variables that customize the  and                                           First slide label        Some representative placeholder content for the first slide                                  Second slide label        Some representative placeholder content for the second slide                                  Third slide label        Some representative placeholder content for the third slide                      Previous            Next  Custom transitionThe transition duration of  can be changed with the  Sass variable before compiling or custom styles if youre using the compiled CSS If multiple transitions are applied make sure the transform transition is defined first eg SassVariablesUsageVia data attributesUse data attributes to easily control the position of the carousel  accepts the keywords  or  which alters the slide position relative to its current position Alternatively use  to pass a raw slide index to the carousel  which shifts the slide position to a particular index beginning with The  attribute is used to mark a carousel as animating starting at page load If you dont use  to initialize your carousel you have to initialize it yourself It cannot be used in combination with redundant and unnecessary explicit JavaScript initialization of the same carouselVia JavaScriptCall carousel manually withOptions Name  Type  Default  Description            number    The amount of time to delay between automatically cycling an item    boolean    Whether the carousel should react to keyboard events    string boolean    If set to  pauses the cycling of the carousel on  and resumes the cycling of the carousel on  If set to  hovering over the carousel wont pause it On touchenabled devices when set to  cycling will pause on  once the user finished interacting with the carousel for two intervals before automatically resuming This is in addition to the mouse behavior    string boolean    If set to  autoplays the carousel after the user manually cycles the first item If set to  autoplays the carousel on load    boolean    Whether the carousel should support leftright swipe interactions on touchscreen devices    boolean    Whether the carousel should cycle continuously or have hard stops MethodsYou can create a carousel instance with the carousel constructor for example to initialize with additional options and start cycling through items Method  Description        Cycles through the carousel items from left to right    Destroys an elements carousel Removes stored data on the DOM element    Static method which allows you to get the carousel instance associated to a DOM element you can use it like this     Static method which returns a carousel instance associated to a DOM element or create a new one in case it wasnt initialized You can use it like this     Cycles to the next item Returns to the caller before the next item has been shown eg before the  event occurs    Dont cycle carousel to next when the page isnt visible or the carousel or its parent isnt visible Returns to the caller before the target item has been shown    Stops the carousel from cycling through items    Cycles to the previous item Returns to the caller before the previous item has been shown eg before the  event occurs    Cycles the carousel to a particular frame  based similar to an array Returns to the caller before the target item has been shown eg before the  event occurs Eventsndbuikits carousel class exposes two events for hooking into carousel functionality Both events have the following additional properties  The direction in which the carousel is sliding either  or   The DOM element that is being slid into place as the active item  The index of the current item  The index of the next itemAll carousel events are fired at the carousel itself ie at the  Event type  Description        Fired when the carousel has completed its slide transition    Fires immediately when the  instance method is invoked"},{"layout":"docs","title":"Close button","description":"A generic close button for dismissing content like modals and alerts.","group":"components","toc":true,"skipSize":152,"id":"close-button.md","fullContent":"ExampleProvide an option to dismiss or close a component with  Default styling is limited but highly customizable Modify the Sass variables to replace the default  Be sure to include text for screen readers as weve done with Disabled stateDisabled close buttons change their  Weve also applied  and  to preventing hover and active states from triggeringWhite variantChange the default  to be white with the  class This class uses the  property to invert the SassVariables"},{"layout":"docs","title":"Collapse","description":"Toggle the visibility of content across your project with a few classes and our JavaScript plugins.","group":"components","toc":true,"skipSize":178,"id":"collapse.md","fullContent":"How it worksThe collapse JavaScript plugin is used to show and hide content Buttons or anchors are used as triggers that are mapped to specific elements you toggle Collapsing an element will animate the  from its current value to  Given how CSS handles animations you cannot use  on a  element Instead use the class as an independent wrapping elementExampleClick the buttons below to show and hide another element via class changes  hides content  is applied during transitions  shows contentGenerally we recommend using a button with the  attribute While not recommended from a semantic point of view you can also use a link with the  attribute and a  In both cases the  is required      Link with href        Button with databstarget        Some placeholder content for the collapse component This panel is hidden by default but revealed when the user activates the relevant trigger  HorizontalThe collapse plugin also supports horizontal collapsing Add the  modifier class to transition the  instead of  and set a  on the immediate child element Feel free to write your own custom Sass use inline styles or use our width utilitiesPlease note that while the example below has a  set to avoid excessive repaints in our docs this is not explicitly required Only the  on the child element is required      Toggle width collapse              This is some placeholder content for a horizontal collapse Its hidden by default and shown when triggered      Multiple targetsA  or  can show and hide multiple elements by referencing them with a selector in its  or  attributeMultiple  or  can show and hide an element if they each reference it with their  or  attribute  Toggle first element  Toggle second element  Toggle both elements                    Some placeholder content for the first collapse component of this multicollapse example This panel is hidden by default but revealed when the user activates the relevant trigger                                Some placeholder content for the second collapse component of this multicollapse example This panel is hidden by default but revealed when the user activates the relevant trigger            AccessibilityBe sure to add  to the control element This attribute explicitly conveys the current state of the collapsible element tied to the control to screen readers and similar assistive technologies If the collapsible element is closed by default the attribute on the control element should have a value of  If youve set the collapsible element to be open by default using the  class set  on the control instead The plugin will automatically toggle this attribute on the control based on whether or not the collapsible element has been opened or closed via JavaScript or because the user triggered another control element also tied to the same collapsible element If the control elements HTML element is not a button eg an  or  the attribute  should be added to the elementIf your control element is targeting a single collapsible element  ie the  attribute is pointing to an  selector  you should add the  attribute to the control element containing the  of the collapsible element Modern screen readers and similar assistive technologies make use of this attribute to provide users with additional shortcuts to navigate directly to the collapsible element itselfNote that ndbuikits current implementation does not cover the various optional keyboard interactions described in the ARIA Authoring Practices Guide accordion patternhttpswwwworgWAIARIAapgpatternsaccordion  you will need to include these yourself with custom JavaScriptSassVariablesClassesCollapse transition classes can be found in  as these are shared across multiple components collapse and accordionUsageThe collapse plugin utilizes a few classes to handle the heavy lifting  hides the content  shows the content  is added when the transition starts and removed when it finishesThese classes can be found in Via data attributesJust add  and a  to the element to automatically assign control of one or more collapsible elements The  attribute accepts a CSS selector to apply the collapse to Be sure to add the class  to the collapsible element If youd like it to default open add the additional class To add accordionlike group management to a collapsible area add the data attribute  Refer to the accordion page for more informationVia JavaScriptEnable manually withOptions Name  Type  Default  Description           selector jQuery object DOM element    If parent is provided then all collapsible elements under the specified parent will be closed when this collapsible item is shown similar to traditional accordion behavior  this is dependent on the  class The attribute has to be set on the target collapsible area   boolean    Toggles the collapsible element on invocation MethodsActivates your content as a collapsible element Accepts an optional options You can create a collapse instance with the constructor for example Method  Description        Destroys an elements collapse Removes stored data on the DOM element    Static method which allows you to get the collapse instance associated to a DOM element you can use it like this     Static method which returns a collapse instance associated to a DOM element or create a new one in case it wasnt initialized You can use it like this     Hides a collapsible element Returns to the caller before the collapsible element has actually been hidden eg before the  event occurs    Shows a collapsible element Returns to the caller before the collapsible element has actually been shown eg before the  event occurs    Toggles a collapsible element to shown or hidden Returns to the caller before the collapsible element has actually been shown or hidden ie before the  or  event occurs Eventsndbuikits collapse class exposes a few events for hooking into collapse functionality Event type  Description        This event is fired immediately when the  method has been called    This event is fired when a collapse element has been hidden from the user will wait for CSS transitions to complete    This event fires immediately when the  instance method is called    This event is fired when a collapse element has been made visible to the user will wait for CSS transitions to complete"},{"layout":"docs","title":"Dropdowns","description":"Toggle contextual overlays for displaying lists of links and more with the ndb-uikit dropdown plugin.","group":"components","toc":true,"skipSize":181,"id":"dropdowns.md","fullContent":"OverviewDropdowns are toggleable contextual overlays for displaying lists of links and more Theyre made interactive with the included ndbuikit dropdown JavaScript plugin Theyre toggled by clicking not by hovering this is an intentional design decisionhttpsmarkdottocomndbuikitexplaineddropdownsDropdowns are built on a third party library Popperhttpspopperjsorg which provides dynamic positioning and viewport detection Be sure to include popperminjs before ndbuikits JavaScript or use    which contains Popper Popper isnt used to position dropdowns in navbars though as dynamic positioning isnt requiredAccessibilityThe WAI ARIAhttpswwwworgTRwaiaria standard defines an actual  widgethttpswwwworgTRwaiariamenu but this is specific to applicationlike menus which trigger actions or functions ARIA menus can only contain menu items checkbox menu items radio button menu items radio button groups and submenusndbuikits dropdowns on the other hand are designed to be generic and applicable to a variety of situations and markup structures For instance it is possible to create dropdowns that contain additional inputs and form controls such as search fields or login forms For this reason ndbuikit does not expect nor automatically add any of the  and  attributes required for true ARIA menus Authors will have to include these more specific attributes themselvesHowever ndbuikit does add builtin support for most standard keyboard menu interactions such as the ability to move through individual  elements using the cursor keys and close the menu with the ESC keyExamplesWrap the dropdowns toggle your button or link and the dropdown menu within  or another element that declares  Dropdowns can be triggered from  or  elements to better fit your potential needs The examples shown here use semantic  elements where appropriate but custom markup is supportedSingle buttonAny single  can be turned into a dropdown toggle with some markup changes Heres how you can put them to work with either  elements      Dropdown button        Action    Another action    Something else here  And with  elements      Dropdown link        Action    Another action    Something else here  The best part is you can do this with any button variant too      Primary          Action      Another action      Something else here            Separated link            Secondary          Action      Another action      Something else here            Separated link            Success          Action      Another action      Something else here            Separated link            Info          Action      Another action      Something else here            Separated link            Warning          Action      Another action      Something else here            Separated link            Danger          Action      Another action      Something else here            Separated link      Split buttonSimilarly create split button dropdowns with virtually the same markup as single button dropdowns but with the addition of  for proper spacing around the dropdown caretWe use this extra class to reduce the horizontal  on either side of the caret by  and remove the  thats added for regular button dropdowns Those extra changes keep the caret centered in the split button and provide a more appropriately sized hit area next to the main button      Primary          Toggle Dropdown              Action      Another action      Something else here            Separated link            Secondary          Toggle Dropdown              Action      Another action      Something else here            Separated link            Success          Toggle Dropdown              Action      Another action      Something else here            Separated link            Info          Toggle Dropdown              Action      Another action      Something else here            Separated link            Warning          Toggle Dropdown              Action      Another action      Something else here            Separated link            Danger          Toggle Dropdown              Action      Another action      Something else here            Separated link      SizingButton dropdowns work with buttons of all sizes including default and split dropdown buttons            Large button              Action      Another action      Something else here            Separated link            Large split button          Toggle Dropdown              Action      Another action      Something else here            Separated link                  Small button              Action      Another action      Something else here            Separated link            Small split button          Toggle Dropdown              Action      Another action      Something else here            Separated link      Dark dropdownsOpt into darker dropdowns to match a dark navbar or custom style by adding  onto an existing  No changes are required to the dropdown items      Dropdown button        Action    Another action    Something else here        Separated link  And putting it to use in a navbar      Navbar                                                      Dropdown                                Action            Another action            Something else here                              Directions RTLDirections are mirrored when using ndbuikit in RTL meaning  will appear on the right sideCenteredMake the dropdown menu centered below the toggle with  on the parent element      Centered dropdown        Action    Action two    Action three  DropupTrigger dropdown menus above elements by adding  to the parent element            Dropup              Action      Another action      Something else here            Separated link                  Split dropup              Toggle Dropdown              Action      Another action      Something else here            Separated link      Dropup centeredMake the dropup menu centered above the toggle with  on the parent element      Centered dropup        Action    Action two    Action three  DropendTrigger dropdown menus at the right of the elements by adding  to the parent element            Dropend              Action      Another action      Something else here            Separated link                  Split dropend              Toggle Dropend              Action      Another action      Something else here            Separated link      DropstartTrigger dropdown menus at the left of the elements by adding  to the parent element            Dropstart              Action      Another action      Something else here            Separated link                  Toggle Dropstart              Action      Another action      Something else here            Separated link              Split dropstart      Menu itemsYou can use  or  elements as dropdown items      Dropdown        Action    Another action    Something else here  You can also create noninteractive dropdown items with  Feel free to style further with custom CSS or text utilities  Dropdown item text  Action  Another action  Something else hereActiveAdd  to items in the dropdown to style them as active To convey the active state to assistive technologies use the  attribute  using the  value for the current page or  for the current item in a set  Regular link  Active link  Another linkDisabledAdd  to items in the dropdown to style them as disabled  Regular link  Disabled link  Another linkMenu alignmentBy default a dropdown menu is automatically positioned  from the top and along the left side of its parent You can change this with the directional  classes but you can also control them with additional modifier classesAdd  to a  to right align the dropdown menu Directions are mirrored when using ndbuikit in RTL meaning  will appear on the left sideHeads up Dropdowns are positioned thanks to Popper except when they are contained in a navbar      Rightaligned menu example        Action    Another action    Something else here  Responsive alignmentIf you want to use responsive alignment disable dynamic positioning by adding the  attribute and use the responsive variation classesTo align right the dropdown menu with the given breakpoint or larger add       Leftaligned but right aligned when large screen        Action    Another action    Something else here  To align left the dropdown menu with the given breakpoint or larger add  and       Rightaligned but left aligned when large screen        Action    Another action    Something else here  Note that you dont need to add a  attribute to dropdown buttons in navbars since Popper isnt used in navbarsAlignment optionsTaking most of the options shown above heres a small kitchen sink demo of various dropdown alignment options in one place      Dropdown        Menu item    Menu item    Menu item        Rightaligned menu        Menu item    Menu item    Menu item        Leftaligned rightaligned lg        Menu item    Menu item    Menu item        Rightaligned leftaligned lg        Menu item    Menu item    Menu item        Dropstart        Menu item    Menu item    Menu item        Dropend        Menu item    Menu item    Menu item        Dropup        Menu item    Menu item    Menu item  Menu contentHeadersAdd a header to label sections of actions in any dropdown menu  Dropdown header  Action  Another actionDividersSeparate groups of related menu items with a divider  Action  Another action  Something else here    Separated linkTextPlace any freeform text within a dropdown menu with text and use spacing utilities Note that youll likely need additional sizing styles to constrain the menu width      Some example text thats freeflowing within the dropdown menu        And this is more example text  FormsPut a form within a dropdown menu or make it into a dropdown menu and use margin or padding utilities to give it the negative space you require            Email address                    Password                                              Remember me                      Sign in      New around here Sign up  Forgot password      Dropdown form              Email address                    Password                                              Remember me                      Sign in  Dropdown optionsUse  or  to change the location of the dropdown            Offset              Action      Another action      Something else here            Reference          Toggle Dropdown              Action      Another action      Something else here            Separated link      Auto close behaviorBy default the dropdown menu is closed when clicking inside or outside the dropdown menu You can use the  option to change this behavior of the dropdown      Default dropdown        Menu item    Menu item    Menu item        Clickable outside        Menu item    Menu item    Menu item        Clickable inside        Menu item    Menu item    Menu item        Manual close        Menu item    Menu item    Menu item  CSSVariablesAs part of ndbuikits evolving CSS variables approach dropdowns now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooCustomization through CSS variables can be seen on the  class where we override specific values without adding duplicate CSS selectorsSass variablesVariables for all dropdownsVariables for the dark dropdowndarkdropdownsVariables for the CSSbased carets that indicate a dropdowns interactivityMixinsMixins are used to generate the CSSbased carets and can be found in UsageVia data attributes or JavaScript the dropdown plugin toggles hidden content dropdown menus by toggling the  class on the parent  The  attribute is relied on for closing dropdown menus at an application level so its a good idea to always use itOn touchenabled devices opening a dropdown adds empty  handlers to the immediate children of the  element This admittedly ugly hack is necessary to work around a quirk in iOS event delegationhttpswwwquirksmodeorgblogarchivesmouseeventbubhtml which would otherwise prevent a tap anywhere outside of the dropdown from triggering the code that closes the dropdown Once the dropdown is closed these additional empty  handlers are removedVia data attributesAdd  to a link or button to toggle a dropdownVia JavaScriptCall the dropdowns via JavaScript  still requiredRegardless of whether you call your dropdown via JavaScript or instead use the dataapi  is always required to be present on the dropdowns trigger elementOptions Name  Type  Default  Description            boolean string    Configure the auto close behavior of the dropdown   the dropdown will be closed by clicking outside or inside the dropdown menu  the dropdown will be closed by clicking the toggle button and manually calling  or  method Also will not be closed by pressing esc key  the dropdown will be closed only by clicking inside the dropdown menu    the dropdown will be closed only by clicking outside the dropdown menu Note the dropdown can always be closed with the ESC key    string element    Overflow constraint boundary of the dropdown menu applies only to Poppers preventOverflow modifier By default its  and can accept an HTMLElement reference via JavaScript only For more information refer to Poppers detectOverflow docshttpspopperjsorgdocsvutilsdetectoverflowboundary    string    By default we use Popper for dynamic positioning Disable this with     number string function     Offset of the dropdown relative to its target You can pass a string in data attributes with comma separated values like  When a function is used to determine the offset it is called with an object containing the popper placement the reference and popper rects as its first argument The triggering element DOM node is passed as the second argument The function must return an array with two numbers skiddinghttpspopperjsorgdocsvmodifiersoffsetskidding distancehttpspopperjsorgdocsvmodifiersoffsetdistance For more information refer to Poppers offset docshttpspopperjsorgdocsvmodifiersoffsetoptions    null object function    To change ndbuikits default Popper config see Poppers configurationhttpspopperjsorgdocsvconstructorsoptions When a function is used to create the Popper configuration its called with an object that contains the ndbuikits default Popper configuration It helps you use and merge the default with your own configuration The function must return a configuration object for Popper    string element    Reference element of the dropdown menu Accepts the values of   an HTMLElement reference or an object providing  For more information refer to Poppers constructor docshttpspopperjsorgdocsvconstructorscreatepopper and virtual element docshttpspopperjsorgdocsvvirtualelements  Using function with Methods Method  Description        Destroys an elements dropdown Removes stored data on the DOM element    Static method which allows you to get the dropdown instance associated to a DOM element you can use it like this     Static method which returns a dropdown instance associated to a DOM element or create a new one in case it wasnt initialized You can use it like this     Hides the dropdown menu of a given navbar or tabbed navigation    Shows the dropdown menu of a given navbar or tabbed navigation    Toggles the dropdown menu of a given navbar or tabbed navigation    Updates the position of an elements dropdown EventsAll dropdown events are fired at the toggling element and then bubbled up So you can also add event listeners on the s parent element  and  events have a  property only when the original Event type is  that contains an Event Object for the click event Event type  Description        Fires immediately when the  instance method has been called    Fired when the dropdown has finished being hidden from the user and CSS transitions have completed    Fires immediately when the  instance method is called    Fired when the dropdown has been made visible to the user and CSS transitions have completed"},{"layout":"docs","title":"List group","description":"List groups are a flexible and powerful component for displaying a series of content. Modify and extend them to support just about any content within.","group":"components","toc":true,"skipSize":231,"id":"list-group.md","fullContent":"Basic exampleThe most basic list group is an unordered list with list items and the proper classes Build upon it with the options that follow or with your own CSS as needed  An item  A second item  A third item  A fourth item  And a fifth oneActive itemsAdd  to a  to indicate the current active selection  An active item  A second item  A third item  A fourth item  And a fifth oneDisabled itemsAdd  to a  to make it appear disabled Note that some elements with  will also require custom JavaScript to fully disable their click events eg links  A disabled item  A second item  A third item  A fourth item  And a fifth oneLinks and buttonsUse s or s to create actionable list group items with hover disabled and active states by adding  We separate these pseudoclasses to ensure list groups made of noninteractive elements like s or s dont provide a click or tap affordanceBe sure to not use the standard  classes here      The current link item    A second link item  A third link item  A fourth link item  A disabled link itemWith s you can also make use of the  attribute instead of the  class Sadly s dont support the disabled attribute      The current button    A second button item  A third button item  A fourth button item  A disabled button itemFlushAdd  to remove some borders and rounded corners to render list group items edgetoedge in a parent container eg cards  An item  A second item  A third item  A fourth item  And a fifth oneNumberedAdd the  modifier class and optionally use an  element to opt into numbered list group items Numbers are generated via CSS as opposed to a s default browser styling for better placement inside list group items and to allow for better customizationNumbers are generated by  on the  and then styled and placed with a  pseudoelement on the  with  and   A list item  A list item  A list itemThese work great with custom content as well            Subheading      Content for list item                      Subheading      Content for list item                      Subheading      Content for list item          HorizontalAdd  to change the layout of list group items from vertical to horizontal across all breakpoints Alternatively choose a responsive variant  to make a list group horizontal starting at that breakpoints  Currently horizontal list groups cannot be combined with flush list groupsProTip Want equalwidth list group items when horizontal Add  to each list group item  An item  A second item  A third itemContextual classesUse contextual classes to style list items with a stateful background and color  A simple default list group itemindex SiteData themecolors   A simple  list group itemContextual classes also work with  Note the addition of the hover styles here not present in the previous example Also supported is the  state apply it to indicate an active selection on a contextual list group item  A simple default list group itemindex SiteData themecolors   A simple  list group itemWith badgesAdd badges to any list group item to show unread counts activity and more with the help of some utilities      A list item            A second list item            A third list item      Custom contentAdd nearly any HTML within even for linked list groups like the one below with the help of flexbox utilities            List group item heading       days ago        Some placeholder content in a paragraph    And some small print              List group item heading       days ago        Some placeholder content in a paragraph    And some muted small print              List group item heading       days ago        Some placeholder content in a paragraph    And some muted small print  Checkboxes and radiosPlace ndbuikits checkboxes and radios within list group items and customize as needed You can use them without s but please remember to include an  attribute and value for accessibility          First checkbox            Second checkbox            Third checkbox            First radio            Second radio            Third radio  You can use  on s to make the whole list group item clickable          First checkbox            Second checkbox            Third checkbox  CSSVariablesAs part of ndbuikits evolving CSS variables approach list groups now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variablesMixinsUsed in combination with  to generate the contextual variant classescontextualclasses for sLoopLoop that generates the modifier classes with the  mixinJavaScript behaviorUse the tab JavaScript plugininclude it individually or through the compiled  fileto extend our list group to create tabbable panes of local content                    Home        Profile        Messages        Settings                                      Some placeholder content in a paragraph relating to Home And some more content used here just to pad out and fill this tab panel In production you would obviously have more real content here And not just text It could be anything really Text images forms                          Some placeholder content in a paragraph relating to Profile And some more content used here just to pad out and fill this tab panel In production you would obviously have more real content here And not just text It could be anything really Text images forms                          Some placeholder content in a paragraph relating to Messages And some more content used here just to pad out and fill this tab panel In production you would obviously have more real content here And not just text It could be anything really Text images forms                          Some placeholder content in a paragraph relating to Settings And some more content used here just to pad out and fill this tab panel In production you would obviously have more real content here And not just text It could be anything really Text images forms                    Using data attributesYou can activate a list group navigation without writing any JavaScript by simply specifying  or on an element Use these data attributes on Via JavaScriptEnable tabbable list item via JavaScript each list item needs to be activated individuallyYou can activate individual list item in several waysFade effectTo make tabs panel fade in add  to each  The first tab pane must also have  to make the initial content visibleMethods constructorActivates a list item element and content container Tab should have either a  or an  targeting a container node in the DOM showSelects the given list item and shows its associated pane Any other list item that was previously selected becomes unselected and its associated pane is hidden Returns to the caller before the tab pane has actually been shown for example before the  event occurs disposeDestroys an elements tab getInstanceStatic method which allows you to get the tab instance associated with a DOM element getOrCreateInstanceStatic method which allows you to get the tab instance associated with a DOM element or create a new one in case it wasnt initializedEventsWhen showing a new tab the events fire in the following order  on the current active tab  on the tobeshown tab  on the previous active tab the same one as for the  event  on the newlyactive justshown tab the same one as for the  eventIf no tab was already active the  and  events will not be fired Event type  Description        This event fires when a new tab is to be shown and thus the previous active tab is to be hidden Use  and  to target the current active tab and the new soontobeactive tab respectively    This event fires after a new tab is shown and thus the previous active tab is hidden Use  and  to target the previous active tab and the new active tab respectively    This event fires on tab show but before the new tab has been shown Use  and  to target the active tab and the previous active tab if available respectively    This event fires on tab show after a tab has been shown Use  and  to target the active tab and the previous active tab if available respectively"},{"layout":"docs","title":"Modal","description":"Use ndb-uikit's JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.","group":"components","toc":true,"skipSize":209,"id":"modal.md","fullContent":"How it worksBefore getting started with ndbuikits modal component be sure to read the following as our menu options have recently changed Modals are built with HTML CSS and JavaScript Theyre positioned over everything else in the document and remove scroll from the  so that modal content scrolls instead Clicking on the modal backdrop will automatically close the modal ndbuikit only supports one modal window at a time Nested modals arent supported as we believe them to be poor user experiences Modals use  which can sometimes be a bit particular about its rendering Whenever possible place your modal HTML in a toplevel position to avoid potential interference from other elements Youll likely run into issues when nesting a  within another fixed element Once again due to  there are some caveats with using modals on mobile devices See our browser support docs for details Due to how HTML defines its semantics the  HTML attributehttpsdevelopermozillaorgenUSdocsWebHTMLElementinputattrautofocus has no effect in ndbuikit modals To achieve the same effect use some custom JavaScriptKeep reading for demos and usage guidelinesExamplesModal componentsBelow is a static modal example meaning its  and  have been overridden Included are the modal header modal body required for  and modal footer optional We ask that you include modal headers with dismiss actions whenever possible or provide another explicit dismiss action                              Modal title                                    Modal body text goes here                          Close          Save changes                    Live demoToggle a working modal demo by clicking the button below It will slide down and fade in from the top of the page                    Modal title                            Woohoo youre reading this text in a modal                    Close        Save changes                  Launch demo modal  Static backdropWhen backdrop is set to static the modal will not close when clicking outside of it Click the button below to try it                    Modal title                            I will not close if you click outside of me Dont even try to press escape key                    Close        Understood                  Launch static backdrop modal  Scrolling long contentWhen modals become too long for the users viewport or device they scroll independent of the page itself Try the demo below to see what we mean                    Modal title                            This is some placeholder content to show the scrolling behavior for modals Instead of repeating the text the modal we use an inline style set a minimum height thereby extending the length of the overall modal and demonstrating the overflow scrolling When content becomes longer than the height of the viewport scrolling will move the modal as needed                    Close        Save changes                  Launch demo modal  You can also create a scrollable modal that allows scroll the modal body by adding  to                     Modal title                            This is some placeholder content to show the scrolling behavior for modals We use repeated line breaks to demonstrate how content can exceed minimum inner height thereby showing inner scrolling When content becomes longer than the predefined maxheight of modal content will be cropped and scrollable within the modal                This content should appear at the bottom after you scroll                    Close        Save changes                  Launch demo modal  Vertically centeredAdd  to  to vertically center the modal                    Modal title                            This is a vertically centered modal                    Close        Save changes                                Modal title                            This is some placeholder content to show a vertically centered modal Weve added some extra copy here to show how vertically centering the modal works when combined with scrollable modals We also use some repeated line breaks to quickly extend the height of the content thereby triggering the scrolling When content becomes longer than the predefined maxheight of modal content will be cropped and scrollable within the modal                Just like that                    Close        Save changes                  Vertically centered modal        Vertically centered scrollable modal  Tooltips and popoversTooltips and popovers can be placed within modals as needed When modals are closed any tooltips and popovers within are also automatically dismissed                    Modal title                            Popover in a modal        This button triggers a popover on click                Tooltips in a modal        This link and that link have tooltips on hover                    Close        Save changes                  Launch demo modal  Using the gridUtilize the ndbuikit grid system within a modal by nesting  within the  Then use the normal grid system classes as you would anywhere else                    Grids in modals                                                  colmd            colmd msauto                                colmd msauto            colmd msauto                                colmd msauto                                              Level  colsm                                                Level  col colsm                                                  Level  col colsm                                                                                Close        Save changes              Launch demo modalVarying modal contentHave a bunch of buttons that all trigger the same modal with slightly different contents Use  and HTML  attributeshttpsdevelopermozillaorgenUSdocsLearnHTMLHowtoUsedataattributes to vary the contents of the modal depending on which button was clickedBelow is a live demo followed by example HTML and JavaScript For more information read the modal events docsevents for details on Open modal for mdoOpen modal for fatOpen modal for getndbuikit                    New message                                                  Recipient                                            Message                                                  Close        Send message            New message to Toggle between modalsToggle between multiple modals with some clever placement of the  and  attributes For example you could toggle a password reset modal from within an already open sign in modal Please note multiple modals cannot be open at the same timethis method simply toggles between two separate modals                    Modal                             Show a second modal and hide this one with the button below                    Open second modal                                Modal                             Hide this modal and show the first with the button below                    Back to first            Open first modalChange animationThe  variable determines the transform state of  before the modal fadein animation the  variable determines the transform of  at the end of the modal fadein animationIf you want for example a zoomin animation you can set Remove animationFor modals that simply appear rather than fade in to view remove the  class from your modal markupDynamic heightsIf the height of a modal changes while it is open you should call  to readjust the modals position in case a scrollbar appearsAccessibilityBe sure to add  referencing the modal title to  Additionally you may give a description of your modal dialog with  on  Note that you dont need to add  since we already add it via JavaScriptEmbedding YouTube videosEmbedding YouTube videos in modals requires additional JavaScript not in ndbuikit to automatically stop playback and more See this helpful Stack Overflow posthttpsstackoverflowcomquestionsndbuikitandyoutubeinmodal for more informationOptional sizesModals have three optional sizes available via modifier classes to be placed on a  These sizes kick in at certain breakpoints to avoid horizontal scrollbars on narrower viewports Size  Class  Modal maxwidth       Small      Default  None    Large      Extra large     Our default modal without modifier class constitutes the medium size modal  Extra large modal  Large modal  Small modal                    Extra large modal                                                            Large modal                                                            Small modal                                        Fullscreen ModalAnother override is the option to pop up a modal that covers the user viewport available via modifier classes that are placed on a  Class  Availability          Always                       Full screen  Full screen below sm  Full screen below md  Full screen below lg  Full screen below xl  Full screen below xxl                    Full screen modal                                                Close                                Full screen below sm                                                Close                                Full screen below md                                                Close                                Full screen below lg                                                Close                                Full screen below xl                                                Close                                Full screen below xxl                                                Close            CSSVariablesAs part of ndbuikits evolving CSS variables approach modals now use local CSS variables on  and  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variablesLoopResponsive fullscreen modalsfullscreenmodal are generated via the  map and a loop in UsageThe modal plugin toggles your hidden content on demand via data attributes or JavaScript It also overrides default scrolling behavior and generates a  to provide a click area for dismissing shown modals when clicking outside the modalVia data attributes ToggleActivate a modal without writing JavaScript Set  on a controller element like a button along with a  or  to target a specific modal to toggle DismissWhile both ways to dismiss a modal are supported keep in mind that dismissing from outside a modal does not match the ARIA Authoring Practices Guide dialog modal patternhttpswwwworgWAIARIAapgpatternsdialogmodal Do this at your own riskVia JavaScriptCreate a modal with a single line of JavaScriptOptions Name  Type  Default  Description            boolean     Includes a modalbackdrop element Alternatively specify  for a backdrop which doesnt close the modal when clicked    boolean    Puts the focus on the modal when initialized    boolean    Closes the modal when escape key is pressed Methods Passing optionsActivates your content as a modal Accepts an optional options  Method  Description        Destroys an elements modal Removes stored data on the DOM element    Static method which allows you to get the modal instance associated with a DOM element    Static method which allows you to get the modal instance associated with a DOM element or create a new one in case it wasnt initialized    Manually readjust the modals position if the height of a modal changes while it is open ie in case a scrollbar appears    Manually hides a modal Returns to the caller before the modal has actually been hidden ie before the  event occurs    Manually opens a modal Returns to the caller before the modal has actually been shown ie before the  event occurs Also you can pass a DOM element as an argument that can be received in the modal events as the  property ie     Manually toggles a modal Returns to the caller before the modal has actually been shown or hidden ie before the  or  event occurs Eventsndbuikits modal class exposes a few events for hooking into modal functionality All modal events are fired at the modal itself ie at the  Event  Description        This event is fired immediately when the  instance method has been called    This event is fired when the modal has finished being hidden from the user will wait for CSS transitions to complete    This event is fired when the modal is shown its backdrop is  and a click outside of the modal is performed The event is also fired when the escape key is pressed and the  option is set to     This event fires immediately when the  instance method is called If caused by a click the clicked element is available as the  property of the event    This event is fired when the modal has been made visible to the user will wait for CSS transitions to complete If caused by a click the clicked element is available as the  property of the event"},{"layout":"docs","title":"Navbar","description":"Documentation and examples for ndb-uikit's powerful, responsive navigation header, the navbar. Includes support for branding, navigation, and more, including support for our collapse plugin.","group":"components","toc":true,"skipSize":267,"id":"navbar.md","fullContent":"How it worksHeres what you need to know before getting started with the navbar Navbars require a wrapping  with  for responsive collapsing and color schemecolorschemes classes Navbars and their contents are fluid by default Change the containercontainers to limit their horizontal width in different ways Use our spacing and flex utility classes for controlling spacing and alignment within navbars Navbars are responsive by default but you can easily modify them to change that Responsive behavior depends on our Collapse JavaScript plugin Ensure accessibility by using a  element or if using a more generic element such as a  add a  to every navbar to explicitly identify it as a landmark region for users of assistive technologies Indicate the current item by using  for the current page or  for the current item in a set New in v Navbars can be themed with CSS variables that are scoped to the  base class  has been deprecated and  has been rewritten to override CSS variables instead of adding additional stylesSupported contentNavbars come with builtin support for a handful of subcomponents Choose from the following as needed  for your company product or project name  for a fullheight and lightweight navigation including support for dropdowns  for use with our collapse plugin and other navigation togglingresponsivebehaviors behaviors Flex and spacing utilities for any form controls and actions  for adding vertically centered strings of text  for grouping and hiding navbar contents by a parent breakpoint Add an optional  to set a  and scroll expanded navbar contentscrollingHeres an example of all the subcomponents included in a responsive lightthemed navbar that automatically collapses at the  large breakpoint      Navbar                                          Home                          Link                                      Dropdown                                Action            Another action                        Something else here                                    Disabled                                    Search            This example uses background  and spacing     utility classesBrandThe  can be applied to most elements but an anchor works best as some elements might require utility classes or custom styles TextAdd your text within an element with the  class      Navbar        Navbar   ImageYou can replace the text within the  with an             assetsbrandndbuikitlogosvg altndbuikit width height       Image and textYou can also make use of some additional utilities to add an image and text at the same time Note the addition of  and  on the             assetsbrandndbuikitlogosvg altLogo width height classdinlineblock aligntexttop      ndbuikit      NavNavbar navigation links build on our  options with their own modifier class and require the use of toggler classestoggler for proper responsive styling Navigation in navbars will also grow to occupy as much horizontal space as possible to keep your navbar contents securely alignedAdd the  class on  to indicate the current pagePlease note that you should also add the  attribute on the active       Navbar                                          Home                          Features                          Pricing                          Disabled                    And because we use classes for our navs you can avoid the listbased approach entirely if you like      Navbar                                Home        Features        Pricing        Disabled            You can also use dropdowns in your navbar Dropdown menus require a wrapping element for positioning so be sure to use separate and nested elements for  and  as shown below      Navbar                                          Home                          Features                          Pricing                                      Dropdown link                                Action            Another action            Something else here                              FormsPlace various form controls and components within a navbar                  Search      Immediate child elements of  use flex layout and will default to  Use additional flex utilities as needed to adjust this behavior      Navbar                Search      Input groups work too If your navbar is an entire form or mostly a form you can use the  element as the container and save some HTML                        Various buttons are supported as part of these navbar forms too This is also a great reminder that vertical alignment utilities can be used to align different sized elements      Main button    Smaller button  TextNavbars may contain bits of text with the help of  This class adjusts vertical alignment and horizontal spacing for strings of text            Navbar text with an inline element      Mix and match with other components and utilities as needed      Navbar w text                                          Home                          Features                          Pricing                            Navbar text with an inline element            Color schemesNew in v Navbar theming is now powered by CSS variables and  has been deprecated CSS variables are applied to  defaulting to the light appearance and can be overridden with Navbar themes are easier than ever thanks to ndbuikits combination of Sass and CSS variables The default is our light navbar for use with light background colors but you can also apply  for dark background colors Then customize with  utilities            Navbar                                                        Home                                Features                                Pricing                                About                                              Search                                Navbar                                                        Home                                Features                                Pricing                                About                                              Search                                Navbar                                                        Home                                Features                                Pricing                                About                                              Search                    ContainersAlthough its not required you can wrap a navbar in a  to center it on a pagethough note that an inner container is still required Or you can add a container inside the  to only center the contents of a fixed or static top navbarplacement            Navbar      Use any of the responsive containers to change how wide the content in your navbar is presented      Navbar  PlacementUse our position utilities to place navbars in nonstatic positions Choose from fixed to the top fixed to the bottom stickied to the top scrolls with the page until it reaches the top then stays there or stickied to the bottom scrolls with the page until it reaches the bottom then stays thereFixed navbars use  meaning theyre pulled from the normal flow of the DOM and may require custom CSS eg  on the  to prevent overlap with other elements      Default        Fixed top        Fixed bottom        Sticky top        Sticky bottom  ScrollingAdd  to a  or other navbar subcomponent to enable vertical scrolling within the toggleable contents of a collapsed navbar By default scrolling kicks in at  or  of the viewport height but you can override that with the local CSS custom property  or custom styles At larger viewports when the navbar is expanded content will appear as it does in a default navbarPlease note that this behavior comes with a potential drawback of when setting  required to scroll the content here  is the equivalent of  which will crop some horizontal contentHeres an example navbar using  with  with some extra margin utilities for optimum spacing      Navbar scroll                                          Home                          Link                                      Link                                Action            Another action                        Something else here                                    Link                                    Search            Responsive behaviorsNavbars can use   and  classes to determine when their content collapses behind a button In combination with other utilities you can easily choose when to show or hide particular elementsFor navbars that never collapse add the  class on the navbar For navbars that always collapse dont add any  classTogglerNavbar togglers are leftaligned by default but should they follow a sibling element like a  theyll automatically be aligned to the far right Reversing your markup will reverse the placement of the toggler Below are examples of different toggle stylesWith no  shown at the smallest breakpoint                          Hidden brand                        Home                          Link                          Disabled                                    Search            With a brand name shown on the left and toggler on the right      Navbar                                          Home                          Link                          Disabled                                    Search            With a toggler on the left and brand name on the right                    Navbar                            Home                          Link                          Disabled                                    Search            External contentSometimes you want to use the collapse plugin to trigger a container element for content that structurally sits outside of the   Because our plugin works on the  and  matching thats easily done      Collapsed content    Toggleable via the navbar brand                    When you do this we recommend including additional JavaScript to move the focus programmatically to the container when it is opened Otherwise keyboard users and users of assistive technologies will likely have a hard time finding the newly revealed content  particularly if the container that was opened comes before the toggler in the documents structure We also recommend making sure that the toggler has the  attribute pointing to the  of the content container In theory this allows assistive technology users to jump directly from the toggler to the container it controlsbut support for this is currently quite patchyOffcanvasTransform your expanding and collapsing navbar into an offcanvas drawer with the offcanvas component We extend both the offcanvas default styles and use our  classes to create a dynamic and flexible navigation sidebarIn the example below to create an offcanvas navbar that is always collapsed across all breakpoints omit the  class entirely      Offcanvas navbar                                Offcanvas                                                  Home                                Link                                              Dropdown                                      Action              Another action                                                          Something else here                                                          Search                    To create an offcanvas navbar that expands into a normal navbar at a specific breakpoint like  use When using offcanvas in a dark navbar be aware that you may need to have a dark background on the offcanvas content to avoid the text becoming illegible In the example below we add  and  to the   to the   to  and  to  for proper styling with a dark offcanvas      Offcanvas dark navbar                                Dark offcanvas                                                  Home                                Link                                              Dropdown                                      Action              Another action                                                          Something else here                                                          Search                    CSSVariablesAs part of ndbuikits evolving CSS variables approach navbars now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSome additional CSS variables are also present on Sass variablesSass loopResponsive navbar expandcollapse classesresponsivebehaviors eg  are combined with the  map and generated through a loop in"},{"layout":"docs","title":"Navs and tabs","description":"Documentation and examples for how to use ndb-uikit's included navigation components.","group":"components","aliases":"/docs/1.0/components/navs/","toc":true,"skipSize":207,"id":"navs-tabs.md","fullContent":"Base navNavigation available in ndbuikit share general markup and styles from the base  class to the active and disabled states Swap modifier classes to switch between each styleThe base  component is built with flexbox and provide a strong foundation for building all types of navigation components It includes some style overrides for working with lists some link padding for larger hit areas and basic disabled stylingThe base  component does not include any  state The following examples include the class mainly to demonstrate that this particular class does not trigger any special stylingTo convey the active state to assistive technologies use the  attribute  using the  value for current page or  for the current item in a set      Active        Link        Link        Disabled  Classes are used throughout so your markup can be super flexible Use s like above  if the order of your items is important or roll your own with a  element Because the  uses  the nav links behave the same as nav items would but without the extra markup  Active  Link  Link  DisabledAvailable stylesChange the style of s component with modifiers and utilities Mix and match as needed or build your ownHorizontal alignmentChange the horizontal alignment of your nav with flexbox utilities By default navs are leftaligned but you can easily change them to center or right alignedCentered with       Active        Link        Link        Disabled  Rightaligned with       Active        Link        Link        Disabled  VerticalStack your navigation by changing the flex item direction with the  utility Need to stack them on some viewports but not others Use the responsive versions eg       Active        Link        Link        Disabled  As always vertical navigation is possible without s too  Active  Link  Link  DisabledTabsTakes the basic nav from above and adds the  class to generate a tabbed interface Use them to create tabbable regions with our tab JavaScript pluginjavascriptbehavior      Active        Link        Link        Disabled  PillsTake that same HTML but use  instead      Active        Link        Link        Disabled  Fill and justifyForce your s contents to extend the full available width one of two modifier classes To proportionately fill all available space with your s use  Notice that all horizontal space is occupied but not every nav item has the same width      Active        Much longer nav link        Link        Disabled  When using a based navigation you can safely omit  as only  is required for styling  elements  Active  Much longer nav link  Link  DisabledFor equalwidth elements use  All horizontal space will be occupied by nav links but unlike the  above every nav item will be the same width      Active        Much longer nav link        Link        Disabled  Similar to the  example using a based navigation  Active  Much longer nav link  Link  DisabledWorking with flex utilitiesIf you need responsive nav variations consider using a series of flexbox utilities While more verbose these utilities offer greater customization across responsive breakpoints In the example below our nav will be stacked on the lowest breakpoint then adapt to a horizontal layout that fills the available width starting from the small breakpoint  Active  Longer nav link  Link  DisabledRegarding accessibilityIf youre using navs to provide a navigation bar be sure to add a  to the most logical parent container of the  or wrap a  element around the whole navigation Do not add the role to the  itself as this would prevent it from being announced as an actual list by assistive technologiesNote that navigation bars even if visually styled as tabs with the  class should not be given   or  attributes These are only appropriate for dynamic tabbed interfaces as described in the ARIA Authoring Practices Guide tabs patternhttpswwwworgWAIARIAapgpatternstabpanel See JavaScript behaviorjavascriptbehavior for dynamic tabbed interfaces in this section for an example The  attribute is not necessary on dynamic tabbed interfaces since our JavaScript handles the selected state by adding  on the active tabUsing dropdownsAdd dropdown menus with a little extra HTML and the dropdowns JavaScript pluginTabs with dropdowns      Active        Dropdown          Action      Another action      Something else here            Separated link            Link        Disabled  Pills with dropdowns      Active        Dropdown          Action      Another action      Something else here            Separated link            Link        Disabled  CSSVariablesAs part of ndbuikits evolving CSS variables approach navs now use local CSS variables on   and  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooOn the  base classOn the  modifier classOn the  modifier classSass variablesJavaScript behaviorUse the tab JavaScript plugininclude it individually or through the compiled  fileto extend our navigational tabs and pills to create tabbable panes of local content            Home              Profile              Contact              Disabled                  This is some placeholder content the Home tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation              This is some placeholder content the Profile tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation              This is some placeholder content the Contact tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation              This is some placeholder content the Disabled tabs associated content      To help fit your needs this works with based markup as shown above or with any arbitrary roll your own markup Note that if youre using  you shouldnt add  directly to it as this would override the elements native role as a navigation landmark Instead switch to an alternative element in the example below a simple  and wrap the  around it            Home      Profile      Contact      Disabled                  This is some placeholder content the Home tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation              This is some placeholder content the Profile tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation              This is some placeholder content the Contact tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation              This is some placeholder content the Disabled tabs associated content      The tabs plugin also works with pills            Home              Profile              Contact              Disabled                  This is some placeholder content the Home tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation              This is some placeholder content the Profile tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation              This is some placeholder content the Contact tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation              This is some placeholder content the Disabled tabs associated content      And with vertical pills Ideally for vertical tabs you should also add  to the tab list container            Home      Profile      Disabled      Messages      Settings                      This is some placeholder content the Home tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation                    This is some placeholder content the Profile tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation                    This is some placeholder content the Disabled tabs associated content                    This is some placeholder content the Messages tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation                    This is some placeholder content the Settings tabs associated content Clicking another tab will toggle the visibility of this one for the next The tab JavaScript swaps classes to control the content visibility and styling You can use it with tabs pills and any other navpowered navigation            AccessibilityDynamic tabbed interfaces as described in the ARIA Authoring Practices Guide tabs patternhttpswwwworgWAIARIAapgpatternstabpanel require    and additional  attributes in order to convey their structure functionality and current state to users of assistive technologies such as screen readers As a best practice we recommend using  elements for the tabs as these are controls that trigger a dynamic change rather than links that navigate to a new page or locationIn line with the ARIA Authoring Practices pattern only the currently active tab receives keyboard focus When the JavaScript plugin is initialized it will set  on all inactive tab controls Once the currently active tab has focus the cursor keys activate the previousnext tab with the plugin changing the roving httpswwwworgWAIARIAapgpracticeskeyboardinterface accordingly However note that the JavaScript plugin does not distinguish between horizontal and vertical tab lists when it comes to cursor key interactions regardless of the tab lists orientation both the up and left cursor go to the previous tab and down and right cursor go to the next tabIn general to facilitate keyboard navigation its recommended to make the tab panels themselves focusable as well unless the first element containing meaningful content inside the tab panel is already focusable The JavaScript plugin does not try to handle this aspectwhere appropriate youll need to explicitly make your tab panels focusable by adding  in your markupThe tab JavaScript plugin does not support tabbed interfaces that contain dropdown menus as these cause both usability and accessibility issues From a usability perspective the fact that the currently displayed tabs trigger element is not immediately visible as its inside the closed dropdown menu can cause confusion From an accessibility point of view there is currently no sensible way to map this sort of construct to a standard WAI ARIA pattern meaning that it cannot be easily made understandable to users of assistive technologiesUsing data attributesYou can activate a tab or pill navigation without writing any JavaScript by simply specifying  or  on an element Use these data attributes on  or Via JavaScriptEnable tabbable tabs via JavaScript each tab needs to be activated individuallyYou can activate individual tabs in several waysFade effectTo make tabs fade in add  to each  The first tab pane must also have  to make the initial content visibleMethods constructorActivates a tab element and content container Tab should have either a  or if using a link an  attribute targeting a container node in the DOM showSelects the given tab and shows its associated pane Any other tab that was previously selected becomes unselected and its associated pane is hidden Returns to the caller before the tab pane has actually been shown ie before the  event occurs disposeDestroys an elements tab getInstanceStatic method which allows you to get the tab instance associated with a DOM element getOrCreateInstanceStatic method which allows you to get the tab instance associated with a DOM element or create a new one in case it wasnt initializedEventsWhen showing a new tab the events fire in the following order  on the current active tab  on the tobeshown tab  on the previous active tab the same one as for the  event  on the newlyactive justshown tab the same one as for the  eventIf no tab was already active then the  and  events will not be fired Event type  Description        This event fires when a new tab is to be shown and thus the previous active tab is to be hidden Use  and  to target the current active tab and the new soontobeactive tab respectively    This event fires after a new tab is shown and thus the previous active tab is hidden Use  and  to target the previous active tab and the new active tab respectively    This event fires on tab show but before the new tab has been shown Use  and  to target the active tab and the previous active tab if available respectively    This event fires on tab show after a tab has been shown Use  and  to target the active tab and the previous active tab if available respectively"},{"layout":"docs","title":"Offcanvas","description":"Build hidden sidebars into your project for navigation, shopping carts, and more with a few classes and our JavaScript plugin.","group":"components","toc":true,"skipSize":206,"id":"offcanvas.md","fullContent":"How it worksOffcanvas is a sidebar component that can be toggled via JavaScript to appear from the left right top or bottom edge of the viewport Buttons or anchors are used as triggers that are attached to specific elements you toggle and  attributes are used to invoke our JavaScript Offcanvas shares some of the same JavaScript code as modals Conceptually they are quite similar but they are separate plugins Similarly some source Sasssass variables for offcanvass styles and dimensions are inherited from the modals variables When shown offcanvas includes a default backdrop that can be clicked to hide the offcanvas Similar to modals only one offcanvas can be shown at a timeHeads up Given how CSS handles animations you cannot use  or  on an  element Instead use the class as an independent wrapping elementExamplesOffcanvas componentsBelow is an offcanvas example that is shown by default via  on  Offcanvas includes support for a header with a close button and an optional body class for some initial  We suggest that you include offcanvas headers with dismiss actions whenever possible or provide an explicit dismiss action      Offcanvas            Content for the offcanvas goes here You can place just about any ndbuikit component or custom elements here  Live demoUse the buttons below to show and hide an offcanvas element via JavaScript that toggles the  class on an element with the  class  hides content default  shows contentYou can use a link with the  attribute or a button with the  attribute In both cases the  is required  Link with href  Button with databstarget      Offcanvas                  Some text as placeholder In real life you can have the elements you have chosen Like text images lists etc                      Dropdown button                    Action        Another action        Something else here            Dark offcanvasChange the appearance of offcanvases with utilities to better match them to different contexts like dark navbars Here we add  to the  and  to  for proper styling with a dark offcanvas If you have dropdowns within consider also adding  to       Offcanvas            Place offcanvas content here  Body scrollingScrolling the  element is disabled when an offcanvas and its backdrop are visible Use the  attribute to enable  scrollingEnable body scrolling      Offcanvas with body scrolling            Try scrolling the rest of the page to see this option in action  Body scrolling and backdropYou can also enable  scrolling with a visible backdropEnable both scrolling  backdrop      Backdrop with scrolling            Try scrolling the rest of the page to see this option in action  Static backdropWhen backdrop is set to static the offcanvas will not close when clicking outside of it  Toggle static offcanvas      Offcanvas                  I will not close if you click outside of me      ResponsiveResponsive offcanvas classes hide content outside the viewport from a specified breakpoint and down Above that breakpoint the contents within will behave as usual For example  hides content in an offcanvas below the  breakpoint but shows the content above the  breakpointToggle offcanvasResize your browser to show the responsive offcanvas toggle      Responsive offcanvas            This is content within an offcanvaslg  Responsive offcanvas classes are available across for each breakpoint      PlacementTheres no default placement for offcanvas components so you must add one of the modifier classes below  places offcanvas on the left of the viewport shown above  places offcanvas on the right of the viewport  places offcanvas on the top of the viewport  places offcanvas on the bottom of the viewportTry the top right and bottom examples out belowToggle top offcanvas      Offcanvas top              Toggle right offcanvas      Offcanvas right              Toggle bottom offcanvas      Offcanvas bottom              AccessibilitySince the offcanvas panel is conceptually a modal dialog be sure to add referencing the offcanvas titleto  Note that you dont need to add  since we already add it via JavaScriptCSSVariablesAs part of ndbuikits evolving CSS variables approach offcanvas now uses local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variablesUsageThe offcanvas plugin utilizes a few classes and attributes to handle the heavy lifting  hides the content  shows the content  hides the offcanvas on the left  hides the offcanvas on the right  hides the offcanvas on the top  hides the offcanvas on the bottomAdd a dismiss button with the  attribute which triggers the JavaScript functionality Be sure to use the  element with it for proper behavior across all devicesVia data attributes ToggleAdd  and a  or  to the element to automatically assign control of one offcanvas element The  attribute accepts a CSS selector to apply the offcanvas to Be sure to add the class  to the offcanvas element If youd like it to default open add the additional class  DismissWhile both ways to dismiss an offcanvas are supported keep in mind that dismissing from outside an offcanvas does not match the ARIA Authoring Practices Guide dialog modal patternhttpswwwworgWAIARIAapgpatternsdialogmodal Do this at your own riskVia JavaScriptEnable manually withOptions Name  Type  Default  Description            boolean or the string     Apply a backdrop on body while offcanvas is open Alternatively specify  for a backdrop which doesnt close the offcanvas when clicked    boolean    Closes the offcanvas when escape key is pressed    boolean    Allow body scrolling while offcanvas is open MethodsActivates your content as an offcanvas element Accepts an optional options You can create an offcanvas instance with the constructor for example Method  Description        Static method which allows you to get the offcanvas instance associated with a DOM element    Static method which allows you to get the offcanvas instance associated with a DOM element or create a new one in case it wasnt initialized    Hides an offcanvas element Returns to the caller before the offcanvas element has actually been hidden ie before the  event occurs   Shows an offcanvas element Returns to the caller before the offcanvas element has actually been shown ie before the  event occurs   Toggles an offcanvas element to shown or hidden Returns to the caller before the offcanvas element has actually been shown or hidden ie before the  or  event occurs Eventsndbuikits offcanvas class exposes a few events for hooking into offcanvas functionality Event type  Description        This event is fired immediately when the  method has been called    This event is fired when an offcanvas element has been hidden from the user will wait for CSS transitions to complete    This event is fired when the offcanvas is shown its backdrop is  and a click outside of the offcanvas is performed The event is also fired when the escape key is pressed and the  option is set to     This event fires immediately when the  instance method is called    This event is fired when an offcanvas element has been made visible to the user will wait for CSS transitions to complete"},{"layout":"docs","title":"Pagination","description":"Documentation and examples for showing pagination to indicate a series of related content exists across multiple pages.","group":"components","toc":true,"skipSize":200,"id":"pagination.md","fullContent":"OverviewWe use a large block of connected links for our pagination making links hard to miss and easily scalableall while providing large hit areas Pagination is built with list HTML elements so screen readers can announce the number of available links Use a wrapping  element to identify it as a navigation section to screen readers and other assistive technologiesIn addition as pages likely have more than one such navigation section its advisable to provide a descriptive  for the  to reflect its purpose For example if the pagination component is used to navigate between a set of search results an appropriate label could be       Previous                Next  Working with iconsLooking to use an icon or symbol in place of text for some pagination links Be sure to provide proper screen reader support with  attributes                    laquo                                        raquo            Disabled and active statesPagination links are customizable for different circumstances Use  for links that appear unclickable and  to indicate the current pageWhile the  class uses  to try to disable the link functionality of s that CSS property is not yet standardized and doesnt account for keyboard navigation As such you should always add  on disabled links and use custom JavaScript to fully disable their functionality            Previous                                    Next      You can optionally swap out active or disabled anchors for  or omit the anchor in the case of the prevnext arrows to remove click functionality and prevent keyboard focus while retaining intended styles            Previous                                    Next      SizingFancy larger or smaller pagination Add  or  for additional sizes                                                    AlignmentChange the alignment of pagination components with flexbox utilities For example with             Previous                          Next      Or with             Previous                          Next      CSSVariablesAs part of ndbuikits evolving CSS variables approach pagination now uses local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variablesSass mixins"},{"layout":"docs","title":"Placeholders","description":"Use loading placeholders for your components or pages to indicate something may still be loading.","group":"components","toc":true,"added":"5.1","skipSize":193,"id":"placeholders.md","fullContent":"AboutPlaceholders can be used to enhance the experience of your application Theyre built only with HTML and CSS meaning you dont need any JavaScript to create them You will however need some custom JavaScript to toggle their visibility Their appearance color and sizing can be easily customized with our utility classesExampleIn the example below we take a typical card component and recreate it with placeholders applied to create a loading card Size and proportions are the same between the two        Card title    Some quick example text to build on the card title and make up the bulk of the cards content    Go somewhere                                                                How it worksCreate placeholders with the  class and a grid column class eg  to set the  They can replace the text inside an element or be added as a modifier class to an existing componentWe apply additional styling to s via  to ensure the  is respected You may extend this pattern for other situations as needed or add a  within the element to reflect the height when actual text is rendered in its place  The use of  only indicates that the element should be hidden to screen readers The loading behavior of the placeholder depends on how authors will actually use the placeholder styles how they plan to update things etc Some JavaScript code may be needed to swap the state of the placeholder and inform AT users of the updateWidthYou can change the  through grid column classes width utilities or inline stylesColorBy default the  uses  This can be overridden with a custom color or utility classindex SiteData themecolors SizingThe size of s are based on the typographic style of the parent element Customize them with sizing modifiers   or AnimationAnimate placeholders with  or  to better convey the perception of something being actively loaded    SassVariables"},{"layout":"docs","title":"Popovers","description":"Documentation and examples for adding ndb-uikit popovers, like those found in iOS, to any element on your site.","group":"components","toc":true,"skipSize":190,"id":"popovers.md","fullContent":"OverviewThings to know when using the popover plugin Popovers rely on the third party library Popperhttpspopperjsorg for positioning You must include popperminjs before  or use one  which contains Popper Popovers require the popover plugin as a dependency Popovers are optin for performance reasons so you must initialize them yourself Zerolength  and  values will never show a popover Specify  to avoid rendering problems in more complex components like our input groups button groups etc Triggering popovers on hidden elements will not work Popovers for  or  elements must be triggered on a wrapper element When triggered from anchors that wrap across multiple lines popovers will be centered between the anchors overall width Use  on your s to avoid this behavior Popovers must be hidden before their corresponding elements have been removed from the DOM Popovers can be triggered thanks to an element inside a shadow DOMKeep reading to see how popovers work with some examplesExamplesEnable popoversAs mentioned above you must initialize popovers before they can be used One way to initialize all popovers on a page would be to select them by their  attribute like soLive demoWe use JavaScript similar to the snippet above to render the following live popover Titles are set via  and body content is set via Click to toggle popoverFour directionsFour options are available top right bottom and left Directions are mirrored when using ndbuikit in RTL Set  to change the direction  Popover on top  Popover on right  Popover on bottom  Popover on leftCustom When you have some styles on a parent element that interfere with a popover youll want to specify a custom  so that the popovers HTML appears within that element instead This is common in responsive tables input groups and the likeAnother situation where youll want to set an explicit custom  are popovers inside a modal dialog to make sure that the popover itself is appended to the modal This is particularly important for popovers that contain interactive elements  modal dialogs will trap focus so unless the popover is a child element of the modal users wont be able to focus or activate these interactive elementsCustom popoversYou can customize the appearance of popovers using CSS variablesvariables We set a custom class with  to scope our custom appearance and use it to override some of the local CSS variables  Custom popoverDismiss on next clickUse the  trigger to dismiss popovers on the users next click of a different element than the toggle element Specific markup required for dismissonnextclickFor proper crossbrowser and crossplatform behavior you must use the  tag not the  tag and you also must include a httpsdevelopermozillaorgenUSdocsWebHTMLGlobalattributestabindex attributeDismissible popoverDisabled elementsElements with the  attribute arent interactive meaning users cannot hover or click them to trigger a popover or tooltip As a workaround youll want to trigger the popover from a wrapper  or  ideally made keyboardfocusable using For disabled popover triggers you may also prefer  so that the popover appears as immediate visual feedback to your users as they may not expect to click on a disabled element  Disabled buttonCSSVariablesAs part of ndbuikits evolving CSS variables approach popovers now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variablesUsageEnable popovers via JavaScriptMaking popovers work for keyboard and assistive technology usersTo allow keyboard users to activate your popovers you should only add them to HTML elements that are traditionally keyboardfocusable and interactive such as links or form controls Although arbitrary HTML elements such as s can be made focusable by adding the  attribute this will add potentially annoying and confusing tab stops on noninteractive elements for keyboard users and most assistive technologies currently do not announce the popovers content in this situation Additionally do not rely solely on  as the trigger for your popovers as this will make them impossible to trigger for keyboard usersWhile you can insert rich structured HTML in popovers with the  option we strongly recommend that you avoid adding an excessive amount of content The way popovers currently work is that once displayed their content is tied to the trigger element with the  attribute As a result the entirety of the popovers content will be announced to assistive technology users as one long uninterrupted streamAdditionally while it is possible to also include interactive controls such as form elements or links in your popover by adding these elements to the  of allowed attributes and tags be aware that currently the popover does not manage keyboard focus order When a keyboard user opens a popover focus remains on the triggering element and as the popover usually does not immediately follow the trigger in the documents structure there is no guarantee that moving forwardpressing TAB will move a keyboard user into the popover itself In short simply adding interactive controls to a popover is likely to make these controls unreachableunusable for keyboard users and users of assistive technologies or at the very least make for an illogical overall focus order In these cases consider using a modal dialog insteadOptionsNote that for security reasons the   and  options cannot be supplied using data attributes Name  Type  Default  Description            object  Default value  Object which contains allowed attributes and tags    boolean    Apply a CSS fade transition to the popover    string element    Overflow constraint boundary of the popover applies only to Poppers preventOverflow modifier By default its  and can accept an HTMLElement reference via JavaScript only For more information refer to Poppers detectOverflow docshttpspopperjsorgdocsvutilsdetectoverflowboundary    string element false    Appends the popover to a specific element Example  This option is particularly useful in that it allows you to position the popover in the flow of the document near the triggering element which will prevent the popover from floating away from the triggering element during a window resize    string element function    Default content value if  attribute isnt present If a function is given it will be called with its  reference set to the element that the popover is attached to   string function    Add classes to the popover when it is shown Note that these classes will be added in addition to any classes specified in the template To add multiple classes separate them with spaces  You can also pass a function that should return a single string containing additional class names    number object    Delay showing and hiding the popover msdoesnt apply to manual trigger type If a number is supplied delay is applied to both hideshow Object structure is     string array    Define fallback placements by providing a list of placements in array in order of preference For more information refer to Poppers behavior docshttpspopperjsorgdocsvmodifiersflipfallbackplacements    boolean    Allow HTML in the popover If true HTML tags in the popovers  will be rendered in the popover If false  property will be used to insert content into the DOM Use text if youre worried about XSS attacks    number string function    Offset of the popover relative to its target You can pass a string in data attributes with comma separated values like  When a function is used to determine the offset it is called with an object containing the popper placement the reference and popper rects as its first argument The triggering element DOM node is passed as the second argument The function must return an array with two numbers skiddinghttpspopperjsorgdocsvmodifiersoffsetskidding distancehttpspopperjsorgdocsvmodifiersoffsetdistance For more information refer to Poppers offset docshttpspopperjsorgdocsvmodifiersoffsetoptions    string function    How to position the popover auto top bottom left right When  is specified it will dynamically reorient the popover When a function is used to determine the placement it is called with the popover DOM node as its first argument and the triggering element DOM node as its second The  context is set to the popover instance    null object function    To change ndbuikits default Popper config see Poppers configurationhttpspopperjsorgdocsvconstructorsoptions When a function is used to create the Popper configuration its called with an object that contains the ndbuikits default Popper configuration It helps you use and merge the default with your own configuration The function must return a configuration object for Popper   boolean    Enable or disable the sanitization If activated   and  options will be sanitized    null function    Here you can supply your own sanitize function This can be useful if you prefer to use a dedicated library to perform sanitization    string false    If a selector is provided popover objects will be delegated to the specified targets In practice this is used to also apply popovers to dynamically added DOM elements  support See this issueissues and an informative examplehttpscodepenioJohannSpendjJYPb    string    Base HTML to use when creating the popover The popovers  will be injected into the   will become the popovers arrow The outermost wrapper element should have the  class and     string element function    Default title value if  attribute isnt present If a function is given it will be called with its  reference set to the element that the popover is attached to    string    How popover is triggered click hover focus manual You may pass multiple triggers separate them with a space  indicates that the popover will be triggered programmatically via the   and  methods this value cannot be combined with any other trigger  on its own will result in popovers that cannot be triggered via the keyboard and should only be used if alternative methods for conveying the same information for keyboard users is present  Data attributes for individual popoversOptions for individual popovers can alternatively be specified through the use of data attributes as explained above Using function with Methods Method  Description        Removes the ability for an elements popover to be shown The popover will only be able to be shown if it is reenabled    Hides and destroys an elements popover Removes stored data on the DOM element Popovers that use delegation which are created using the  optionoptions cannot be individually destroyed on descendant trigger elements    Gives an elements popover the ability to be shown Popovers are enabled by default    Static method which allows you to get the popover instance associated with a DOM element    Static method which allows you to get the popover instance associated with a DOM element or create a new one in case it wasnt initialized    Hides an elements popover Returns to the caller before the popover has actually been hidden ie before the  event occurs This is considered a manual triggering of the popover    Gives a way to change the popovers content after its initialization    Reveals an elements popover Returns to the caller before the popover has actually been shown ie before the  event occurs This is considered a manual triggering of the popover Popovers whose title and content are both zerolength are never displayed    Toggles an elements popover Returns to the caller before the popover has actually been shown or hidden ie before the  or  event occurs This is considered a manual triggering of the popover    Toggles the ability for an elements popover to be shown or hidden    Updates the position of an elements popover The  method accepts an  argument where each propertykey is a valid  selector within the popover template and each related propertyvalue can be       Events Event  Description        This event is fired immediately when the  instance method has been called    This event is fired when the popover has finished being hidden from the user will wait for CSS transitions to complete    This event is fired after the  event when the popover template has been added to the DOM    This event fires immediately when the  instance method is called    This event is fired when the popover has been made visible to the user will wait for CSS transitions to complete"},{"layout":"docs","title":"Progress","description":"Documentation and examples for using ndb-uikit custom progress bars featuring support for stacked bars, animated backgrounds, and text labels.","group":"components","toc":true,"skipSize":221,"id":"progress.md","fullContent":"How it worksProgress components are built with two HTML elements some CSS to set the width and a few attributes We dont use the HTML  elementhttpsdevelopermozillaorgenUSdocsWebHTMLElementprogress ensuring you can stack progress bars animate them and place text labels over them We use the  as a wrapper to indicate the max value of the progress bar We use the inner  to indicate the progress so far The  requires an inline style utility class or custom CSS to set their width The  also requires some  and  attributes to make it accessible including an accessible name using   or similarPut that all together and you have the following examples          ndbuikit provides a handful of utilities for setting width Depending on your needs these may help with quickly configuring progress  LabelsAdd labels to your progress bars by placing text within the   HeightWe only set a  value on the  so if you change that value the inner  will automatically resize accordingly    BackgroundsUse background utility classes to change the appearance of individual progress bars        Multiple barsInclude multiple progress bars in a progress component if you need      StripedAdd  to any  to apply a stripe via CSS gradient over the progress bars background color          Animated stripesThe striped gradient can also be animated Add  to  to animate the stripes right to left via CSS animations  CSSVariablesAs part of ndbuikits evolving CSS variables approach progress bars now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variablesKeyframesUsed for creating the CSS animations for  Included in"},{"layout":"docs","title":"Scrollspy","description":"Automatically update ndb-uikit navigation or list group components based on scroll position to indicate which link is currently active in the viewport.","group":"components","toc":true,"skipSize":231,"id":"scrollspy.md","fullContent":"How it worksScrollspy toggles the  class on anchor  elements when the element with the  referenced by the anchors  is scrolled into view Scrollspy is best used in conjunction with a ndbuikit nav component or list group but it will also work with any anchor elements in the current page Heres how it works To start scrollspy requires two things a navigation list group or a simple set of links plus a scrollable container The scrollable container can be the  or a custom element with a set  and  On the scrollable container add  and  where  is the unique  of the associated navigation Be sure to also include a  to ensure keyboard access As you scroll the spied container an  class is added and removed from anchor links within the associated navigation Links must have resolvable  targets otherwise theyre ignored For example a  must correspond to something in the DOM like  Target elements that are not visible will be ignored See the Nonvisible elementsnonvisibleelements section belowExamplesNavbarScroll the area below the navbar and watch the active class change Open the dropdown menu and watch the dropdown items be highlighted as well      Navbar                  First                    Second                    Dropdown                  Third          Fourth                    Fifth                          First heading    This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting    Second heading    This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting    Third heading    This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting    Fourth heading    This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting    Fifth heading    This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting  Nested navScrollspy also works with nested s If a nested  is  its parents will also be  Scroll the area next to the navbar and watch the active class change                              Item                       Item             Item                     Item           Item                       Item             Item                                                         Item           This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting          Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible Multiple visible scrollspy targets at the same time may cause some issues                          Item           This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting          Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible Multiple visible scrollspy targets at the same time may cause some issues                          Item           This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting          Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible Multiple visible scrollspy targets at the same time may cause some issues                          Item           This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting          Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible Multiple visible scrollspy targets at the same time may cause some issues                          Item           This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting          Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible Multiple visible scrollspy targets at the same time may cause some issues                          Item           This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting          Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible Multiple visible scrollspy targets at the same time may cause some issues                          Item           This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting          Keep in mind that the JavaScript plugin tries to pick the right element among all that may be visible Multiple visible scrollspy targets at the same time may cause some issues                    List groupScrollspy also works with s Scroll the area next to the list group and watch the active class change                    Item         Item         Item         Item                             Item         This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting        Item         This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting        Item         This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting        Item         This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting            Simple anchorsScrollspy is not limited to nav components and list groups so it will work on any  anchor elements in the current document Scroll the area and watch the  class change                    Item         Item         Item         Item         Item                             Item         This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting        Item         This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting        Item         This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting        Item         This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting        Item         This is some placeholder content for the scrollspy page Note that as you scroll down the page the appropriate navigation link is highlighted Its repeated throughout the component example We keep adding some more example copy here to emphasize the scrolling and highlighting            Nonvisible elementsTarget elements that arent visible will be ignored and their corresponding nav items wont receive an  class Scrollspy instances initialized in a nonvisible wrapper will ignore all target elements Use the  method to check for observable elements once the wrapper becomes visible databsspyscrollUsageVia data attributesTo easily add scrollspy behavior to your topbar navigation add  to the element you want to spy on most typically this would be the  Then add the  attribute with the  or class name of the parent element of any ndbuikit  componentVia JavaScriptOptions Name  Type  Default  Description            string    Intersection Observer rootMarginhttpsdevelopermozillaorgenUSdocsWebAPIIntersectionObserverrootMargin valid units when calculating scroll position    boolean    Enables smooth scrolling when a user clicks on a link that refers to ScrollSpy observables    string  jQuery object  DOM element    Specifies element to apply Scrollspy plugin    array     thresholdhttpsdevelopermozillaorgenUSdocsWebAPIIntersectionObserverIntersectionObserverthreshold valid input when calculating scroll positionDeprecated OptionsUp until v we were using    options which are now deprecated and replaced by To keep backwards compatibility we will continue to parse a given  to  but this feature will be removed in vMethods Method  Description        Destroys an elements scrollspy Removes stored data on the DOM element    Static method to get the scrollspy instance associated with a DOM element    Static method to get the scrollspy instance associated with a DOM element or to create a new one in case it wasnt initialized    When adding or removing elements in the DOM youll need to call the refresh method Heres an example using the refresh methodEvents Event  Description        This event fires on the scroll element whenever an anchor is activated by the scrollspy"},{"layout":"docs","title":"Spinners","description":"Indicate the loading state of a component or page with ndb-uikit spinners, built entirely with HTML, CSS, and no JavaScript.","group":"components","toc":true,"skipSize":203,"id":"spinners.md","fullContent":"Aboutndbuikit spinners can be used to show the loading state in your projects Theyre built only with HTML and CSS meaning you dont need any JavaScript to create them You will however need some custom JavaScript to toggle their visibility Their appearance alignment and sizing can be easily customized with our amazing utility classesFor accessibility purposes each loader here includes  and a nested Border spinnerUse the border spinners for a lightweight loading indicator  LoadingColorsThe border spinner uses  for its  meaning you can customize the color with text color utilitiescolor You can use any of our text color utilities on the standard spinnerindex SiteData themecolors   LoadingWhy not use  utilities Each border spinner specifies a  border for at least one side so  utilities would override thatGrowing spinnerIf you dont fancy a border spinner switch to the grow spinner While it doesnt technically spin it does repeatedly grow  LoadingOnce again this spinner is built with  so you can easily change its appearance with text color utilitiescolor Here it is in blue along with the supported variantsindex SiteData themecolors   LoadingAlignmentSpinners in ndbuikit are built with s  and  This means they can easily be resized recolored and quickly alignedMarginUse margin utilitiesmargin like  for easy spacing  LoadingPlacementUse flexbox utilitiesflex float utilitiesfloat or text alignmenttext utilities to place spinners exactly where you need them in any situation Flex      Loading    Loading   Floats      Loading   Text align      Loading  SizeAdd  and  to make a smaller spinner that can quickly be used within other components  Loading  LoadingOr use custom CSS or inline styles to change the dimensions as needed  Loading  LoadingButtonsUse spinners within buttons to indicate an action is currently processing or taking place You may also swap the text out of the spinner element and utilize button text as needed    Loading    Loading    Loading    LoadingCSSVariablesAs part of ndbuikits evolving CSS variables approach spinners now use local CSS variables on  and  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooBorder spinner variablesGrowing spinner variablesFor both spinners small spinner modifier classes are used to update the values of these CSS variables as needed For example the  class does the followingSass variablesKeyframesUsed for creating the CSS animations for our spinners Included in color   display flex    float   margin  sizing  text"},{"layout":"docs","title":"Toasts","description":"Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.","group":"components","toc":true,"skipSize":179,"id":"toasts.md","fullContent":"Toasts are lightweight notifications designed to mimic the push notifications that have been popularized by mobile and desktop operating systems Theyre built with flexbox so theyre easy to align and positionOverviewThings to know when using the toast plugin Toasts are optin for performance reasons so you must initialize them yourself Toasts will automatically hide if you do not specify ExamplesBasicTo encourage extensible and predictable toasts we recommend a header and body Toast headers use  allowing easy alignment of content thanks to our margin and flexbox utilitiesToasts are as flexible as you need and have very little required markup At a minimum we require a single element to contain your toasted content and strongly encourage a dismiss button          ndbuikit     mins ago            Hello world This is a toast message  Previously our scripts dynamically added the  class to completely hide a toast with  rather than just with  This is now not necessary anymore However for backwards compatibility our script will continue to toggle the class even though there is no practical need for it until the next major versionLive exampleClick the button below to show a toast positioned with our utilities in the lower right corner that has been hidden by default                  ndbuikit       mins ago                    Hello world This is a toast message        Show live toastWe use the following JavaScript to trigger our live toast demoTranslucentToasts are slightly translucent to blend in with whats below them          ndbuikit     mins ago            Hello world This is a toast message  StackingYou can stack toasts by wrapping them in a toast container which will vertically add some spacing                  ndbuikit      just now                    See Just like this                        ndbuikit       seconds ago                    Heads up toasts will stack automatically      Custom contentCustomize your toasts by removing subcomponents tweaking them with utilities or by adding your own markup Here weve created a simpler toast by removing the default  adding a custom hide icon from ndbuikit Icons and using some flexbox utilities to adjust the layout            Hello world This is a toast message          Alternatively you can also add additional controls and components to toasts      Hello world This is a toast message          Take action      Close      Color schemesBuilding on the above example you can create different toast color schemes with our color and background utilities Here weve added  to the  and then added  to our close button For a crisp edge we remove the default border with             Hello world This is a toast message          PlacementPlace toasts with custom CSS as you need them The top right is often used for notifications as is the top middle If youre only ever going to show one toast at a time put the positioning styles right on the       Toast placement          Select a position      Top left      Top center      Top right      Middle left      Middle center      Middle right      Bottom left      Bottom center      Bottom right                                  ndbuikit         mins ago                    Hello world This is a toast message            For systems that generate more notifications consider using a wrapping element so they can easily stack                                        ndbuikit        just now                            See Just like this                                    ndbuikit         seconds ago                            Heads up toasts will stack automatically            You can also get fancy with flexbox utilities to align toasts horizontally andor vertically                    ndbuikit       mins ago                    Hello world This is a toast message      AccessibilityToasts are intended to be small interruptions to your visitors or users so to help those with screen readers and similar assistive technologies you should wrap your toasts in an  regionhttpsdevelopermozillaorgenUSdocsWebAccessibilityARIAARIALiveRegions Changes to live regions such as injectingupdating a toast component are automatically announced by screen readers without needing to move the users focus or otherwise interrupt the user Additionally include  to ensure that the entire toast is always announced as a single atomic unit rather than just announcing what was changed which could lead to problems if you only update part of the toasts content or if displaying the same toast content at a later point in time If the information needed is important for the process eg for a list of errors in a form then use the alert component instead of toastNote that the live region needs to be present in the markup before the toast is generated or updated If you dynamically generate both at the same time and inject them into the page they will generally not be announced by assistive technologiesYou also need to adapt the  and  level depending on the content If its an important message like an error use  otherwise use  attributesAs the content youre displaying changes be sure to update the  timeoutoptions so that users have enough time to read the toastWhen using  you must add a close button to allow users to dismiss the toast          ndbuikit     mins ago            Hello world This is a toast message  While technically its possible to add focusableactionable controls such as additional buttons or links in your toast you should avoid doing this for autohiding toasts Even if you give the toast a long  timeoutoptions keyboard and assistive technology users may find it difficult to reach the toast in time to take action since toasts dont receive focus when they are displayed If you absolutely must have further controls we recommend using a toast with CSSVariablesAs part of ndbuikits evolving CSS variables approach toasts now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variablesUsageInitialize toasts via JavaScriptTriggersOptions Name  Type  Default  Description            boolean    Apply a CSS fade transition to the toast    boolean     Automatically hide the toast after the delay    number    Delay in milliseconds before hiding the toast Methods Method  Description        Hides an elements toast Your toast will remain on the DOM but wont show anymore    Static method which allows you to get the toast instance associated with a DOM element  For example   Returns a ndbuikit toast instance   Static method which allows you to get the toast instance associated with a DOM element or create a new one in case it wasnt initialized     Returns a ndbuikit toast instance    Hides an elements toast Returns to the caller before the toast has actually been hidden ie before the  event occurs You have to manually call this method if you made  to     Returns a boolean according to toasts visibility state    Reveals an elements toast Returns to the caller before the toast has actually been shown ie before the  event occurs You have to manually call this method instead your toast wont show Events Event  Description        This event is fired immediately when the  instance method has been called    This event is fired when the toast has finished being hidden from the user    This event fires immediately when the  instance method is called    This event is fired when the toast has been made visible to the user"},{"layout":"docs","title":"Tooltips","description":"Documentation and examples for adding custom ndb-uikit tooltips with CSS and JavaScript using CSS3 for animations and data-bs-attributes for local title storage.","group":"components","toc":true,"skipSize":240,"id":"tooltips.md","fullContent":"OverviewThings to know when using the tooltip plugin Tooltips rely on the third party library Popperhttpspopperjsorg for positioning You must include popperminjs before  or use one  which contains Popper Tooltips are optin for performance reasons so you must initialize them yourself Tooltips with zerolength titles are never displayed Specify  to avoid rendering problems in more complex components like our input groups button groups etc Triggering tooltips on hidden elements will not work Tooltips for  or  elements must be triggered on a wrapper element When triggered from hyperlinks that span multiple lines tooltips will be centered Use  on your s to avoid this behavior Tooltips must be hidden before their corresponding elements have been removed from the DOM Tooltips can be triggered thanks to an element inside a shadow DOMGot all that Great lets see how they work with some examplesExamplesEnable tooltipsAs mentioned above you must initialize tooltips before they can be used One way to initialize all tooltips on a page would be to select them by their  attribute like soTooltips on linksHover over the links below to see tooltipsPlaceholder text to demonstrate some inline links with tooltips This is now just filler no killer Content placed here just to mimic the presence of real text And all that just to give you an idea of how tooltips would look when used in realworld situations So hopefully youve now seen how these tooltips on links can work in practice once you use them on your own site or projectCustom tooltipsYou can customize the appearance of tooltips using CSS variablesvariables We set a custom class with  to scope our custom appearance and use it to override a local CSS variable  Custom tooltipDirectionsHover over the buttons below to see the four tooltips directions top right bottom and left Directions are mirrored when using ndbuikit in RTL      Tooltip on top    Tooltip on right    Tooltip on bottom    Tooltip on left    Tooltip with HTMLTooltip with HTML  And with custom HTML addedWith an SVG                        CSSVariablesAs part of ndbuikits evolving CSS variables approach tooltips now use local CSS variables on  for enhanced realtime customization Values for the CSS variables are set via Sass so Sass customization is still supported tooSass variablesUsageThe tooltip plugin generates content and markup on demand and by default places tooltips after their trigger elementTrigger the tooltip via JavaScript Overflow  and Tooltip position attempts to automatically change when a parent container has  or  like our  but still keeps the original placements positioning To resolve this set the  optionhttpspopperjsorgdocsvmodifiersflipboundary for the flip modifier using the  option to any HTMLElement to override the default value  such as MarkupThe required markup for a tooltip is only a  attribute and  on the HTML element you wish to have a tooltip The generated markup of a tooltip is rather simple though it does require a position by default set to  by the plugin Making tooltips work for keyboard and assistive technology usersYou should only add tooltips to HTML elements that are traditionally keyboardfocusable and interactive such as links or form controls Although arbitrary HTML elements such as s can be made focusable by adding the  attribute this will add potentially annoying and confusing tab stops on noninteractive elements for keyboard users and most assistive technologies currently do not announce the tooltip in this situation Additionally do not rely solely on  as the trigger for your tooltip as this will make your tooltips impossible to trigger for keyboard usersDisabled elementsElements with the  attribute arent interactive meaning users cannot focus hover or click them to trigger a tooltip or popover As a workaround youll want to trigger the tooltip from a wrapper  or  ideally made keyboardfocusable using   Disabled buttonOptionsNote that for security reasons the   and  options cannot be supplied using data attributes Name  Type  Default  Description            object  Default value  Object which contains allowed attributes and tags    boolean    Apply a CSS fade transition to the tooltip    string element    Overflow constraint boundary of the tooltip applies only to Poppers preventOverflow modifier By default its  and can accept an HTMLElement reference via JavaScript only For more information refer to Poppers detectOverflow docshttpspopperjsorgdocsvutilsdetectoverflowboundary    string element false    Appends the tooltip to a specific element Example  This option is particularly useful in that it allows you to position the tooltip in the flow of the document near the triggering element which will prevent the tooltip from floating away from the triggering element during a window resize    string function    Add classes to the tooltip when it is shown Note that these classes will be added in addition to any classes specified in the template To add multiple classes separate them with spaces  You can also pass a function that should return a single string containing additional class names    number object    Delay showing and hiding the tooltip msdoesnt apply to manual trigger type If a number is supplied delay is applied to both hideshow Object structure is     string array    Define fallback placements by providing a list of placements in array in order of preference For more information refer to Poppers behavior docshttpspopperjsorgdocsvmodifiersflipfallbackplacements    boolean    Allow HTML in the tooltip If true HTML tags in the tooltips  will be rendered in the tooltip If false  property will be used to insert content into the DOM Use text if youre worried about XSS attacks    number string function    Offset of the tooltip relative to its target You can pass a string in data attributes with comma separated values like  When a function is used to determine the offset it is called with an object containing the popper placement the reference and popper rects as its first argument The triggering element DOM node is passed as the second argument The function must return an array with two numbers skiddinghttpspopperjsorgdocsvmodifiersoffsetskidding distancehttpspopperjsorgdocsvmodifiersoffsetdistance For more information refer to Poppers offset docshttpspopperjsorgdocsvmodifiersoffsetoptions    string function    How to position the tooltip auto top bottom left right When  is specified it will dynamically reorient the tooltip When a function is used to determine the placement it is called with the tooltip DOM node as its first argument and the triggering element DOM node as its second The  context is set to the tooltip instance    null object function    To change ndbuikits default Popper config see Poppers configurationhttpspopperjsorgdocsvconstructorsoptions When a function is used to create the Popper configuration its called with an object that contains the ndbuikits default Popper configuration It helps you use and merge the default with your own configuration The function must return a configuration object for Popper   boolean    Enable or disable the sanitization If activated   and  options will be sanitized    null function    Here you can supply your own sanitize function This can be useful if you prefer to use a dedicated library to perform sanitization    string false    If a selector is provided tooltip objects will be delegated to the specified targets In practice this is used to also apply tooltips to dynamically added DOM elements  support See this issueissues and an informative examplehttpscodepenioJohannSpendjJYPb    string    Base HTML to use when creating the tooltip The tooltips  will be injected into the   will become the tooltips arrow The outermost wrapper element should have the  class and     string element function    Default title value if  attribute isnt present If a function is given it will be called with its  reference set to the element that the popover is attached to    string    How tooltip is triggered click hover focus manual You may pass multiple triggers separate them with a space  indicates that the tooltip will be triggered programmatically via the   and  methods this value cannot be combined with any other trigger  on its own will result in tooltips that cannot be triggered via the keyboard and should only be used if alternative methods for conveying the same information for keyboard users is present  Data attributes for individual tooltipsOptions for individual tooltips can alternatively be specified through the use of data attributes as explained above Using function with Methods Method  Description        Removes the ability for an elements tooltip to be shown The tooltip will only be able to be shown if it is reenabled    Hides and destroys an elements tooltip Removes stored data on the DOM element Tooltips that use delegation which are created using the  optionoptions cannot be individually destroyed on descendant trigger elements    Gives an elements tooltip the ability to be shown Tooltips are enabled by default    Static method which allows you to get the tooltip instance associated with a DOM element or create a new one in case it wasnt initialized    Static method which allows you to get the tooltip instance associated with a DOM element or create a new one in case it wasnt initialized    Hides an elements tooltip Returns to the caller before the tooltip has actually been hidden ie before the  event occurs This is considered a manual triggering of the tooltip    Gives a way to change the tooltips content after its initialization    Reveals an elements tooltip Returns to the caller before the tooltip has actually been shown ie before the  event occurs This is considered a manual triggering of the tooltip Tooltips with zerolength titles are never displayed    Toggles an elements tooltip Returns to the caller before the tooltip has actually been shown or hidden ie before the  or  event occurs This is considered a manual triggering of the tooltip    Toggles the ability for an elements tooltip to be shown or hidden    Updates the position of an elements tooltip The  method accepts an  argument where each propertykey is a valid  selector within the popover template and each related propertyvalue can be       Events Event  Description        This event is fired immediately when the  instance method has been called    This event is fired when the popover has finished being hidden from the user will wait for CSS transitions to complete    This event is fired after the  event when the tooltip template has been added to the DOM    This event fires immediately when the  instance method is called    This event is fired when the popover has been made visible to the user will wait for CSS transitions to complete"},{"layout":"docs","title":"Figures","description":"Documentation and examples for displaying related images and text with the figure component in ndb-uikit.","group":"content","toc":true,"skipSize":180,"id":"figures.md","fullContent":"Anytime you need to display a piece of contentlike an image with an optional caption consider using a Use the included   and  classes to provide some baseline styles for the HTML  and  elements Images in figures have no explicit size so be sure to add the  class to your  to make it responsive    A caption for the above imageAligning the figures caption is easy with our text utilities    A caption for the above imageSassVariables"},{"layout":"docs","title":"Images","description":"Documentation and examples for opting images into responsive behavior (so they never become wider than their parent) and add lightweight styles to them—all via classes.","group":"content","toc":true,"skipSize":242,"id":"images.md","fullContent":"Responsive imagesImages in ndbuikit are made responsive with  This applies  and  to the image so that it scales with the parent widthImage thumbnailsIn addition to our borderradius utilities you can use  to give an image a rounded px border appearanceAligning imagesAlign images with the helper float classes or text alignment classes level images can be centered using the  margin utility class  PictureIf you are using the  element to specify multiple  elements for a specific  make sure to add the  classes to the  and not to the  tagSassVariablesVariables are available for image thumbnails"},{"layout":"docs","title":"Reboot","description":"Reboot, a collection of element-specific CSS changes in a single file, kickstart ndb-uikit to provide an elegant, consistent, and simple baseline to build upon.","group":"content","aliases":"/docs/1.0/content/","toc":true,"skipSize":264,"id":"reboot.md","fullContent":"ApproachReboot builds upon Normalize providing many HTML elements with somewhat opinionated styles using only element selectors Additional styling is done only with classes For example we reboot some  styles for a simpler baseline and later provide   and moreHere are our guidelines and reasons for choosing what to override in Reboot Update some browser default values to use s instead of s for scalable component spacing Avoid  Vertical margins can collapse yielding unexpected results More importantly though a single direction of  is a simpler mental model For easier scaling across device sizes block elements should use s for s Keep declarations of related properties to a minimum using  whenever possibleCSS variablesWith v we standardized our required s across all our CSS bundles including   and  to include  This adds  level CSS variables to all bundles regardless of how many of them are used in that bundle Ultimately ndbuikit  will continue to see more CSS variables added over time in order to provide more realtime customization without the need to always recompile Sass Our approach is to take our source Sass variables and transform them into CSS variables That way even if you dont use CSS variables you still have all the power of Sass This is still inprogress and will take time to fully implementFor example consider these  CSS variables for common  stylesIn practice those variables are then applied in Reboot like soWhich allows you to make realtime customizations however you likePage defaultsThe  and  elements are updated to provide better pagewide defaults More specifically The  is globally set on every elementincluding  and  to  This ensures that the declared width of element is never exceeded due to padding or border   No base  is declared on the  but  is assumed the browser default  is applied on the  for easy responsive typescaling via media queries while respecting user preferences and ensuring a more accessible approach This browser default can be overridden by modifying the  variable The  also sets a global    and  This is inherited later by some form elements to prevent font inconsistencies For safety the  has a declared  defaulting to Native font stackndbuikit utilizes a native font stack or system font stack for optimum text rendering on every device and OS These system fonts have been designed specifically with todays devices in mind with improved rendering on screens variable font support and more Read more about native font stacks in this Smashing Magazine articlehttpswwwsmashingmagazinecomusingsystemuifontspracticalguideNote that because the font stack includes emoji fonts many common symboldingbat Unicode characters will be rendered as multicolored pictographs Their appearance will vary depending on the style used in the browserplatforms native emoji font and they wont be affected by any CSS  stylesThis  is applied to the  and automatically inherited globally throughout ndbuikit To switch the global  update  and recompile ndbuikitHeadings and paragraphsAll heading elementseg and  are reset to have their  removed Headings have  added and paragraphs  for easy spacing Heading  Example        h ndbuikit heading    h ndbuikit heading    h ndbuikit heading    h ndbuikit heading    h ndbuikit heading    h ndbuikit heading Horizontal rulesThe  element has been simplified Similar to browser defaults s are styled via  have a default  and automatically inherit their  via  including when  is set via the parent They can be modified with text border and opacity utilities  ListsAll lists  and have their  removed and a  Nested lists have no  Weve also reset the  on  and  elements All lists have their top margin removed And their bottom margin normalized Nested lists have no bottom margin   This way they have a more even appearance   Particularly when followed by more list items The left padding has also been reset Heres an ordered list With a few list items It has the same overall look As the previous unordered listFor simpler styling clear hierarchy and better spacing description lists have updated s s reset  to  and add  s are bolded      Description lists    A description list is perfect for defining terms    Term    Definition for the term    A second definition for the same term    Another term    Definition for this other term  Inline codeWrap inline snippets of code with  Be sure to escape HTML angle bracketsFor example ltsectiongt should be wrapped as inlineCode blocksUse s for multiple lines of code Once again be sure to escape any angle brackets in the code for proper rendering The  element is reset to remove its  and use  units for its ltpgtSample text hereltpgtltpgtAnd another line of sample text hereltpgtVariablesFor indicating variables use the  tagy  mx  bUser inputUse the  to indicate input that is typically entered via keyboardTo switch directories type cd followed by the name of the directoryTo edit settings press ctrl  Sample outputFor indicating sample output from a program use the  tagThis text is meant to be treated as sample output from a computer programTablesTables are slightly adjusted to style s collapse borders and ensure consistent  throughout Additional changes for borders padding and more come with the  class      This is an example table and this is its caption to describe the contents              Table heading      Table heading      Table heading      Table heading                  Table cell      Table cell      Table cell      Table cell              Table cell      Table cell      Table cell      Table cell              Table cell      Table cell      Table cell      Table cell      FormsVarious form elements have been rebooted for simpler base styles Here are some of the most notable changes s have no borders padding or margin so they can be easily used as wrappers for individual inputs or groups of inputs s like fieldsets have also been restyled to be displayed as a heading of sorts s are set to  to allow  to be applied s s s and s are mostly addressed by Normalize but Reboot removes their  and sets  too s are modified to only be resizable vertically as horizontal resizing often breaks page layout s and  button elements have  when These changes and more are demonstrated below      Example legend          Example input                    Example email                    Example telephone                    Example url                    Example number                    Example search                    Example range                    Example file input                    Example select              Choose                  Option           Option           Option                           Option           Option           Option                                             Check this checkbox                                    Option one is this and that                            Option two is something else thats also super long to demonstrate the wrapping of these fancy form controls                            Option three is disabled                    Example textarea                    Example date                    Example time                    Example password                    Example datetimelocal                    Example week                    Example month                    Example color                    Example output                    Button submit                                Button submit                        Pointers on buttonsReboot includes an enhancement for  to change the default cursor to  Add this attribute to elements to help indicate elements are interactive This role isnt necessary for  elements which get their own  changeNonbutton element buttonMisc elementsAddressThe  element is updated to reset the browser default  from  to   is also now inherited and  has been added s are for presenting contact information for the nearest ancestor or an entire body of work Preserve formatting by ending lines with       Twitter Inc     Market St Suite     San Francisco CA     P          Full Name    firstlastexamplecom  BlockquoteThe default  on blockquotes is  so we reset that to  for something more consistent with other elements      A wellknown quote contained in a blockquote element    Someone famous in Source TitleInline elementsThe  element receives basic styling to make it stand out amongst paragraph text  The HTML abbreviation elementSummaryThe default  on summary is  so we reset that to  to convey that the element can be interacted with by clicking on it      Some details    More info about the details        Even more details    Here are even more details about the details  HTML  attributeHTML adds a new global attribute named httpsdevelopermozillaorgenUSdocsWebHTMLGlobalattributeshidden which is styled as  by default Borrowing an idea from PureCSShttpspurecssio we improve upon this default by making  to help prevent its  from getting accidentally overridden jQuery incompatibility is not compatible with jQuerys  and  methods Therefore we dont currently especially endorse  over other techniques for managing the  of elementsTo merely toggle the visibility of an element meaning its  is not modified and the element can still affect the flow of the document use the  class instead"},{"layout":"docs","title":"Tables","description":"Documentation and examples for opt-in styling of tables (given their prevalent use in JavaScript plugins) with ndb-uikit.","group":"content","toc":true,"skipSize":195,"id":"tables.md","fullContent":"OverviewDue to the widespread use of  elements across thirdparty widgets like calendars and date pickers ndbuikits tables are optin Add the base class  to any  then extend with our optional modifier classes or custom styles All table styles are not inherited in ndbuikit meaning any nested tables can be styled independent from the parentUsing the most basic table markup heres how based tables look in ndbuikitVariantsUse contextual classes to color tables table rows or individual cells                    Class        Heading        Heading                            Default        Cell        Cell                  index SiteData themecolors                             Cell          Cell                          index SiteData themecolors index SiteData themecolors index SiteData themecolors   Accented tablesStriped rowsUse  to add zebrastriping to any table row within the Striped columnsUse  to add zebrastriping to any table columnThese classes can also be added to table variantsHoverable rowsAdd  to enable a hover state on table rows within a These hoverable rows can also be combined with the striped rows variantActive tablesHighlight a table row or cell by adding a  class                            First        Last        Handle                                    Mark        Otto        mdo                            Jacob        Thornton        fat                            Larry the Bird        twitter                                        First        Last        Handle                                    Mark        Otto        mdo                            Jacob        Thornton        fat                            Larry the Bird        twitter            How do the variants and accented tables workFor the accented tables striped rowsstripedrows striped columnsstripedcolumns hoverable rowshoverablerows and active tablesactivetables we used some techniques to make these effects work for all our table variantsvariants We start by setting the background of a table cell with the  custom property All table variants then set that custom property to colorize the table cells This way we dont get into trouble if semitransparent colors are used as table backgrounds Then we add an inset box shadow on the table cells with  to layer on top of any specified  Because we use a huge spread and no blur the color will be monotone Since  is unset by default we dont have a default box shadow When either    or  classes are added the  is set to a semitransparent color to colorize the background For each table variant we generate a  color with the highest contrast depending on that color For example the accent color for  is darker while  has a lighter accent color Text and border colors are generated the same way and their colors are inherited by defaultBehind the scenes it looks like thisTable bordersBordered tablesAdd  for borders on all sides of the table and cellsBorder color utilities can be added to change colorsTables without bordersAdd  for a table without bordersSmall tablesAdd  to make any  more compact by cutting all cell  in halfTable group dividersAdd a thicker border darker between table groups  and with  Customize the color by changing the  which we dont currently provide a utility class for at this time                  First      Last      Handle                        Mark      Otto      mdo                    Jacob      Thornton      fat                    Larry the Bird      twitter      Vertical alignmentTable cells of  are always vertical aligned to the bottom Table cells in  inherit their alignment from  and are aligned to the top by default Use the vertical align classes to realign where needed                              Heading           Heading           Heading           Heading                                       This cell inherits verticalalign middle from the table          This cell inherits verticalalign middle from the table          This cell inherits verticalalign middle from the table          This here is some placeholder text intended to take up quite a bit of vertical space to demonstrate how the vertical alignment works in the preceding cells                          This cell inherits verticalalign bottom from the table row          This cell inherits verticalalign bottom from the table row          This cell inherits verticalalign bottom from the table row          This here is some placeholder text intended to take up quite a bit of vertical space to demonstrate how the vertical alignment works in the preceding cells                          This cell inherits verticalalign middle from the table          This cell inherits verticalalign middle from the table          This cell is aligned to the top          This here is some placeholder text intended to take up quite a bit of vertical space to demonstrate how the vertical alignment works in the preceding cells                    NestingBorder styles active styles and table variants are not inherited by nested tables                  First      Last      Handle                        Mark      Otto      mdo                                                          Header              Header              Header                                                          A              First              Last                                      B              First              Last                                      C              First              Last                                                        Larry      the Bird      twitter      How nesting worksTo prevent any styles from leaking to nested tables we use the child combinator  selector in our CSS Since we need to target all the s and s in the   and  our selector would look pretty long without it As such we use the rather odd looking  selector to target all s and s of the  but none of any potential nested tablesNote that if you add s as direct children of a table those  will be wrapped in a  by default thus making our selectors work as intendedAnatomyTable headSimilar to tables and dark tables use the modifier classes  or  to make s appear light or dark gray                  First      Last      Handle                        Mark      Otto      mdo                    Jacob      Thornton      fat                    Larry      the Bird      twitter                        First      Last      Handle                        Mark      Otto      mdo                    Jacob      Thornton      fat                    Larry      the Bird      twitter      Table foot                  First      Last      Handle                        Mark      Otto      mdo                    Jacob      Thornton      fat                    Larry      the Bird      twitter                  Footer      Footer      Footer      Footer      CaptionsA  functions like a heading for a table It helps users with screen readers to find a table and understand what its about and decide if they want to read it      List of users      You can also put the  on the top of the table with   List of users                  First      Last      Handle                        Mark      Otto      mdo                    Jacob      Thornton      fat                    Larry      the Bird      twitter      Responsive tablesResponsive tables allow tables to be scrolled horizontally with ease Make any table responsive across all viewports by wrapping a  with  Or pick a maximum breakpoint with which to have a responsive table up to by using  Vertical clippingtruncationResponsive tables make use of  which clips off any content that goes beyond the bottom or top edges of the table In particular this can clip off dropdown menus and other thirdparty widgetsAlways responsiveAcross every breakpoint use  for horizontally scrolling tables                                        Heading          Heading          Heading          Heading          Heading          Heading          Heading          Heading          Heading                                                Cell          Cell          Cell          Cell          Cell          Cell          Cell          Cell          Cell                                    Cell          Cell          Cell          Cell          Cell          Cell          Cell          Cell          Cell                                    Cell          Cell          Cell          Cell          Cell          Cell          Cell          Cell          Cell                    Breakpoint specificUse  as needed to create responsive tables up to a particular breakpoint From that breakpoint and up the table will behave normally and not scroll horizontallyThese tables may appear broken until their responsive styles apply at specific viewport widthseq  xs                                         Heading          Heading          Heading          Heading          Heading          Heading          Heading          Heading                                                Cell          Cell          Cell          Cell          Cell          Cell          Cell          Cell                                    Cell          Cell          Cell          Cell          Cell          Cell          Cell          Cell                                    Cell          Cell          Cell          Cell          Cell          Cell          Cell          Cell                    eq  xs         SassVariablesLoopCustomizing The factor variables     are used to determine the contrast in table variants Apart from the light  dark table variants theme colors are lightened by the  variable"},{"layout":"docs","title":"Typography","description":"Documentation and examples for ndb-uikit typography, including global settings, headings, body text, lists, and more.","group":"content","toc":true,"skipSize":195,"id":"typography.md","fullContent":"Global settingsndbuikit sets basic global display typography and link styles When more control is needed check out the textual utility classes Use a native font stack that selects the best  for each OS and device For a more inclusive and accessible type scale we use the browsers default root  typically px so visitors can customize their browser defaults as needed Use the   and  attributes as our typographic base applied to the  Set the global link color via  Use  to set a  on the   by defaultThese styles can be found within  and the global variables are defined in  Make sure to set  in HeadingsAll HTML headings  through  are available Heading  Example        h ndbuikit heading    h ndbuikit heading    h ndbuikit heading    h ndbuikit heading    h ndbuikit heading    h ndbuikit heading  through  classes are also available for when you want to match the font styling of a heading but cannot use the associated HTML elementh ndbuikit headingh ndbuikit headingh ndbuikit headingh ndbuikit headingh ndbuikit headingh ndbuikit headingCustomizing headingsUse the included utility classes to recreate the small secondary heading text from ndbuikit   Fancy display heading  With faded secondary textDisplay headingsTraditional heading elements are designed to work best in the meat of your page content When you need a heading to stand out consider using a display headinga larger slightly more opinionated heading style  Display   Display   Display   Display   Display   Display Display headings are configured via the  Sass map and two variables  and Display headings are customizable via two variables  and LeadMake a paragraph stand out by adding   This is a lead paragraph It stands out from regular paragraphsInline text elementsStyling for common inline HTML elementsYou can use the mark tag to highlight textThis line of text is meant to be treated as deleted textThis line of text is meant to be treated as no longer accurateThis line of text is meant to be treated as an addition to the documentThis line of text will render as underlinedThis line of text is meant to be treated as fine printThis line rendered as bold textThis line rendered as italicized textBeware that those tags should be used for semantic purpose  represents text which is marked or highlighted for reference or notation purposes  represents sidecomments and small print like copyright and legal text  represents element that are no longer relevant or no longer accurate  represents a span of inline text which should be rendered in a way that indicates that it has a nontextual annotationIf you want to style your text you should use the following classes instead  will apply the same styles as   will apply the same styles as   will apply the same styles as   will apply the same styles as While not shown above feel free to use  and  in HTML  is meant to highlight words or phrases without conveying additional importance while  is mostly for voice technical terms etcText utilitiesChange text alignment transform style weight lineheight decoration and color with our text utilities and color utilitiesAbbreviationsStylized implementation of HTMLs  element for abbreviations and acronyms to show the expanded version on hover Abbreviations have a default underline and gain a help cursor to provide additional context on hover and to users of assistive technologiesAdd  to an abbreviation for a slightly smaller fontsizeattrHTMLBlockquotesFor quoting blocks of content from another source within your document Wrap  around any HTML as the quote  A wellknown quote contained in a blockquote elementNaming a sourceThe HTML spec requires that blockquote attribution be placed outside the  When providing attribution wrap your  in a  and use a  or a block level element eg  with the  class Be sure to wrap the name of the source work in  as well      A wellknown quote contained in a blockquote element        Someone famous in Source Title  AlignmentUse text utilities as needed to change the alignment of your blockquote      A wellknown quote contained in a blockquote element        Someone famous in Source Title        A wellknown quote contained in a blockquote element        Someone famous in Source Title  ListsUnstyledRemove the default  and left margin on list items immediate children only This only applies to immediate children list items meaning you will need to add the class for any nested lists as well  This is a list  It appears completely unstyled  Structurally its still a list  However this style only applies to immediate child elements  Nested lists          are unaffected by this style      will still show a bullet      and have appropriate left margin        This may still come in handy in some situationsInlineRemove a lists bullets and apply some light  with a combination of two classes  and   This is a list item  And another one  But theyre displayed inlineDescription list alignmentAlign terms and descriptions horizontally by using our grid systems predefined classes or semantic mixins For longer terms you can optionally add a  class to truncate the text with an ellipsis  Description lists  A description list is perfect for defining terms  Term      Definition for the term    And some more placeholder definition text    Another term  This definition is short so no extra paragraphs or anything  Truncated term is truncated  This can be useful when space is tight Adds an ellipsis at the end  Nesting            Nested definition list      I heard you like definition lists Let me put a definition list inside your definition list      Responsive font sizesIn ndbuikit  weve enabled responsive font sizes by default allowing text to scale more naturally across device and viewport sizes Have a look at the RFS page to find out how this worksSassVariablesHeadings have some dedicated variables for sizing and spacingMiscellaneous typography elements covered here and in Reboot also have dedicated variablesMixinsThere are no dedicated mixins for typography but ndbuikit does use Responsive Font Sizing RFS"},{"layout":"docs","title":"Color","description":"ndb-uikit is supported by an extensive color system that themes our styles and components. This enables more comprehensive customization and extension for any project.","group":"customize","toc":true,"skipSize":242,"id":"color.md","fullContent":"Theme colorsWe use a subset of all colors to create a smaller color palette for generating color schemes also available as Sass variables and a Sass map in ndbuikits  file    index SiteData themecolors                   All these colors are available as a Sass map Check out our Sass maps and loops docs for how to modify these colorsAll colorsAll ndbuikit colors are available as Sass variables and a Sass map in  file To avoid increased file sizes we dont create text or background color classes for each of these variables Instead we choose a subset of these colors for a theme palettethemecolorsBe sure to monitor contrast ratios as you customize colors As shown below weve added three contrast ratios to each of the main colorsone for the swatchs current colors one for against white and one for against black        and not eq colorname white not eq colorname gray not eq colorname graydark                                       seq                                      gray      adbbd          gray                  black                    white      fff      Notes on SassSass cannot programmatically generate variables so we manually created variables for every tint and shade ourselves We specify the midpoint value eg  and use custom color functions to tint lighten or shade darken our colors via Sasss  color functionUsing  is not the same as  and the former blends the specified color with white or black while the latter only adjusts the lightness value of each color The result is a much more complete suite of colors as shown in this CodePen demohttpscodepenioemdeohpenzYOQOPBOur  and  functions use  alongside our  variable which specifies a stepped percentage value for each mixed color we produce See the  and  files for the full source codeColor Sass mapsndbuikits source Sass files include three maps to help you quickly and easily loop over a list of colors and their hex values  lists all our available base  colors  lists all semantically named theme colors shown below  lists all tints and shades of grayWithin  youll find ndbuikits color variables and Sass map Heres an example of the  Sass mapAdd remove or modify values within the map to update how theyre used in many other components Unfortunately at this time not every component utilizes this Sass map Future updates will strive to improve upon this Until then plan on making use of the  variables and this Sass mapExampleHeres how you can use these in your SassColor and background utility classes are also available for setting  and  using the  color valuesGenerating utilitiesndbuikit doesnt include  and  utilities for every color variable but you can generate these yourself with our utility API and our extended Sass maps added in v To start make sure youve imported our functions variables mixins and utilities Use our  function to quickly merge multiple Sass maps together in a new map Merge this new combined map to extend any utility with a  class nameHeres an example that generates text color utilities eg  using the above stepsThis will generate new  utilities for every color and level You can do the same for any other utility and property as well"},{"layout":"docs","title":"Components","description":"Learn how and why we build nearly all our components responsively and with base and modifier classes.","group":"customize","toc":true,"skipSize":181,"id":"components.md","fullContent":"Base classesndbuikits components are largely built with a basemodifier nomenclature We group as many shared properties as possible into a base class like  and then group individual styles for each variant into modifier classes like  or To build our modifier classes we use Sasss  loops to iterate over a Sass map This is especially helpful for generating variants of a component by our  and creating responsive variants for each breakpoint As you customize these Sass maps and recompile youll automatically see your changes reflected in these loopsCheck out our Sass maps and loops docs for how to customize these loops and extend ndbuikits basemodifier approach to your own codeModifiersMany of ndbuikits components are built with a basemodifier class approach This means the bulk of the styling is contained to a base class eg  while style variations are confined to modifier classes eg  These modifier classes are built from the  map to make customizing the number and name of our modifier classesHere are two examples of how we loop over the  map to generate modifiers to the  and  componentsResponsiveThese Sass loops arent limited to color maps either You can also generate responsive variations of your components Take for example our responsive alignment of the dropdowns where we mix an  loop for the  Sass map with a media query includeShould you modify your  your changes will apply to all the loops iterating over that mapFor more information and examples on how to modify our Sass maps and variables please refer to the Sass section of the Grid documentationCreating your ownWe encourage you to adopt these guidelines when building with ndbuikit to create your own components Weve extended this approach ourselves to the custom components in our documentation and examples Components like our callouts are built just like our provided components with base and modifier classes      This is a callout We built it custom for ourdocumentationso our messages to you stand out It has three variants via modifier classes  In your CSS youd have something like the following where the bulk of the styling is done via  Then the unique styles between each variant is controlled via modifier classFor the callouts that unique styling is just a  When you combine that base class with one of those modifier classes you get your complete component familyThis is an info callout Example text to show it in actionThis is a warning callout Example text to show it in actionThis is a danger callout Example text to show it in action"},{"layout":"docs","title":"CSS variables","description":"Use ndb-uikit's CSS custom properties for fast and forward-looking design and development.","group":"customize","toc":true,"skipSize":173,"id":"css-variables.md","fullContent":"ndbuikit includes many CSS custom properties variableshttpsdevelopermozillaorgenUSdocsWebCSSUsingCSScustomproperties in its compiled CSS for realtime customization without the need to recompile Sass These provide easy access to commonly used values like our theme colors breakpoints and primary font stacks when working in your browsers inspector a code sandbox or general prototypingAll our custom properties are prefixed with  to avoid conflicts with third party CSSRoot variablesHere are the variables we include note that the  is required that can be accessed anywhere ndbuikits CSS is loaded Theyre located in our  file and included in our compiled dist filesComponent variablesndbuikit  is increasingly making use of custom properties as local variables for various components This way we reduce our compiled CSS ensure styles arent inherited in places like nested tables and allow some basic restyling and extending of ndbuikit components after Sass compilationHave a look at our table documentation for some insight into how were using CSS variables Our navbars also use CSS variables as of v Were also using CSS variables across our gridsprimarily for gutters the new optin CSS gridwith more component usage coming in the futureWhenever possible well assign CSS variables at the base component level eg  for navbar and its subcomponents This reduces guessing on where and how to customize and allows for easy modifications by our team in future updatesPrefixMost CSS variables use a prefix to avoid collisions with your own codebase This prefix is in addition to the  thats required on every CSS variableCustomize the prefix via the  Sass variable By default its set to  note the trailing dashExamplesCSS variables offer similar flexibility to Sasss variables but without the need for compilation before being served to the browser For example here were resetting our pages font and link styles with CSS variablesGrid breakpointsWhile we include our grid breakpoints as CSS variables except for  be aware that CSS variables do not work in media queries This is by design in the CSS spec for variables but may change in coming years with support for  variables Check out this Stack Overflow answerhttpsstackoverflowcoma for some helpful links In the meantime you can use these variables in other CSS situations as well as in your JavaScript"},{"layout":"docs","title":"Optimize","description":"Keep your projects lean, responsive, and maintainable so you can deliver the best experience and focus on more important jobs.","group":"customize","toc":true,"skipSize":204,"id":"optimize.md","fullContent":"Lean Sass importsWhen using Sass in your asset pipeline make sure you optimize ndbuikit by only ing the components you need Your largest optimizations will likely come from the  section of our If youre not using a component comment it out or delete it entirely For example if youre not using the carousel remove that import to save some file size in your compiled CSS Keep in mind there are some dependencies across Sass imports that may make it more difficult to omit a fileLean JavaScriptndbuikits JavaScript includes every component in our primary dist files  and  and even our primary dependency Popper with our bundle files  and  While youre customizing via Sass be sure to remove related JavaScriptFor instance assuming youre using your own JavaScript bundler like Webpack Parcel or Vite youd only import the JavaScript you plan on using In the example below we show how to just include our modal JavaScriptThis way youre not including any JavaScript you dont intend to use for components like buttons carousels and tooltips If youre importing dropdowns tooltips or popovers be sure to list the Popper dependency in your  fileDefault ExportsFiles in  use the default export so if you want to use one of them you have to do the followingAutoprefixer browserslistrcndbuikit depends on Autoprefixer to automatically add browser prefixes to certain CSS properties Prefixes are dictated by our  file found in the root of the ndbuikit repo Customizing this list of browsers and recompiling the Sass will automatically remove some CSS from your compiled CSS if there are vendor prefixes unique to that browser or versionUnused CSSHelp wanted with this section please consider opening a PR ThanksWhile we dont have a prebuilt example for using PurgeCSShttpsFullHumanpurgecss with ndbuikit there are some helpful articles and walkthroughs that the community has written Here are some options  Lastly this CSS Tricks article on unused CSShttpscsstrickscomhowdoyouremoveunusedcssfromasite shows how to use PurgeCSS and other similar toolsMinify and gzipWhenever possible be sure to compress all the code you serve to your visitors If youre using ndbuikit dist files try to stick to the minified versions indicated by the  and  extensions If youre building ndbuikit from the source with your own build system be sure to implement your own minifiers for HTML CSS and JSNonblocking filesWhile minifying and using compression might seem like enough making your files nonblocking ones is also a big step in making your site welloptimized and fast enoughIf you are using a Lighthousehttpsdeveloperchromecomdocslighthouseoverview plugin in Google Chrome you may have stumbled over FCP The First Contentful Painthttpswebdevfcp metric measures the time from when the page starts loading to when any part of the pages content is rendered on the screenYou can improve FCP by deferring noncritical JavaScript or CSS What does that mean Simply JavaScript or stylesheets that dont need to be present on the first paint of your page should be marked with  or  attributesThis ensures that the less important resources are loaded later and not blocking the first paint On the other hand critical resources can be included as inline scripts or stylesIf you want to learn more about this there are already a lot of great articles about it  Always use HTTPSYour website should only be available over HTTPS connections in production HTTPS improves the security privacy and availability of all sites and there is no such thing as nonsensitive web traffichttpshttpsciogoveverything The steps to configure your website to be served exclusively over HTTPS vary widely depending on your architecture and web hosting provider and thus are beyond the scope of these docsSites served over HTTPS should also access all stylesheets scripts and other assets over HTTPS connections Otherwise youll be sending users mixed active contenthttpsdevelopermozillaorgenUSdocsWebSecurityMixedcontent leading to potential vulnerabilities where a site can be compromised by altering a dependency This can lead to security issues and inbrowser warnings displayed to users Whether youre getting ndbuikit from a CDN or serving it yourself ensure that you only access it over HTTPS connections"},{"layout":"docs","title":"Options","description":"Quickly customize ndb-uikit with built-in variables to easily toggle global CSS preferences for controlling style and behavior.","group":"customize","skipSize":194,"id":"options.md","fullContent":"Customize ndbuikit with our builtin custom variables file and easily toggle global CSS preferences with new  Sass variables Override a variables value and recompile with  as neededYou can find and customize these variables for key global options in ndbuikits  file Variable                        Values                              Description                                                                                                           default or any value    Specifies the default spacer value to programmatically generate our spacer utilities                  default or          Enables predefined  styles on various components                  or  default         Enables predefined decorative  styles on various components Does not affect s used for focus states                or  default         Enables predefined gradients via  styles on various components              default or          Enables predefined s on various components           default or          Enables the  media query which suppresses certain animationstransitions based on the users browseroperating system preferences             default or          Enables the generation of CSS classes for the grid system eg   etc        default or          Enables the generation of CSS classes for layout containers New in v                    default or          Enables pseudo element caret on           default or          Add hand cursor to nondisabled button elements                      default or          Globally enables RFS         default or          Enables  icons within textual inputs and some custom forms for validation states         or  default         Enables the generation of negative margin utilities     default or          Set to  to hide warnings when using any of the deprecated mixins and functions that are planned to be removed in       default or          Enables the  suffix in utility classes            default or          Applies  globally except for users asking for reduced motion through  media query"},{"layout":"docs","title":"Customize","description":"Learn how to theme, customize, and extend ndb-uikit with Sass, a boatload of global options, an expansive color system, and more.","group":"customize","toc":false,"aliases":"/docs/1.0/customize/","sections":[{"title":"Sass","description":"Utilize our source Sass files to take advantage of variables, maps, mixins, and functions."},{"title":"Options","description":"Customize ndb-uikit with built-in variables to easily toggle global CSS preferences."},{"title":"Color","description":"Learn about and customize the color systems that support the entire toolkit."},{"title":"Components","description":"Learn how we build nearly all our components responsively and with base and modifier classes."},{"title":"CSS variables","description":"Use ndb-uikit's CSS custom properties for fast and forward-looking design and development."},{"title":"Optimize","description":"Keep your projects lean, responsive, and maintainable so you can deliver the best experience."}],"skipSize":1004,"id":"overview.md","fullContent":"OverviewThere are multiple ways to customize ndbuikit Your best path can depend on your project the complexity of your build tools the version of ndbuikit youre using browser support and moreOur two preferred methods are Using ndbuikit via package manager so you can use and extend our source files Using ndbuikits compiled distribution files or jsDelivr so you can add onto or override ndbuikits stylesWhile we cannot go into details here on how to use every package manager we can give some guidance on using ndbuikit with your own Sass compilerFor those who want to use the distribution files review the getting started page for how to include those files and an example HTML page From there consult thedocumentationfor the layout components and behaviors youd like to useAs you familiarize yourself with ndbuikit continue exploring this section for more details on how to utilize our global options making use of and changing our color system how we build our components how to use our growing list of CSS custom properties and how to optimize your code when building with ndbuikitCSPs and embedded SVGsSeveral ndbuikit components include embedded SVGs in our CSS to style components consistently and easily across browsers and devices For organizations with more strict CSP configurations weve documented all instances of our embedded SVGs all of which are applied via  so you can more thoroughly review your options Accordion Carousel controls Close button used in alerts and modals Form checkboxes and radio buttons Form switches Form validation icons Navbar toggle buttons Select menusBased on community conversationhttpstwbsndbuikitissues some options for addressing this in your own codebase include replacing the URLs with locally hosted assets removing the images and using inline images not possible in all components and modifying your CSP Our recommendation is to carefully review your own security policies and decide on the best path forward if necessary"},{"layout":"docs","title":"Sass","description":"Utilize our source Sass files to take advantage of variables, maps, mixins, and functions to help you build faster and customize your project.","group":"customize","toc":true,"skipSize":216,"id":"sass.md","fullContent":"Utilize our source Sass files to take advantage of variables maps mixins and moreFile structureWhenever possible avoid modifying ndbuikits core files For Sass that means creating your own stylesheet that imports ndbuikit so you can modify and extend it Assuming youre using a package manager like npm youll have a file structure that looks like thisIf youve downloaded our source files and arent using a package manager youll want to manually create something similar to that structure keeping ndbuikits source files separate from your ownImportingIn your  youll import ndbuikits source Sass files You have two options include all of ndbuikit or pick the parts you need We encourage the latter though be aware there are some requirements and dependencies across our components You also will need to include some JavaScript for our pluginsutilitiesscssWith that setup in place you can begin to modify any of the Sass variables and maps in your  You can also start to add parts of ndbuikit under the  section as needed We suggest using the full import stack from our  file as your starting pointVariable defaultsEvery Sass variable in ndbuikit includes the  flag allowing you to override the variables default value in your own Sass without modifying ndbuikits source code Copy and paste variables as needed modify their values and remove the  flag If a variable has already been assigned then it wont be reassigned by the default values in ndbuikitYou will find the complete list of ndbuikits variables in  Some variables are set to  these variables dont output the property unless they are overridden in your configurationVariable overrides must come after our functions are imported but before the rest of the importsHeres an example that changes the  and  for the  when importing and compiling ndbuikit via npmRepeat as necessary for any variable in ndbuikit including the global options belowMaps and loopsndbuikit includes a handful of Sass maps key value pairs that make it easier to generate families of related CSS We use Sass maps for our colors grid breakpoints and more Just like Sass variables all Sass maps include the  flag and can be overridden and extendedSome of our Sass maps are merged into empty ones by default This is done to allow easy expansion of a given Sass map but comes at the cost of making removing items from a map slightly more difficultModify mapAll variables in the  map are defined as standalone variables To modify an existing color in our  map add the following to your custom Sass fileLater on these variables are set in ndbuikits  mapAdd to mapAdd new colors to  or any other map by creating a new Sass map with your custom values and merging it with the original map In this case well create a new  map and merge it with Remove from mapTo remove colors from  or any other map use  Be aware you must insert  between our requirements just after its definition in  and before its usage in Required keysndbuikit assumes the presence of some specific keys within Sass maps as we used and extend these ourselves As you customize the included maps you may encounter errors where a specific Sass maps key is being usedFor example we use the   and  keys from  for links buttons and form states Replacing the values of these keys should present no issues but removing them may cause Sass compilation issues In these instances youll need to modify the Sass code that makes use of those valuesFunctionsColorsNext to the Sass maps we have theme colors can also be used as standalone variables like You can lighten or darken colors with ndbuikits  and  functions These functions will mix colors with black or white unlike Sass native  and  functions which will change the lightness by a fixed amount which often doesnt lead to the desired effectIn practice youd call the function and pass in the color and weight parametersColor contrastIn order to meet the Web Content Accessibility Guidelines WCAGhttpswwwworgTRWCAG contrast requirements authors must provide a minimum text color contrast of httpswwwworgTRWCAGcontrastminimum and a minimum nontext color contrast of httpswwwworgTRWCAGnontextcontrast with very few exceptionsTo help with this we included the  function in ndbuikit It uses the WCAG contrast ratio algorithmhttpswwwworgTRWCAGdfncontrastratio for calculating contrast thresholds based on relative luminancehttpswwwworgTRWCAGdfnrelativeluminance in an  color space to automatically return a light  dark  or black  contrast color based on the specified base color This function is especially useful for mixins or loops where youre generating multiple classesFor example to generate color swatches from our  mapIt can also be used for oneoff contrast needscolor fffYou can also specify a base color with our color map functionscolor fffEscape SVGWe use the  function to escape the  and  characters for SVG background images When using the  function data URIs must be quotedAdd and Subtract functionsWe use the  and  functions to wrap the CSS  function The primary purpose of these functions is to avoid errors when a unitless  value is passed into a  expression Expressions like  will return an error in all browsers despite being mathematically correctExample where the calc is validExample where the calc is invalidMixinsOur  directory has a ton of mixins that power parts of ndbuikit and can also be used across your own projectColor schemesA shorthand mixin for the  media query is available with support for   and custom color schemes"},{"layout":"single","title":"Examples","description":"Quickly get a project started with any of our examples ranging from using parts of the framework to custom components and layouts.","aliases":"/examples/","skipSize":205,"id":"_index.md","fullContent":"RTL is still experimental and will evolve with feedback Spotted something or have an improvement to suggest                Please open an issue                              eq i                                                                              eq add i  len"},{"layout":"docs","title":"Approach","description":"Learn about the guiding principles, strategies, and techniques used to build and maintain ndb-uikit so you can more easily customize and extend it yourself.","group":"extend","aliases":["/docs/1.0/extend/"],"skipSize":254,"id":"approach.md","fullContent":"While the getting started pages provide an introductory tour of the project and what it offers this document focuses on why we do the things we do in ndbuikit It explains our philosophy to building on the web so that others can learn from us contribute with us and help us improveSee something that doesnt sound right or perhaps could be done better Open an issueissuesnewchoosewed love to discuss it with youSummaryWell dive into each of these more throughout but at a high level heres what guides our approach Components should be responsive and mobilefirst Components should be built with a base class and extended via modifier classes Component states should obey a common zindex scale Whenever possible prefer a HTML and CSS implementation over JavaScript Whenever possible use utilities over custom styles Whenever possible avoid enforcing strict HTML requirements children selectorsResponsivendbuikits responsive styles are built to be responsive an approach thats often referred to as mobilefirst We use this term in ourdocumentationand largely agree with it but at times it can be too broad While not every component must be entirely responsive in ndbuikit this responsive approach is about reducing CSS overrides by pushing you to add styles as the viewport becomes largerAcross ndbuikit youll see this most clearly in our media queries In most cases we use  queries that begin to apply at a specific breakpoint and carry up through the higher breakpoints For example a  applies from  to infinity On the other hand a  applies from the medium breakpoint and upAt times well use  when a components inherent complexity requires it At times these overrides are functionally and mentally clearer to implement and support than rewriting core functionality from our components We strive to limit this approach but will use it from time to timeClassesAside from our Reboot a crossbrowser normalization stylesheet all our styles aim to use classes as selectors This means steering clear of type selectors eg  and extraneous parent classes eg  that make styles too specific to easily overrideAs such components should be built with a base class that houses common nottobe overridden propertyvalue pairs For example  and  We use  for all the common styles like   and  We then use modifiers like  to add the color backgroundcolor bordercolor etcModifier classes should only be used when there are multiple properties or values to be changed across multiple variants Modifiers are not always necessary so be sure youre actually saving lines of code and preventing unnecessary overrides when creating them Good examples of modifiers are our theme color classes and size variantszindex scalesThere are two  scales in ndbuikitelements within a component and overlay componentsComponent elements Some components in ndbuikit are built with overlapping elements to prevent double borders without modifying the  property For example button groups input groups and pagination These components share a standard  scale of  through   is default initial  is   is  and  is  This approach matches our expectations of highest user priority If an element is focused its in view and at the users attention Active elements are second highest because they indicate state Hover is third highest because it indicates user intent but nearly anything can be hoveredOverlay componentsndbuikit includes several components that function as an overlay of some kind This includes in order of highest  dropdowns fixed and sticky navbars modals tooltips and popovers These components have their own  scale that begins at  This starting number was chosen arbitrarily and serves as a small buffer between our styles and your projects custom stylesEach overlay component increases its  value slightly in such a way that common UI principles allow user focused or hovered elements to remain in view at all times For example a modal is document blocking eg you cannot take any other action save for the modals action so we put that above our navbarsLearn more about this in our  layout pageHTML and CSS over JSWhenever possible we prefer to write HTML and CSS over JavaScript In general HTML and CSS are more prolific and accessible to more people of all different experience levels HTML and CSS are also faster in your browser than JavaScript and your browser generally provides a great deal of functionality for youThis principle is our firstclass JavaScript API using  attributes You dont need to write nearly any JavaScript to use our JavaScript plugins instead write HTML Read more about this in our JavaScript overview pageLastly our styles build on the fundamental behaviors of common web elements Whenever possible we prefer to use what the browser provides For example you can put a  class on nearly any element but most elements dont provide any semantic value or browser functionality So instead we use s and sThe same goes for more complex components While we could write our own form validation plugin to add classes to a parent element based on an inputs state thereby allowing us to style the text say red we prefer using the  pseudoelements every browser provides usUtilitiesUtility classesformerly helpers in ndbuikit are a powerful ally in combating CSS bloat and poor page performance A utility class is typically a single immutable propertyvalue pairing expressed as a class eg  represents  Their primary appeal is speed of use while writing HTML and limiting the amount of custom CSS you have to writeSpecifically regarding custom CSS utilities can help combat increasing file size by reducing your most commonly repeated propertyvalue pairs into single classes This can have a dramatic effect at scale in your projectsFlexible HTMLWhile not always possible we strive to avoid being overly dogmatic in our HTML requirements for components Thus we focus on single classes in our CSS selectors and try to avoid immediate children selectors  This gives you more flexibility in your implementation and helps keep our CSS simpler and less specificCode conventionsCode Guidehttpscodeguideco from ndbuikit cocreator mdo documents how we write our HTML and CSS across ndbuikit It specifies guidelines for general formatting common sense defaults property and attribute orders and moreWe use Stylelinthttpsstylelintio to enforce these standards and more in our SassCSS Our custom Stylelint confighttpstwbsstylelintconfigtwbsndbuikit is open source and available for others to use and extendWe use vnujarhttpswwwnpmjscompackagevnujar to enforce standard and semantic HTML as well as detecting common errors"},{"layout":"docs","title":"Icons","description":"Guidance and suggestions for using external icon libraries with ndb-uikit.","group":"extend","skipSize":136,"id":"icons.md","fullContent":"While ndbuikit doesnt include an icon set by default we do have our own comprehensive icon library called ndbuikit Icons Feel free to use them or any other icon set in your project Weve included details for ndbuikit Icons and other preferred icon sets belowWhile most icon sets include multiple file formats we prefer SVG implementations for their improved accessibility and vector supportndbuikit Iconsndbuikit Icons is a growing library of SVG icons that are designed by mdohttpsmdo and maintained by the ndbuikit Teamhttpsorgstwbspeople The beginnings of this icon set come from ndbuikits very own componentsour forms carousels and more ndbuikit has very few icon needs out of the box so we didnt need much However once we got going we couldnt stop making moreOh and did we mention theyre completely open source Licensed under MIT just like ndbuikit our icon set is available to everyoneLearn more about ndbuikit Icons including how to install them and recommended usageAlternativesWeve tested and used these icon sets ourselves as preferred alternatives to ndbuikit Iconsindex SiteDataicons type  More optionsWhile we havent tried these out ourselves they do look promising and provide multiple formats including SVG"},{"layout":"docs","title":"Checks and radios","description":"Create consistent cross-browser and cross-device checkboxes and radios with our completely rewritten checks component.","group":"forms","aliases":"/docs/1.0/forms/checks/","toc":true,"skipSize":236,"id":"checks-radios.md","fullContent":"ApproachBrowser default checkboxes and radios are replaced with the help of  a series of classes for both input types that improves the layout and behavior of their HTML elements that provide greater customization and cross browser consistency Checkboxes are for selecting one or several options in a list while radios are for selecting one option from manyStructurally our s and s are sibling elements as opposed to an  within a  This is slightly more verbose as you must specify  and  attributes to relate the  and  We use the sibling selector  for all our  states like  or  When combined with the  class we can easily style the text for each item based on the s stateOur checks use custom ndbuikit icons to indicate checked or indeterminate statesChecks        Default checkbox          Checked checkbox  IndeterminateCheckboxes can utilize the  pseudo class when manually set via JavaScript there is no available HTML attribute for specifying it        Indeterminate checkbox  DisabledAdd the  attribute and the associated s are automatically styled to match with a lighter color to help indicate the inputs state        Disabled indeterminate checkbox          Disabled checkbox          Disabled checked checkbox  Radios        Default radio          Default checked radio  DisabledAdd the  attribute and the associated s are automatically styled to match with a lighter color to help indicate the inputs state        Disabled radio          Disabled checked radio  SwitchesA switch has the markup of a custom checkbox but uses the  class to render a toggle switch Consider using  to more accurately convey the nature of the control to assistive technologies that support this role In older assistive technologies it will simply be announced as a regular checkbox as a fallback Switches also support the  attribute    Default switch checkbox input    Checked switch checkbox input    Disabled switch checkbox input    Disabled checked switch checkbox inputDefault stackedBy default any number of checkboxes and radios that are immediate sibling will be vertically stacked and appropriately spaced with         Default checkbox          Disabled checkbox          Default radio          Second default radio          Disabled radio  InlineGroup checkboxes or radios on the same horizontal row by adding  to any              disabled             disabledReversePut your checkboxes radios and switches on the opposite side with the  modifier class        Reverse checkbox          Disabled reverse checkbox      Reverse switch checkbox inputWithout labelsOmit the wrapping  for checkboxes and radios that have no label text Remember to still provide some form of accessible name for assistive technologies for instance using  See the forms overview accessibility section for details    Toggle buttonsCreate buttonlike checkboxes and radio buttons by using  styles rather than  on the  elements These toggle buttons can further be grouped in a button group if neededCheckbox toggle buttonsSingle toggleCheckedDisabledVisually these checkbox toggle buttons are identical to the button plugin toggle buttons However they are conveyed differently by assistive technologies the checkbox toggles will be announced by screen readers as checkednot checked since despite their appearance they are fundamentally still checkboxes whereas the button plugin toggle buttons will be announced as buttonbutton pressed The choice between these two approaches will depend on the type of toggle you are creating and whether or not the toggle will make sense to users when announced as a checkbox or as an actual buttonRadio toggle buttonsCheckedRadioDisabledRadioOutlined stylesDifferent variants of  such at the various outlined styles are supportedSingle toggleCheckedChecked success radioDanger radioSassVariables"},{"layout":"docs","title":"Floating labels","description":"Create beautifully simple form labels that float over your input fields.","group":"forms","toc":true,"skipSize":153,"id":"floating-labels.md","fullContent":"ExampleWrap a pair of  and  elements in  to enable floating labels with ndbuikits textual form fields A  is required on each  as our method of CSSonly floating labels uses the  pseudoelement Also note that the  must come first so we can utilize a sibling selector eg     Email address    PasswordWhen theres a  already defined s will automatically adjust to their floated position    Input with valueForm validation styles also work as expected    Invalid inputTextareasBy default s with  will be the same height as s    CommentsTo set a custom height on your  do not use the  attribute Instead set an explicit  either inline or via custom CSS    CommentsSelectsOther than  floating labels are only available on s They work in the same way but unlike s theyll always show the  in its floated state Selects with  and  are not supported      Open this select menu    One    Two    Three    Works with selectsReadonly plaintextFloating labels also support  which can be helpful for toggling from an editable  to a plaintext value without affecting the page layout    Empty input    Input with valueInput groupsFloating labels also support             Username  When using  and  along with form validation the  should be placed outside of the  but inside of the  This means that the feedback will need to be shown using javascript            Username        Please choose a username  LayoutWhen working with the ndbuikit grid system be sure to place form elements within column classes                  Email address                          Open this select menu        One        Two        Three            Works with selects      SassVariables"},{"layout":"docs","title":"Form controls","description":"Give textual form controls like `<input>`s and `<textarea>`s an upgrade with custom styles, sizing, focus states, and more.","group":"forms","toc":true,"skipSize":202,"id":"form-control.md","fullContent":"Example  Email address    Example textarea  SizingSet heights using classes like  and DisabledAdd the  boolean attribute on an input to give it a grayed out appearance remove pointer events and prevent focusingReadonlyAdd the  boolean attribute on an input to prevent modification of the inputs value  inputs can still be focused and selected while  inputs cannotReadonly plain textIf you want to have  elements in your form styled as plain text replace  with  to remove the default form field styling and preserve the correct  and       Email                      Password                      Email            Password            Confirm identity  File input  Default file input example    Multiple files input example    Disabled file input example    Small file input example    Large file input example  ColorSet the  and add  to the  We use the modifier class to set fixed s and override some inconsistencies between browsersColor pickerDatalistsDatalists allow you to create a group of s that can be accessed and autocompleted from within an  These are similar to  elements but come with more menu styling limitations and differences While most browsers and operating systems include some support for  elements their styling is inconsistent at bestLearn more about support for datalist elementshttpscaniusecomdatalistDatalist example          SassVariables are shared across most of our form controls and not buttons and  are for our s and  component are for file input"},{"layout":"docs","title":"Input group","description":"Easily extend form controls by adding text, buttons, or button groups on either side of textual inputs, custom selects, and custom file inputs.","group":"forms","toc":true,"skipSize":220,"id":"input-group.md","fullContent":"Basic examplePlace one addon or button on either side of an input You may also place one on both sides of an input Remember to place s outside the input group        examplecomYour vanity URL  httpsexamplecomusers                With textarea  WrappingInput groups wrap by default via  in order to accommodate custom form field validation within an input group You may disable this with     SizingAdd the relative form sizing classes to the  itself and contents within will automatically resizeno need for repeating the form control size classes on each elementSizing on the individual input group elements isnt supported  Small    Default    Large  Checkboxes and radiosPlace any checkbox or radio option within an input groups addon instead of text We recommend adding  to the  when theres no visible text next to the input                    Multiple inputsWhile multiple s are supported visually validation styles are only available for input groups with a single   First and last name    Multiple addonsMultiple addons are supported and can be mixed with checkbox and radio input versions            Button addons  Button      Button  Button  Button      Button  ButtonButtons with dropdowns  Dropdown      Action    Another action    Something else here        Separated link        Dropdown      Action    Another action    Something else here        Separated link    Dropdown      Action before    Another action before    Something else here        Separated link      Dropdown      Action    Another action    Something else here        Separated link  Segmented buttons  Action      Toggle Dropdown        Action    Another action    Something else here        Separated link        Action      Toggle Dropdown        Action    Another action    Something else here        Separated link  Custom formsInput groups include support for custom selects and custom file inputs Browser default versions of these are not supportedCustom select  Options      Choose    One    Two    Three        Choose    One    Two    Three    Options  Button      Choose    One    Two    Three        Choose    One    Two    Three    ButtonCustom file input  Upload      Upload  Button      ButtonSassVariables"},{"layout":"docs","title":"Layout","description":"Give your forms some structure—from inline to horizontal to custom grid implementations—with our form layout options.","group":"forms","toc":true,"skipSize":189,"id":"layout.md","fullContent":"FormsEvery group of form fields should reside in a  element ndbuikit provides no default styling for the  element but there are some powerful browser features that are provided by default New to browser forms Consider reviewing the MDN form docshttpsdevelopermozillaorgenUSdocsWebHTMLElementform for an overview and complete list of available attributes s within a  default to  so strive to be specific and always include a Since ndbuikit applies  and  to almost all our form controls forms will by default stack vertically Additional classes can be used to vary this layout on a perform basisUtilitiesMargin utilities are the easiest way to add some structure to forms They provide basic grouping of labels controls optional form text and form validation messaging We recommend sticking to  utilities and using a single direction throughout the form for consistencyFeel free to build your forms however you like with s s or nearly any other element  Example label    Another label  Form gridMore complex forms can be built using our grid classes Use these for form layouts that require multiple columns varied widths and additional alignment options Requires the  Sass variable to be enabled on by default                GuttersBy adding gutter modifier classes you can have control over the gutter width in as well the inline as block direction Also requires the  Sass variable to be enabled on by default                More complex layouts can also be created with the grid system      Email            Password            Address            Address             City            State          Choose                  Zip                                Check me out                  Sign in  Horizontal formCreate horizontal forms with the grid by adding the  class to form groups and using the  classes to specify the width of your labels and controls Be sure to add  to your s as well so theyre vertically centered with their associated form controlsAt times you maybe need to use margin or padding utilities to create that perfect alignment you need For example weve removed the  on our stacked radio inputs label to better align the text baseline      Email                      Password                      Radios                                    First radio                                              Second radio                                              Third disabled radio                                                          Example checkbox                      Sign inHorizontal form label sizingBe sure to use  or  to your s or s to correctly follow the size of  and   Email          Email          Email        Column sizingAs shown in the previous examples our grid system allows you to place any number of s within a  Theyll split the available width equally between them You may also pick a subset of your columns to take up more or less space while the remaining s equally split the rest with specific column classes like                         AutosizingThe example below uses a flexbox utility to vertically center the contents and changes  to  so that your columns only take up as much space as needed Put another way the column sizes itself based on the contents      Name            Username                            Preference          Choose      One      Two      Three                                Remember me                  Submit  You can then remix that once again with sizespecific column classes      Name            Username                            Preference          Choose      One      Two      Three                                Remember me                  Submit  Inline formsUse the  classes to create responsive horizontal layouts By adding gutter modifier classes well have gutters in horizontal and vertical directions On narrow mobile viewports the  helps stack the form controls and more The  aligns the form elements to the middle making the  align properly      Username                            Preference          Choose      One      Two      Three                                Remember me                  Submit"},{"layout":"docs","title":"Forms","description":"Examples and usage guidelines for form control styles, layout options, and custom components for creating a wide variety of forms.","group":"forms","toc":true,"aliases":"/docs/1.0/forms/","sections":[{"title":"Form control","description":"Style textual inputs and textareas with support for multiple states."},{"title":"Select","description":"Improve browser default select elements with a custom initial appearance."},{"title":"Checks & radios","description":"Use our custom radio buttons and checkboxes in forms for selecting input options."},{"title":"Range","description":"Replace browser default range inputs with our custom version."},{"title":"Input group","description":"Attach labels and buttons to your inputs for increased semantic value."},{"title":"Floating labels","description":"Create beautifully simple form labels that float over your input fields."},{"title":"Layout","description":"Create inline, horizontal, or complex grid-based layouts with your forms."},{"title":"Validation","description":"Validate your forms with custom or native validation behaviors and styles."}],"skipSize":1131,"id":"overview.md","fullContent":"Overviewndbuikits form controls expand on our Rebooted form styles with classes Use these classes to opt into their customized displays for a more consistent rendering across browsers and devicesBe sure to use an appropriate  attribute on all inputs eg  for email address or  for numerical information to take advantage of newer input controls like email verification number selection and moreHeres a quick example to demonstrate ndbuikits form styles Keep reading for documentation on required classes form layout and more      Email address        Well never share your email with anyone else        Password                Check me out    SubmitForm textBlocklevel or inlinelevel form text can be created using  Associating form text with form controlsForm text should be explicitly associated with the form control it relates to using the  attribute This will ensure that assistive technologiessuch as screen readerswill announce this form text when the user focuses or enters the controlForm text below inputs can be styled with  If a blocklevel element will be used a top margin is added for easy spacing from the inputs abovePassword  Your password must be  characters long contain letters and numbers and must not contain spaces special characters or emojiInline text can use any typical inline HTML element be it a   or something else with nothing more than the  class      Password                      Must be  characters long      Disabled formsAdd the  boolean attribute on an input to prevent user interactions and make it appear lighterAdd the  attribute to a  to disable all the controls within Browsers treat all native form controls   and  elements inside a  as disabled preventing both keyboard and mouse interactions on themHowever if your form also includes custom buttonlike elements such as  these will only be given a style of  meaning they are still focusable and operable using the keyboard In this case you must manually modify these controls by adding  to prevent them from receiving focus and  to signal their state to assistive technologies      Disabled fieldset example          Disabled input                    Disabled select menu              Disabled select                                              Cant check this                      Submit  AccessibilityEnsure that all form controls have an appropriate accessible name so that their purpose can be conveyed to users of assistive technologies The simplest way to achieve this is to use a  element orin the case of buttonsto include sufficiently descriptive text as part of the  contentFor situations where its not possible to include a visible  or appropriate text content there are alternative ways of still providing an accessible name such as  elements hidden using the  class Pointing to an existing element that can act as a label using  Providing a  attribute Explicitly setting the accessible name on an element using If none of these are present assistive technologies may resort to using the  attribute as a fallback for the accessible name on  and  elements The examples in this section provide a few suggested casespecific approachesWhile using visually hidden content   and even  content which disappears once a form field has content will benefit assistive technology users a lack of visible label text may still be problematic for certain users Some form of visible label is generally the best approach both for accessibility and usabilitySassMany form variables are set at a general level to be reused and extended by individual form components Youll see these most often as  and  variablesVariables variables are shared global variables between our buttons and our form components Youll find these frequently reassigned as values to other componentspecific variables"},{"layout":"docs","title":"Range","description":"Use our custom range inputs for consistent cross-browser styling and built-in customization.","group":"forms","toc":true,"skipSize":163,"id":"range.md","fullContent":"OverviewCreate custom  controls with  The track the background and thumb the value are both styled to appear the same across browsers As only Firefox supports filling their track from the left or right of the thumb as a means to visually indicate progress we do not currently support itExample rangeDisabledAdd the  boolean attribute on an input to give it a grayed out appearance remove pointer events and prevent focusingDisabled rangeMin and maxRange inputs have implicit values for  and  and  respectively You may specify new values for those using the  and  attributesExample rangeStepsBy default range inputs snap to integer values To change this you can specify a  value In the example below we double the number of steps by using Example rangeSassVariables"},{"layout":"docs","title":"Select","description":"Customize the native `<select>`s with custom CSS that changes the element's initial appearance.","group":"forms","toc":true,"skipSize":167,"id":"select.md","fullContent":"DefaultCustom  menus need only a custom class  to trigger the custom styles Custom styles are limited to the s initial appearance and cannot modify the s due to browser limitations  Open this select menu  One  Two  ThreeSizingYou may also choose from small and large custom selects to match our similarly sized text inputs  Open this select menu  One  Two  Three  Open this select menu  One  Two  ThreeThe  attribute is also supported  Open this select menu  One  Two  ThreeAs is the  attribute  Open this select menu  One  Two  ThreeDisabledAdd the  boolean attribute on a select to give it a grayed out appearance and remove pointer events  Open this select menu  One  Two  ThreeSassVariables"},{"layout":"docs","title":"Validation","description":"Provide valuable, actionable feedback to your users with HTML5 form validation, via browser default behaviors or custom styles and JavaScript.","group":"forms","toc":true,"extra_js":[{"src":"/docs/1.0/assets/js/validate-forms.js","async":true}],"skipSize":293,"id":"validation.md","fullContent":"We are aware that currently the clientside custom validation styles and tooltips are not accessible since they are not exposed to assistive technologies While we work on a solution wed recommend either using the serverside option or the default browser validation methodHow it worksHeres how form validation works with ndbuikit HTML form validation is applied via CSSs two pseudoclasses  and  It applies to   and  elements ndbuikit scopes the  and  styles to parent  class usually applied to the  Otherwise any required field without a value shows up as invalid on page load This way you may choose when to activate them typically after form submission is attempted To reset the appearance of the form for instance in the case of dynamic form submissions using AJAX remove the  class from the  again after submission As a fallback  and  classes may be used instead of the pseudoclasses for serverside validationserverside They do not require a  parent class Due to constraints in how CSS works we cannot at present apply styles to a  that comes before a form control in the DOM without the help of custom JavaScript All modern browsers support the constraint validation APIhttpshtmlspecwhatwgorgmultipageformcontrolinfrastructurehtmltheconstraintvalidationapi a series of JavaScript methods for validating form controls Feedback messages may utilize the browser defaultsbrowserdefaults different for each browser and unstylable via CSS or our custom feedback styles with additional HTML and CSS You may provide custom validity messages with  in JavaScriptWith that in mind consider the following demos for our custom form validation styles optional serverside classes and browser defaultsCustom stylesFor custom ndbuikit form validation messages youll need to add the  boolean attribute to your  This disables the browser default feedback tooltips but still provides access to the form validation APIs in JavaScript Try to submit the form below our JavaScript will intercept the submit button and relay feedback to you When attempting to submit youll see the  and  styles applied to your form controlsCustom feedback styles apply custom colors borders focus styles and background icons to better communicate feedback Background icons for s are only available with  and not       First name              Looks good            Last name              Looks good            Username                              Please choose a username                  City              Please provide a valid city            State          Choose                    Please select a valid state            Zip              Please provide a valid zip                                Agree to terms and conditions                    You must agree before submitting                  Submit form  pathJoin sitestaticdocs SiteParamsdocsversion assetsjsvalidateformsjs Browser defaultsNot interested in custom validation feedback messages or writing JavaScript to change form behaviors All good you can use the browser defaults Try submitting the form below Depending on your browser and OS youll see a slightly different style of feedbackWhile these feedback styles cannot be styled with CSS you can still customize the feedback text through JavaScript      First name            Last name            Username                            City            State          Choose                  Zip                                Agree to terms and conditions                  Submit form  Server sideWe recommend using clientside validation but in case you require serverside validation you can indicate invalid and valid form fields with  and  Note that  is also supported with these classesFor invalid fields ensure that the invalid feedbackerror message is associated with the relevant form field using  noting that this attribute allows more than one  to be referenced in case the field already points to additional form textTo fix issues with border radiushttpstwbsndbuikitissues input groups require an additional  class      First name              Looks good            Last name              Looks good            Username                              Please choose a username                  City              Please provide a valid city            State          Choose                    Please select a valid state            Zip              Please provide a valid zip                                Agree to terms and conditions                    You must agree before submitting                  Submit form  Supported elementsValidation styles are available for the following form controls and components s and s with  including up to one  in input groups s with  s      Textarea              Please enter a message in the textarea                Check this checkbox    Example invalid feedback text            Toggle this radio            Or toggle this other radio    More example invalid feedback text              Open this select menu      One      Two      Three        Example invalid select feedback            Example invalid form file feedback        Submit form  TooltipsIf your form layout allows it you can swap the  classes for  classes to display validation feedback in a styled tooltip Be sure to have a parent with  on it for tooltip positioning In the example below our column classes have this already but your project may require an alternative setup      First name              Looks good            Last name              Looks good            Username                              Please choose a unique and valid username                  City              Please provide a valid city            State          Choose                    Please select a valid state            Zip              Please provide a valid zip            Submit form  SassVariablesMixinsTwo mixins are combined together through our looploop to generate our form validation feedback stylesMapThis is the validation Sass map from  Override or extend this to generate different or additional statesMaps of  can contain three optional parameters to override tooltips and focus stylesLoopUsed to iterate over  map values to generate our validation styles Any modifications to the above Sass map will be reflected in your compiled CSS via this loopCustomizingValidation states can be customized via Sass with the  map Located in our  file this Sass map is how we generate the default  validation states Included is a nested map for customizing each states color icon tooltip color and focus shadow While no other states are supported by browsers those using custom styles can easily add more complex form feedback"},{"layout":"docs","title":"Accessibility","description":"A brief overview of ndb-uikit's features and limitations for the creation of accessible content.","group":"getting-started","toc":true,"skipSize":185,"id":"accessibility.md","fullContent":"ndbuikit provides an easytouse framework of readymade styles layout tools and interactive components allowing developers to create websites and applications that are visually appealing functionally rich and accessible out of the boxOverview and limitationsThe overall accessibility of any project built with ndbuikit depends in large part on the authors markup additional styling and scripting theyve included However provided that these have been implemented correctly it should be perfectly possible to create websites and applications with ndbuikit that fulfill WCAG httpswwwworgTRWCAG AAAAAA Section httpswwwsectiongov and similar accessibility standards and requirementsStructural markupndbuikits styling and layout can be applied to a wide range of markup structures This documentation aims to provide developers with best practice examples to demonstrate the use of ndbuikit itself and illustrate appropriate semantic markup including ways in which potential accessibility concerns can be addressedInteractive componentsndbuikits interactive componentssuch as modal dialogs dropdown menus and custom tooltipsare designed to work for touch mouse and keyboard users Through the use of relevant WAIARIAhttpswwwworgWAIstandardsguidelinesaria roles and attributes these components should also be understandable and operable using assistive technologies such as screen readersBecause ndbuikits components are purposely designed to be fairly generic authors may need to include further ARIA roles and attributes as well as JavaScript behavior to more accurately convey the precise nature and functionality of their component This is usually noted in the documentationColor contrastSome combinations of colors that currently make up ndbuikits default paletteused throughout the framework for things such as button variations alert variations form validation indicatorsmay lead to insufficient color contrast below the recommended WCAG  text color contrast ratio of httpswwwworgTRWCAGcontrastminimum and the WCAG  nontext color contrast ratio of httpswwwworgTRWCAGnontextcontrast particularly when used against a light background Authors are encouraged to test their specific uses of color and where necessary manually modifyextend these default colors to ensure adequate color contrast ratiosVisually hidden contentContent which should be visually hidden but remain accessible to assistive technologies such as screen readers can be styled using the  class This can be useful in situations where additional visual information or cues such as meaning denoted through the use of color need to also be conveyed to nonvisual usersFor visually hidden interactive controls such as traditional skip links use the  class This will ensure that the control becomes visible once focused for sighted keyboard users Watch out compared to the equivalent  and  classes in past versions ndbuikit s  is a standalone class and must not be used in combination with the  classReduced motionndbuikit includes support for the  media featurehttpswwwworgTRmediaqueriesprefersreducedmotion In browsersenvironments that allow the user to specify their preference for reduced motion most CSS transition effects in ndbuikit for instance when a modal dialog is opened or closed or the sliding animation in carousels will be disabled and meaningful animations such as spinners will be slowed downOn browsers that support  and where the user has not explicitly signaled that theyd prefer reduced motion ie where  ndbuikit enables smooth scrolling using the  propertyAdditional resources Web Content Accessibility Guidelines WCAG httpswwwworgTRWCAG The AY Projecthttpswwwayprojectcom MDN accessibility documentationhttpsdevelopermozillaorgenUSdocsWebAccessibility Tenonio Accessibility Checkerhttpstenonio Color Contrast Analyser CCAhttpswwwtpgicomcolorcontrastchecker HTML Codesniffer bookmarklet for identifying accessibility issueshttpssquizlabsHTMLCodeSniffer Microsoft Accessibility Insightshttpsaccessibilityinsightsio Deque Axe testing toolshttpswwwdequecomaxe Introduction to Web AccessibilityhttpswwwworgWAIfundamentalsaccessibilityintro"},{"layout":"docs","title":"Best practices","description":"Learn about some of the best practices we've gathered from years of working on and using ndb-uikit.","group":"getting-started","skipSize":179,"id":"best-practices.md","fullContent":"Weve designed and developed ndbuikit to work in a number of environments Here are some of the best practices weve gathered from years of working on and using it ourselvesHeads up This copy is a work in progressGeneral outline Working with CSS Working with Sass files Building new CSS components Working with flexbox Ask in our GitHub Discussionshttpstwbsndbuikitdiscussions"},{"layout":"docs","title":"Browsers and devices","description":"Learn about the browsers and devices, from modern to old, that are supported by ndb-uikit, including known quirks and bugs for each.","group":"getting-started","toc":true,"skipSize":228,"id":"browsers-devices.md","fullContent":"Supported browsersndbuikit supports the latest stable releases of all major browsers and platformsAlternative browsers which use the latest version of WebKit Blink or Gecko whether directly or via the platforms web view API are not explicitly supported However ndbuikit should in most cases display and function correctly in these browsers as well More specific support information is provided belowYou can find our supported range of browsers and their versions in our blobvbrowserslistrcWe use Autoprefixerhttpspostcssautoprefixer to handle intended browser support via CSS prefixes which uses Browserslisthttpsbrowserslistbrowserslist to manage these browser versions Consult their documentation for how to integrate these tools into your projectsMobile devicesGenerally speaking ndbuikit supports the latest versions of each major platforms default browsers Note that proxy browsers such as Opera Mini Opera Mobiles Turbo mode UC Browser Mini Amazon Silk are not supported  Chrome  Firefox  Safari  Android Browser amp WebView            Android  Supported  Supported  mdash  v  Windows  Supported  Supported  Supported  mdash Desktop browsersSimilarly the latest versions of most desktop browsers are supported  Chrome  Firefox  Microsoft Edge  Opera  Safari              Mac  Supported  Supported  Supported  Supported  Supported  Windows  Supported  Supported  Supported  Supported  mdash For Firefox in addition to the latest normal stable release we also support the latest Extended Support Release ESRhttpswwwmozillaorgenUSfirefoxenterprise version of FirefoxUnofficially ndbuikit should look and behave well enough in Chromium and Chrome for Linux and Firefox for Linux though they are not officially supportedInternet ExplorerInternet Explorer is not supported If you require Internet Explorer support please use ndbuikit vModals and dropdowns on mobileOverflow and scrollingSupport for  on the  element is quite limited in iOS and Android To that end when you scroll past the top or bottom of a modal in either of those devices browsers the  content will begin to scroll See Chrome bug httpsbugschromiumorgpchromiumissuesdetailid fixed in Chrome v and WebKit bug httpsbugswebkitorgshowbugcgiidiOS text fields and scrollingAs of iOS  while a modal is open if the initial touch of a scroll gesture is within the boundary of a textual  or a  the  content underneath the modal will be scrolled instead of the modal itself See WebKit bug httpsbugswebkitorgshowbugcgiidNavbar DropdownsThe  element isnt used on iOS in the nav because of the complexity of zindexing Thus to close dropdowns in navbars you must directly click the dropdown element or any other element which will fire a click event in iOShttpsdevelopermozillaorgenUSdocsWebAPIElementclickeventSafariMobileBrowser zoomingPage zooming inevitably presents rendering artifacts in some components both in ndbuikit and the rest of the web Depending on the issue we may be able to fix it search first and then open an issue if need be However we tend to ignore these as they often have no direct solution other than hacky workaroundsValidatorsIn order to provide the best possible experience to old and buggy browsers ndbuikit uses CSS browser hackshttpbrowserhackscom in several places to target special CSS to certain browser versions in order to work around bugs in the browsers themselves These hacks understandably cause CSS validators to complain that they are invalid In a couple places we also use bleedingedge CSS features that arent yet fully standardized but these are used purely for progressive enhancementThese validation warnings dont matter in practice since the nonhacky portion of our CSS does fully validate and the hacky portions dont interfere with the proper functioning of the nonhacky portion hence why we deliberately ignore these particular warningsOur HTMLdocumentationlikewise have some trivial and inconsequential HTML validation warnings due to our inclusion of a workaround for a certain Firefox bughttpsbugzillamozillaorgshowbugcgiid"},{"layout":"docs","title":"Contents","description":"Discover what's included in ndb-uikit, including our precompiled and source code flavors.","group":"getting-started","toc":true,"skipSize":173,"id":"contents.md","fullContent":"Precompiled ndbuikitOnce downloaded unzip the compressed folder and youll see something like thisThis is the most basic form of ndbuikit precompiled files for quick dropin usage in nearly any web project We provide compiled CSS and JS  as well as compiled and minified CSS and JS  Source mapshttpsdevelopersgooglecomwebtoolschromedevtoolsjavascriptsourcemaps  are available for use with certain browsers developer tools Bundled JS files  and minified  include PopperhttpspopperjsorgCSS filesndbuikit includes a handful of options for including some or all of our compiled CSS CSS files  Layout  Content  Components  Utilities                 Included  Included  Included  Included       Only grid system      Only flex utilities             Included         Only Reboot     JS filesSimilarly we have options for including some or all of our compiled JavaScript JS Files  Popper         Included      ndbuikit source codeThe ndbuikit source code download includes the precompiled CSS and JavaScript assets along with source Sass JavaScript and documentation More specifically it includes the following and moreThe  and  are the source code for our CSS and JavaScript The  folder includes everything listed in the precompiled download section above The  folder includes the source code for our documentation and  of ndbuikit usage Beyond that any other included file provides support for packages license information and development"},{"layout":"docs","title":"Contribute","description":"Help develop ndb-uikit with our documentation build scripts and tests.","group":"getting-started","toc":true,"aliases":"/docs/1.0/getting-started/build-tools/","skipSize":206,"id":"contribute.md","fullContent":"Tooling setupndbuikit uses npm scriptshttpsdocsnpmjscommiscscripts to build the documentation and compile source files Our packagejsonblobvpackagejson houses these scripts for compiling code running tests and more These arent intended for use outside our repository and documentationTo use our build system and run our documentation locally youll need a copy of ndbuikits source files and Node Follow these steps and you should be ready to rock Download and install Nodejshttpsnodejsorgendownload which we use to manage our dependencies Either download ndbuikits sources or fork ndbuikits repository Navigate to the root  directory and run  to install our local dependencies listed in packagejsonblobvpackagejsonWhen completed youll be able to run the various commands provided from the command lineUsing npm scriptsOur packagejsonblobvpackagejson includes numerous tasks for developing the project Run  to see all the npm scripts in your terminal Primary tasks include Task  Description        Compiles CSS and JavaScript builds the documentation and starts a local server    Creates the  directory with compiled files Uses Sasshttpssasslangcom Autoprefixerhttpspostcssautoprefixer and terserhttpsterserterser    Runs tests locally after running     Builds and runs the documentation locally Sassndbuikit uses Dart Sasshttpssasslangcomdartsass for compiling our Sass source files into CSS files included in our build process and we recommend you do the same if youre compiling Sass using your own asset pipeline We previously used Node Sass for ndbuikit v but LibSass and packages built on top of it including Node Sass are now deprecatedhttpssasslangcombloglibsassisdeprecatedDart Sass uses a rounding precision of  and for efficiency reasons does not allow adjustment of this value We dont lower this precision during further processing of our generated CSS such as during minification but if you chose to do so we recommend maintaining a precision of at least  to prevent issues with browser roundingAutoprefixerndbuikit uses Autoprefixerhttpspostcssautoprefixer included in our build process to automatically add vendor prefixes to some CSS properties at build time Doing so saves us time and code by allowing us to write key parts of our CSS a single time while eliminating the need for vendor mixins like those found in vWe maintain the list of browsers supported through Autoprefixer in a separate file within our GitHub repository See browserslistrcblobvbrowserslistrc for detailsRTLCSSndbuikit uses RTLCSShttpsrtlcsscom to process compiled CSS and convert them to RTL  basically replacing horizontal direction aware properties eg  with their opposite It allows us only write our CSS a single time and make minor tweaks using RTLCSS controlhttpsrtlcsscomlearnusageguidecontroldirectives and valuehttpsrtlcsscomlearnusageguidevaluedirectives directivesLocal documentationRunning our documentation locally requires the use of Hugo which gets installed via the hugobinhttpswwwnpmjscompackagehugobin npm package Hugo is a blazingly fast and quite extensible static site generator that provides us basic includes Markdownbased files templates and more Heres how to get it started Run through the tooling setuptoolingsetup above to install all dependencies From the root  directory run  in the command line Open  in your browser and voilLearn more about using Hugo by reading its documentationhttpsgohugoiodocumentationTroubleshootingShould you encounter problems with installing dependencies uninstall all previous dependency versions global and local Then rerun"},{"layout":"docs","title":"Download","description":"Download ndb-uikit to get the compiled CSS and JavaScript, source code, or include it with your favorite package managers like npm, RubyGems, and more.","group":"getting-started","toc":true,"skipSize":235,"id":"download.md","fullContent":"Compiled CSS and JSDownload readytouse compiled code for ndbuikit v to easily drop into your project which includes Compiled and minified CSS bundles see CSS files comparison Compiled and minified JavaScript plugins see JS files comparisonThis doesnt include documentation source files or any optional JavaScript dependencies like Popper classbtn btnbdprimary onclickgasend event Getting started Download Download ndbuikitDownloadSource filesCompile ndbuikit with your own asset pipeline by downloading our source Sass JavaScript and documentation files This option requires some additional tooling Sass compiler for compiling Sass source files into CSS files Autoprefixerhttpspostcssautoprefixer for CSS vendor prefixingShould you require our full set of build tools they are included for developing ndbuikit and its docs but theyre likely unsuitable for your own purposes classbtn btnbdprimary onclickgasend event Getting started Download Download sourceDownload sourceExamplesIf you want to download and examine our examples you can grab the already built examples classbtn btnbdprimary onclickgasend event Getting started Download Download ExamplesDownload ExamplesCDN via jsDelivrSkip the download with jsDelivrhttpswwwjsdelivrcom to deliver cached version of ndbuikits compiled CSS and JS to your projectIf youre using our compiled JavaScript and prefer to include Popper separately add Popper before our JS via a CDN preferablyPackage managersPull in ndbuikits source files into nearly any project with some of the most popular package managers No matter the package manager ndbuikit will require a Sass compiler and Autoprefixerhttpspostcssautoprefixer for a setup that matches our official compiled versionsnpmInstall ndbuikit in your Nodejs powered apps with the npm packagehttpswwwnpmjscompackagendbuikit or  will load all of ndbuikits plugins onto a  objectThe  module itself exports all of our plugins You can manually load ndbuikits plugins individually by loading the  files under the packages toplevel directoryndbuikits  contains some additional metadata under the following keys   path to ndbuikits main Sasshttpssasslangcom source file   path to ndbuikits nonminified CSS thats been precompiled using the default settings no customizationyarnInstall ndbuikit in your Nodejs powered apps with the yarn packagehttpsyarnpkgcomenpackagendbuikitRubyGemsInstall ndbuikit in your Ruby apps using Bundlerhttpsbundlerio recommended and RubyGemshttpsrubygemsorg by adding the following line to your httpsbundleriogemfilehtmlAlternatively if youre not using Bundler you can install the gem by running this commandSee the gems READMEhttpstwbsndbuikitrubygemblobmasterREADMEmd for further detailsComposerYou can also install and manage ndbuikits Sass and JavaScript using ComposerhttpsgetcomposerorgNuGetIf you develop in NET Framework you can also install and manage ndbuikits CSShttpswwwnugetorgpackagesndbuikit or Sasshttpswwwnugetorgpackagesndbuikitsass and JavaScript using NuGethttpswwwnugetorg Newer projects should use libmanhttpsdocsmicrosoftcomenusaspnetcoreclientsidelibman or another method as NuGet is designed for compiled code not frontend assets"},{"layout":"docs","title":"Get started with ndb-uikit","description":"ndb-uikit is a powerful, feature-packed frontend toolkit. Build anything—from prototype to production—in minutes.","group":"getting-started","aliases":["/docs/1.0/getting-started/","/docs/getting-started/","/getting-started/"],"toc":true,"skipSize":310,"id":"introduction.md","fullContent":"Quick startGet started by including ndbuikits productionready CSS and JavaScript via CDN without the need for any build steps See it in practice with this ndbuikit CodePen demohttpscodepenioteamndbuikitpenqBamdLj Create a new  file in your project root Include the  tag as well for proper responsive behaviorhttpsdevelopermozillaorgenUSdocsWebHTMLViewportmetatag in mobile devices    Include ndbuikits CSS and JS Place the  tag in the  for our CSS and the  tag for our JavaScript bundle including Popper for positioning dropdowns poppers and tooltips before the closing  Learn more about our CDN linkscdnlinks      You can also include Popperhttpspopperjsorg and our JS separately If you dont plan to use dropdowns popovers or tooltips save some kilobytes by not including Popper Hello world Open the page in your browser of choice to see your ndbuikitped page Now you can start building with ndbuikit by creating your own layout adding dozens of components and utilizing our official examplesNext steps Read a bit more about some important global environment settingsimportantglobals that ndbuikit utilizes Read about whats included in ndbuikit in our contents section and the list of components that require JavaScriptjscomponents below Need a little more power Consider building with ndbuikit by including the source files via package manager Looking to use ndbuikit as a module with  Please refer to our using ndbuikit as a module sectionJS componentsCurious which components explicitly require our JavaScript and Popper Click the show components link below If youre at all unsure about the general page structure keep reading for an example page templateShow components requiring JavaScript Alerts for dismissing Buttons for toggling states and checkboxradio functionality Carousel for all slide behaviors controls and indicators Collapse for toggling visibility of content Dropdowns for displaying and positioning also requires Popperhttpspopperjsorg Modals for displaying positioning and scroll behavior Navbar for extending our Collapse and Offcanvas plugins to implement responsive behaviors Navs with the Tab plugin for toggling content panes Offcanvases for displaying positioning and scroll behavior Scrollspy for scroll behavior and navigation updates Toasts for displaying and dismissing Tooltips and popovers for displaying and positioning also requires PopperhttpspopperjsorgImportant globalsndbuikit employs a handful of important global styles and settings all of which are almost exclusively geared towards the normalization of cross browser styles Lets dive inHTML doctypendbuikit requires the use of the HTML doctype Without it youll see some funky and incomplete stylingResponsive meta tagndbuikit is developed mobile first a strategy in which we optimize code for mobile devices first and then scale up components as necessary using CSS media queries To ensure proper rendering and touch zooming for all devices add the responsive viewport meta tag to your You can see an example of this in action in the quick startquickstartBoxsizingFor more straightforward sizing in CSS we switch the global  value from  to  This ensures  does not affect the final computed width of an element but it can cause problems with some thirdparty software like Google Maps and Google Custom Search EngineOn the rare occasion you need to override it use something like the followingWith the above snippet nested elementsincluding generated content via  and will all inherit the specified  for that Learn more about box model and sizing at CSS TrickshttpscsstrickscomboxsizingRebootFor improved crossbrowser rendering we use Reboot to correct inconsistencies across browsers and devices while providing slightly more opinionated resets to common HTML elements"},{"layout":"docs","title":"JavaScript","description":"Bring ndb-uikit to life with our optional JavaScript plugins. Learn about each plugin, our data and programmatic API options, and more.","group":"getting-started","toc":true,"skipSize":221,"id":"javascript.md","fullContent":"Individual or compiledPlugins can be included individually using ndbuikits individual  or all at once using  or the minified  dont include bothIf you use a bundler Webpack Parcel Vite you can use  files which are UMD readyUsage with JavaScript frameworksWhile the ndbuikit CSS can be used with any framework the ndbuikit JavaScript is not fully compatible with JavaScript frameworks like React Vue and Angular which assume full knowledge of the DOM Both ndbuikit and the framework may attempt to mutate the same DOM element resulting in bugs like dropdowns that are stuck in the open positionA better alternative for those using this type of frameworks is to use a frameworkspecific package instead of the ndbuikit JavaScript Here are some of the most popular options React React ndbuikithttpsreactndbuikitgithubio Vue ndbuikitVuehttpsndbuikitvueorg currently only supports Vue  and ndbuikit  Angular ngndbuikithttpsngndbuikitgithubioUsing ndbuikit as a moduleTry it yourself Download the source code and working demo for using ndbuikit as an ES module from the twbsexamples repositoryhttpstwbsexamplestreemainsassjsesm You can also open the example in StackBlitzhttpsstackblitzcomgithubtwbsexamplestreemainsassjsesmfileindexhtmlWe provide a version of ndbuikit built as   and  which allows you to use ndbuikit as a module in the browser if your targeted browsers support ithttpscaniusecomesmoduleCompared to JS bundlers using ESM in the browser requires you to use the full path and filename instead of the module name Read more about JS modules in the browserhttpsvdevfeaturesmodulesspecifiers Thats why we use  instead of  above However this is further complicated by our Popper dependency which imports Popper into our JavaScript like soIf you try this asis youll see an error in the console like the followingTo fix this you can use an  to resolve the arbitrary module names to complete paths If your targeted browsershttpscaniusecomsearchimportmap do not support  youll need to use the esmoduleshimshttpsguybedfordesmoduleshims project Heres how it works for ndbuikit and PopperDependenciesSome plugins and CSS components depend on other plugins If you include plugins individually make sure to check for these dependencies in the docsOur dropdowns popovers and tooltips also depend on PopperhttpspopperjsorgData attributesNearly all ndbuikit plugins can be enabled and configured through HTML alone with data attributes our preferred way of using JavaScript functionality Be sure to only use one set of data attributes on a single element eg you cannot trigger a tooltip and modal from the same buttonSelectorsWe use the native  and  methods to query DOM elements for performance reasons so you must use valid selectorshttpswwwworgTRCSSsyndatahtmlvaluedefidentifier If you use special selectors like  be sure to escape themEventsndbuikit provides custom events for most plugins unique actions Generally these come in an infinitive and past participle form  where the infinitive ex  is triggered at the start of an event and its past participle form ex  is triggered on the completion of an actionAll infinitive events provide httpsdevelopermozillaorgenUSdocsWebAPIEventpreventDefault functionality This provides the ability to stop the execution of an action before it starts Returning false from an event handler will also automatically call Programmatic APIAll constructors accept an optional options object or nothing which initiates a plugin with its default behaviorIf youd like to get a particular plugin instance each plugin exposes a  method For example to retrieve an instance directly from an elementThis method will return  if an instance is not initiated over the requested elementAlternatively  can be used to get the instance associated with a DOM element or create a new one in case it wasnt initializedIn case an instance wasnt initialized it may accept and use an optional configuration object as second argumentCSS selectors in constructorsIn addition to the  and  methods all plugin constructors can accept a DOM element or a valid CSS selectorselectors as the first argument Plugin elements are found with the  method since our plugins only support a single elementAsynchronous functions and transitionsAll programmatic API methods are asynchronous and return to the caller once the transition is started but before it ends In order to execute an action once the transition is complete you can listen to the corresponding eventIn addition a method call on a transitioning component will be ignored  methodWhile it may seem correct to use the  method immediately after  it will lead to incorrect results Heres an example of the problem useDefault settingsYou can change the default settings for a plugin by modifying the plugins  objectkeyboardMethods and propertiesEvery ndbuikit plugin exposes the following methods and static properties Method  Description        Destroys an elements modal Removes stored data on the DOM element    Static method which allows you to get the modal instance associated with a DOM element    Static method which allows you to get the modal instance associated with a DOM element or create a new one in case it wasnt initialized  Static property  Description         Returns the plugin name Example      The version of each of ndbuikits plugins can be accessed via the  property of the plugins constructor Example  SanitizerTooltips and Popovers use our builtin sanitizer to sanitize options which accept HTMLThe default  value is the followingIf you want to add new values to this default  you can do the followingIf you want to bypass our sanitizer because you prefer to use a dedicated library for example DOMPurifyhttpswwwnpmjscompackagedompurify you should do the followingOptionally using jQueryYou dont need jQuery in ndbuikit  but its still possible to use our components with jQuery If ndbuikit detects  in the  object itll add all of our components in jQuerys plugin system This allows you to do the followingshowThe same goes for our other componentsNo conflictSometimes it is necessary to use ndbuikit plugins with other UI frameworks In these circumstances namespace collisions can occasionally occur If this happens you may call  on the plugin you wish to revert the value ofndbuikit does not officially support thirdparty JavaScript libraries like Prototype or jQuery UI Despite  and namespaced events there may be compatibility problems that you need to fix on your ownjQuery eventsndbuikit will detect jQuery if  is present in the  object and there is no  attribute set on  If jQuery is found ndbuikit will emit events thanks to jQuerys event system So if you want to listen to ndbuikits events youll have to use the jQuery methods   instead of Disabled JavaScriptndbuikits plugins have no special fallback when JavaScript is disabled If you care about the user experience in this case use httpsdevelopermozillaorgenUSdocsWebHTMLElementnoscript to explain the situation and how to reenable JavaScript to your users andor add your own custom fallbacks"},{"layout":"docs","title":"ndb-uikit & Parcel","description":"The official guide for how to include and bundle ndb-uikit's CSS and JavaScript in your project using Parcel.","group":"getting-started","toc":true,"thumbnail":"guides/ndb-uikit-parcel@2x.png","skipSize":247,"id":"parcel.md","fullContent":"assetsimgguidesndbuikitparcelpng docsassetsimgguidesndbuikitparcelxpng x srcdocsassetsimgguidesndbuikitparcelpng width height altndbuikitWant to skip to the end Download the source code and working demo for this guide from the twbsexamples repositoryhttpstwbsexamplestreemainparcel You can also open the example in StackBlitzhttpsstackblitzcomgithubtwbsexamplestreemainparcelfileindexhtml but not run it because Parcel isnt currently supported thereSetupWere building a Parcel project with ndbuikit from scratch so there are some prerequisites and up front steps before we can really get started This guide requires you to have Nodejs installed and some familiarity with the terminal Create a project folder and setup npm Well create the  folder and initialize npm with the  argument to avoid it asking us all the interactive questions    Install Parcel Unlike our Webpack guide theres only a single build tool dependency here Parcel will automatically install language transformers like Sass as it detects them We use  to signal that this dependency is only for development use and not for production    Install ndbuikit Now we can install ndbuikit Well also install Popper since our dropdowns popovers and tooltips depend on it for their positioning If you dont plan on using those components you can omit Popper here   Now that we have all the necessary dependencies installed we can get to work creating the project files and importing ndbuikitProject structureWeve already created the  folder and initialized npm Now well also create our  folder stylesheet and JavaScript file to round out the project structure Run the following from  or manually create the folder and file structure shown belowWhen youre done your complete project should look like thisAt this point everything is in the right place but Parcel needs an HTML page and npm script to start our serverConfigure ParcelWith dependencies installed and our project folder ready for us to start coding we can now configure Parcel and run our project locally Parcel itself requires no configuration file by design but we do need an npm script and an HTML file to start our server Fill in the  file Parcel needs a page to render so we use our  page to set up some basic HTML including our CSS and JavaScript files      Were including a little bit of ndbuikit styling here with the  and  so that we see when ndbuikits CSS is loaded by Webpack   Parcel will automatically detect were using Sass and install the Sass Parcel pluginhttpsparceljsorglanguagessass to support it However if you wish you can also manually run  Add the Parcel npm scripts Open the  and add the following  script to the  object Well use this script to start our Parcel development server and render the HTML file we created after its compiled into the  directory    And finally we can start Parcel From the  folder in your terminal run that newly added npm script      assetsimgguidesparceldevserverpng altParcel dev server runningIn the next and final section to this guide well import all of ndbuikits CSS and JavaScriptImport ndbuikitImporting ndbuikit into Parcel requires two imports one into our  and one into our  Import ndbuikits CSS Add the following to  to import all of ndbuikits source Sass      You can also import our stylesheets individually if you want Read our Sass import docs for details Import ndbuikits JS Add the following to  to import all of ndbuikits JS Popper will be imported automatically through ndbuikit         You can also import JavaScript plugins individually as needed to keep bundle sizes down         Read our JavaScript docs for more information on how to use ndbuikits plugins And youre done  With ndbuikits source Sass and JS fully loaded your local development server should now look like this   assetsimgguidesparceldevserverndbuikitpng altParcel dev server running with ndbuikit   Now you can start adding any ndbuikit components you want to use Be sure to check out the complete Parcel example projecthttpstwbsexamplestreemainparcel for how to include additional custom Sass and optimize your build by importing only the parts of ndbuikits CSS and JS that you need"},{"layout":"docs","title":"RFS","description":"Bootstrap's resizing engine responsively scales common CSS properties to better utilize available space across viewports and devices.","group":"getting-started","toc":true,"skipSize":212,"id":"rfs.md","fullContent":"What is RFSRFS its a Bootstrap project RFShttpstwbsrfstree unit resizing engine which was initially developed to resize font sizes hence its abbreviation for Responsive Font Sizes Nowadays RFS is capable of rescaling most CSS properties with unit values like    or even The mechanism automatically calculates the appropriate values based on the dimensions of the browser viewport It will be compiled into  functions with a mix of  and viewport units to enable the responsive scaling behaviorUsing RFSThe mixins are included in ndbuikit and are available once you include ndbuikits  RFS can also be installed standalonehttpstwbsrfstreeinstallation if neededUsing the mixinsThe  mixin has shorthands for           and  See the example below for source Sass and compiled CSSAny other property can be passed to the  mixin like this can also just be added to whatever value you wantUsing the functionsWhen you dont want to use the includes there are also two functions  converts a value into a  value if a  value is passed in other cases it returns the same result  returns the fluid version of a value if the property needs rescalingIn this example we use one of ndbuikits builtin responsive breakpoint mixins to only apply styling below the  breakpointExtended documentationRFS is a separate project under the ndbuikit organization More about RFS and its configuration can be found on its GitHub repositoryhttpstwbsrfstree"},{"layout":"docs","title":"RTL","description":"Learn how to enable support for right-to-left text in ndb-uikit across our layout, components, and utilities.","group":"getting-started","toc":true,"skipSize":188,"id":"rtl.md","fullContent":"Get familiarWe recommend getting familiar with ndbuikit first by reading through our Getting Started Introduction page Once youve run through it continue reading here for how to enable RTLYou may also want to read up on the RTLCSS projecthttpsrtlcsscom as it powers our approach to RTLExperimental featureThe RTL feature is still experimental and will probably evolve according to user feedback Spotted something or have an improvement to suggest Open an issueissuesnewchoose wed love to get your insightsRequired HTMLThere are two strict requirements for enabling RTL in ndbuikitpowered pages Set  on the  element Add an appropriate  attribute like  on the  elementFrom there youll need to include an RTL version of our CSS For example heres the stylesheet for our compiled and minified CSS with RTL enabledStarter templateYou can see the above requirements reflected in this modified RTL starter templateRTL examplesGet started with one of our several RTL examplesApproachOur approach to building RTL support into ndbuikit comes with two important decisions that impact how we write and use our CSS First we decided to build it with the RTLCSShttpsrtlcsscom project This gives us some powerful features for managing changes and overrides when moving from LTR to RTL It also allows us to build two versions of ndbuikit from one codebase Second weve renamed a handful of directional classes to adopt a logical properties approach Most of you have already interacted with logical properties thanks to our flex utilitiesthey replace direction properties like  and  in favor  and  That makes the class names and values appropriate for LTR and RTL without any overhead  For example instead of  for  use Working with RTL through our source Sass or compiled CSS shouldnt be much different from our default LTR thoughCustomize from sourceWhen it comes to customization the preferred way is to take advantage of variables maps and mixins This approach works the same for RTL even if its postprocessed from the compiled files thanks to how RTLCSS workshttpsrtlcsscomlearngettingstartedwhyrtlcssCustom RTL valuesUsing RTLCSS value directiveshttpsrtlcsscomlearnusageguidevaluedirectives you can make a variable output a different value for RTL For example to decrease the weight for  throughout the codebase you may use the  syntaxWhich would output to the following for our default CSS and RTL CSSAlternative font stackIn the case youre using a custom font be aware that not all fonts support the nonLatin alphabet To switch from PanEuropean to Arabic family you may need to use  in your font stack to modify the names of font familiesFor example to switch from  font for LTR to  for RTL your Sass code could look like thisimportscss rtlbeginoptions     ltr rtlendoptionsltrrtlltrrtlltrrtldirlangformvalidationstatebreadcrumbdividerflippedbreadcrumbdivider"},{"layout":"docs","title":"ndb-uikit & Vite","description":"The official guide for how to include and bundle ndb-uikit's CSS and JavaScript in your project using Vite.","group":"getting-started","toc":true,"thumbnail":"guides/ndb-uikit-vite@2x.png","skipSize":241,"id":"vite.md","fullContent":"assetsimgguidesndbuikitvitepng docsassetsimgguidesndbuikitvitexpng x srcdocsassetsimgguidesndbuikitvitepng width height altndbuikitWant to skip to the end Download the source code and working demo for this guide from the twbsexamples repositoryhttpstwbsexamplestreemainvite You can also open the example in StackBlitzhttpsstackblitzcomgithubtwbsexamplestreemainvitefileindexhtml for live editingSetupWere building a Vite project with ndbuikit from scratch so there are some prerequisites and up front steps before we can really get started This guide requires you to have Nodejs installed and some familiarity with the terminal Create a project folder and setup npm Well create the  folder and initialize npm with the  argument to avoid it asking us all the interactive questions    Install Vite Unlike our Webpack guide theres only a single build tool dependency here We use  to signal that this dependency is only for development use and not for production    Install ndbuikit Now we can install ndbuikit Well also install Popper since our dropdowns popovers and tooltips depend on it for their positioning If you dont plan on using those components you can omit Popper here    Install additional dependency In addition to Vite and ndbuikit we need another dependency Sass to properly import and bundle ndbuikits CSS   Now that we have all the necessary dependencies installed and setup we can get to work creating the project files and importing ndbuikitProject structureWeve already created the  folder and initialized npm Now well also create our  folder stylesheet and JavaScript file to round out the project structure Run the following from  or manually create the folder and file structure shown belowWhen youre done your complete project should look like thisAt this point everything is in the right place but Vite wont work because we havent filled in our  yetConfigure ViteWith dependencies installed and our project folder ready for us to start coding we can now configure Vite and run our project locally Open  in your editor Since its blank well need to add some boilerplate config to it so we can start our server This part of the config tells Vite were to look for our projects JavaScript and how the development server should behave pulling from the  folder with hot reload       Next we fill in  This is the HTML page Vite will load in the browser to utilize the bundled CSS and JS well add to it in later steps      Were including a little bit of ndbuikit styling here with the  and  so that we see when ndbuikits CSS is loaded by Vite Now we need an npm script to run Vite Open  and add the  script shown below you should already have the test script Well use this script to start our local Vite dev server    And finally we can start Vite From the  folder in your terminal run that newly added npm script      assetsimgguidesvitedevserverpng altVite dev server runningIn the next and final section to this guide well import all of ndbuikits CSS and JavaScriptImport ndbuikit Set up ndbuikits Sass import in  Your configuration file is now complete and should match the snippet below The only new part here is the  sectionwe use this to add an alias to our source files inside  to keep imports as simple as possible       Now lets import ndbuikits CSS Add the following to  to import all of ndbuikits source Sass      You can also import our stylesheets individually if you want Read our Sass import docs for details Next we load the CSS and import ndbuikits JavaScript Add the following to  to load the CSS and import all of ndbuikits JS Popper will be imported automatically through ndbuikit         You can also import JavaScript plugins individually as needed to keep bundle sizes down         Read our JavaScript docs for more information on how to use ndbuikits plugins And youre done  With ndbuikits source Sass and JS fully loaded your local development server should now look like this   assetsimgguidesvitedevserverndbuikitpng altVite dev server running with ndbuikit   Now you can start adding any ndbuikit components you want to use Be sure to check out the complete Vite example projecthttpstwbsexamplestreemainvite for how to include additional custom Sass and optimize your build by importing only the parts of ndbuikits CSS and JS that you need"},{"layout":"docs","title":"ndb-uikit & Webpack","description":"The official guide for how to include and bundle ndb-uikit's CSS and JavaScript in your project using Webpack.","group":"getting-started","toc":true,"thumbnail":"guides/ndb-uikit-webpack@2x.png","skipSize":250,"id":"webpack.md","fullContent":"assetsimgguidesndbuikitwebpackpng docsassetsimgguidesndbuikitwebpackxpng x srcdocsassetsimgguidesndbuikitwebpackpng width height altndbuikitWant to skip to the end Download the source code and working demo for this guide from the twbsexamples repositoryhttpstwbsexamplestreemainwebpack You can also open the example in StackBlitzhttpsstackblitzcomgithubtwbsexamplestreemainwebpackfileindexhtml for live editingSetupWere building a Webpack project with ndbuikit from scratch so there are some prerequisites and up front steps before we can really get started This guide requires you to have Nodejs installed and some familiarity with the terminal Create a project folder and setup npm Well create the  folder and initialize npm with the  argument to avoid it asking us all the interactive questions    Install Webpack Next we need to install our Webpack development dependencies  for the core of Webpack  so we can run Webpack commands from the terminal and  so we can run a local development server We use  to signal that these dependencies are only for development use and not for production    Install ndbuikit Now we can install ndbuikit Well also install Popper since our dropdowns popovers and tooltips depend on it for their positioning If you dont plan on using those components you can omit Popper here    Install additional dependencies In addition to Webpack and ndbuikit we need a few more dependencies to properly import and bundle ndbuikits CSS and JS with Webpack These include Sass some loaders and Autoprefixer   Now that we have all the necessary dependencies installed we can get to work creating the project files and importing ndbuikitProject structureWeve already created the  folder and initialized npm Now well also create our  and  folders to round out the project structure Run the following from  or manually create the folder and file structure shown belowWhen youre done your complete project should look like thisAt this point everything is in the right place but Webpack wont work because we havent filled in our  yetConfigure WebpackWith dependencies installed and our project folder ready for us to start coding we can now configure Webpack and run our project locally Open  in your editor Since its blank well need to add some boilerplate config to it so we can start our server This part of the config tells Webpack were to look for our projects JavaScript where to output the compiled code to  and how the development server should behave pulling from the  folder with hot reload    Next we fill in our  This is the HTML page Webpack will load in the browser to utilize the bundled CSS and JS well add to it in later steps Before we can do that we have to give it something to render and include the  JS from the previous step      Were including a little bit of ndbuikit styling here with the  and  so that we see when ndbuikits CSS is loaded by Webpack Now we need an npm script to run Webpack Open  and add the  script shown below you should already have the test script Well use this script to start our local Webpack dev server    And finally we can start Webpack From the  folder in your terminal run that newly added npm script      assetsimgguideswebpackdevserverpng altWebpack dev server runningIn the next and final section to this guide well set up the Webpack loaders and import all of ndbuikits CSS and JavaScriptImport ndbuikitImporting ndbuikit into Webpack requires the loaders we installed in the first section Weve installed them with npm but now Webpack needs to be configured to use them Set up the loaders in  Your configuration file is now complete and should match the snippet below The only new part here is the  section      Heres a recap of why we need all these loaders  injects the CSS into a  element in the  of the HTML page  helps with using  and   is required for Autoprefixer and  allows us to use Sass Now lets import ndbuikits CSS Add the following to  to import all of ndbuikits source Sass      You can also import our stylesheets individually if you want Read our Sass import docs for details Next we load the CSS and import ndbuikits JavaScript Add the following to  to load the CSS and import all of ndbuikits JS Popper will be imported automatically through ndbuikit         You can also import JavaScript plugins individually as needed to keep bundle sizes down         Read our JavaScript docs for more information on how to use ndbuikits plugins And youre done  With ndbuikits source Sass and JS fully loaded your local development server should now look like this   assetsimgguideswebpackdevserverndbuikitpng altWebpack dev server running with ndbuikit   Now you can start adding any ndbuikit components you want to use Be sure to check out the complete Webpack example projecthttpstwbsexamplestreemainwebpack for how to include additional custom Sass and optimize your build by importing only the parts of ndbuikits CSS and JS that you need"},{"layout":"docs","title":"Clearfix","description":"Quickly and easily clear floated content within a container by adding a clearfix utility.","group":"helpers","aliases":"/docs/1.0/helpers/","skipSize":185,"id":"clearfix.md","fullContent":"Easily clear s by adding  to the parent element Can also be used as a mixinUse in HTMLThe mixin source codeUse the mixin in SCSSThe following example shows how the clearfix can be used Without the clearfix the wrapping div would not span around the buttons which would cause a broken layout  Example Button floated left  Example Button floated right"},{"layout":"docs","title":"Color & background","description":"Set a background color with contrasting foreground color.","group":"helpers","toc":true,"added":"5.2","skipSize":156,"id":"color-background.md","fullContent":"OverviewColor and background helpers combine the power of our  utilities and  utilities in one class Using our Sass  function we automatically determine a contrasting  for a particular Heads up Theres currently no support for a CSSnative  function so we use our own via Sass This means that customizing our theme colors via CSS variables may cause color contrast issues with these utilitiesindex SiteData themecolors  with contrasting colorWith componentsUse them in place of combined  and  classes like on badgesPrimaryInfoOr on cards  Header      Some quick example text to build on the card title and make up the bulk of the cards content    Header      Some quick example text to build on the card title and make up the bulk of the cards content"},{"layout":"docs","title":"Colored links","description":"Colored links with hover states","group":"helpers","toc":false,"skipSize":113,"id":"colored-links.md","fullContent":"You can use the  classes to colorize links Unlike the  classes these classes have a  and  stateindex SiteData themecolors  linkSome of the link styles use a relatively light foreground color and should only be used on a dark background in order to have sufficient contrast"},{"layout":"docs","title":"Position","description":"Use these helpers for quickly configuring the position of an element.","group":"helpers","toc":true,"skipSize":145,"id":"position.md","fullContent":"Fixed topPosition an element at the top of the viewport from edge to edge Be sure you understand the ramifications of fixed position in your project you may need to add additional CSSFixed bottomPosition an element at the bottom of the viewport from edge to edge Be sure you understand the ramifications of fixed position in your project you may need to add additional CSSSticky topPosition an element at the top of the viewport from edge to edge but only after you scroll past itResponsive sticky topResponsive variations also exist for  utilitySticky bottomPosition an element at the bottom of the viewport from edge to edge but only after you scroll past itResponsive sticky bottomResponsive variations also exist for  utility"},{"layout":"docs","title":"Ratios","description":"Use generated pseudo elements to make an element maintain the aspect ratio of your choosing. Perfect for responsively handling video or slideshow embeds based on the width of the parent.","group":"helpers","toc":true,"skipSize":260,"id":"ratio.md","fullContent":"AboutUse the ratio helper to manage the aspect ratios of external content like s s s and s These helpers also can be used on any standard HTML child element eg a  or  Styles are applied from the parent  class directly to the childAspect ratios are declared in a Sass map and included in each class via CSS variable which also allows custom aspect ratioscustomratiosProTip You dont need  on your s as we override that for you in RebootExampleWrap any embed like an  in a parent element with  and an aspect ratio class The immediate child element is automatically sized thanks to our universal selector   Aspect ratiosAspect ratios can be customized with modifier classes By default the following ratio classes are provided  x  x  x  xCustom ratiosEach  class includes a CSS custom property or CSS variable in the selector You can override this CSS variable to create custom aspect ratios on the fly with some quick math on your partFor example to create a x aspect ratio set  on the   xThis CSS variable makes it easy to modify the aspect ratio across breakpoints The following is x to start but changes to a custom x at the medium breakpoint  x then xSass mapWithin  you can change the aspect ratios you want to use Heres our default  map Modify the map as you like and recompile your Sass to put them to use"},{"layout":"docs","title":"Stacks","description":"Shorthand helpers that build on top of our flexbox utilities to make component layout faster and easier than ever.","group":"helpers","toc":true,"added":"5.1","skipSize":201,"id":"stacks.md","fullContent":"Stacks offer a shortcut for applying a number of flexbox properties to quickly and easily create layouts in ndbuikit All credit for the concept and implementation goes to the open source Pylon projecthttpsalmonkgithubiopylonHeads up Support for gap utilities with flexbox was recently added to Safari so consider verifying your intended browser support Grid layout should have no issues Read morehttpscaniusecomflexboxgapVerticalUse  to create vertical layouts Stacked items are fullwidth by default Use  utilities to add space between items  First item  Second item  Third itemHorizontalUse  for horizontal layouts Stacked items are vertically centered by default and only take up their necessary width Use  utilities to add space between items  First item  Second item  Third itemUsing horizontal margin utilities like  as spacers  First item  Second item  Third itemAnd with vertical rules  First item  Second item    Third itemExamplesUse  to stack buttons and other elements  Save changes  CancelCreate an inline form with     Submit    ResetSass"},{"layout":"docs","title":"Stretched link","description":"Make any HTML element or ndb-uikit component clickable by \"stretching\" a nested link via CSS.","group":"helpers","skipSize":165,"id":"stretched-link.md","fullContent":"Add  to a link to make its containing blockhttpsdevelopermozillaorgenUSdocsWebCSSContainingblock clickable via a  pseudo element In most cases this means that an element with  that contains a link with the  class is clickable Please note given how CSS  workshttpswwwworgTRCSSvisurenhtmlpropdefposition  cannot be mixed with most table elementsCards have  by default in ndbuikit so in this case you can safely add the  class to a link in the card without any other HTML changesMultiple links and tap targets are not recommended with stretched links However some  and  styles can help should this be required        Card with stretched link    Some quick example text to build on the card title and make up the bulk of the cards content    Go somewhere  Most custom components do not have  by default so we need to add the  here to prevent the link from stretching outside the parent element        Custom component with stretched link    This is some placeholder content for the custom component It is intended to mimic what some realworld content would look like and were using it here to give the component a bit of body and size    Go somewhere                Columns with stretched link    Another instance of placeholder content for this other custom component It is intended to mimic what some realworld content would look like and were using it here to give the component a bit of body and size    Go somewhere  Identifying the containing blockIf the stretched link doesnt seem to work the containing blockhttpsdevelopermozillaorgenUSdocsWebCSSContainingblockIdentifyingthecontainingblock will probably be the cause The following CSS properties will make an element the containing block A  value other than  A  or  value other than  A  value of  or  A  value other than  or a  value of  only works on Firefox        Card with stretched links    Some quick example text to build on the card title and make up the bulk of the cards content          Stretched link will not work here because position relative is added to the link              This stretched link will only be spread over the ptag because a transform is applied to it"},{"layout":"docs","title":"Text truncation","description":"Truncate long strings of text with an ellipsis.","group":"helpers","toc":false,"skipSize":131,"id":"text-truncation.md","fullContent":"For longer content you can add a  class to truncate the text with an ellipsis Requires  or       This text is quite long and will be truncated once displayed    This text is quite long and will be truncated once displayed"},{"layout":"docs","title":"Vertical rule","description":"Use the custom vertical rule helper to create vertical dividers like the `<hr>` element.","group":"helpers","toc":true,"added":"5.1","skipSize":182,"id":"vertical-rule.md","fullContent":"How it worksVertical rules are inspired by the  element allowing you to create vertical dividers in common layouts Theyre styled just like  elements Theyre  wide They have  of  Their color is set via  and Customize them with additional styles as neededExampleVertical rules scale their height in flex layouts  With stacksThey can also be used in stacks  First item  Second item    Third item"},{"layout":"docs","title":"Visually hidden","description":"Use these helpers to visually hide elements but keep them accessible to assistive technologies.","group":"helpers","aliases":"/docs/1.0/helpers/screen-readers/","skipSize":213,"id":"visually-hidden.md","fullContent":"Visually hide an element while still allowing it to be exposed to assistive technologies such as screen readers with  Use  to visually hide an element by default but to display it when its focused eg by a keyboardonly user  can also be applied to a containerthanks to  the container will be displayed when any child element of the container receives focusTitle for screen readersSkip to main contentA container with a focusable elementBoth  and  can also be used as mixins"},{"layout":"docs","title":"Breakpoints","description":"Breakpoints are customizable widths that determine how your responsive layout behaves across device or viewport sizes in ndb-uikit.","group":"layout","aliases":"/docs/1.0/layout/","toc":true,"skipSize":238,"id":"breakpoints.md","fullContent":"Core concepts Breakpoints are the building blocks of responsive design Use them to control when your layout can be adapted at a particular viewport or device size Use media queries to architect your CSS by breakpoint Media queries are a feature of CSS that allow you to conditionally apply styles based on a set of browser and operating system parameters We most commonly use  in our media queries Mobile first responsive design is the goal ndbuikits CSS aims to apply the bare minimum of styles to make a layout work at the smallest breakpoint and then layers on styles to adjust that design for larger devices This optimizes your CSS improves rendering time and provides a great experience for your visitorsAvailable breakpointsndbuikit includes six default breakpoints sometimes referred to as grid tiers for building responsively These breakpoints can be customized if youre using our source Sass files Breakpoint  Class infix  Dimensions        Extra small  None  ltpx  Small    gepx  Medium    gepx  Large    gepx  Extra large    gepx  Extra extra large    gepx Each breakpoint was chosen to comfortably hold containers whose widths are multiples of  Breakpoints are also representative of a subset of common device sizes and viewport dimensionsthey dont specifically target every use case or device Instead the ranges provide a strong and consistent foundation to build on for nearly any deviceThese breakpoints are customizable via Sassyoull find them in a Sass map in our  stylesheetFor more information and examples on how to modify our Sass maps and variables please refer to the Sass section of the Grid documentationMedia queriesSince ndbuikit is developed to be mobile first we use a handful of media querieshttpsdevelopermozillaorgenUSdocsWebCSSMediaQueriesUsingmediaqueries to create sensible breakpoints for our layouts and interfaces These breakpoints are mostly based on minimum viewport widths and allow us to scale up elements as the viewport changesMinwidthndbuikit primarily uses the following media query rangesor breakpointsin our source Sass files for our layout grid system and componentsmedia minwidth  minwidth smThese Sass mixins translate in our compiled CSS using the values declared in our Sass variables For examplexsMaxwidthWe occasionally use media queries that go in the other direction the given screen size or smallermedia maxwidth  These mixins take those declared breakpoints subtract  from them and use them as our  values For examplexssmmdlgxlxxlSingle breakpointThere are also media queries and mixins for targeting a single segment of screen sizes using the minimum and maximum breakpoint widthsFor example the  will result in Between breakpointsSimilarly media queries may span multiple breakpoint widthsWhich results in"},{"layout":"docs","title":"Columns","description":"Learn how to modify columns with a handful of options for alignment, ordering, and offsetting thanks to our flexbox grid system. Plus, see how to use column classes to manage widths of non-grid elements.","group":"layout","toc":true,"skipSize":277,"id":"columns.md","fullContent":"Heads up Be sure to read the Grid page first before diving into how to modify and customize your grid columnsHow they work Columns build on the grids flexbox architecture Flexbox means we have options for changing individual columns and modifying groups of columns at the row level You choose how columns grow shrink or otherwise change When building grid layouts all content goes in columns The hierarchy of ndbuikits grid goes from container to row to column to your content On rare occasions you may combine content and column but be aware there can be unintended consequences ndbuikit includes predefined classes for creating fast responsive layouts With six breakpoints and a dozen columns at each grid tier we have dozens of classes already built for you to create your desired layouts This can be disabled via Sass if you wishAlignmentUse flexbox alignment utilities to vertically and horizontally align columnsVertical alignment            One of three columns              One of three columns              One of three columns                  One of three columns              One of three columns              One of three columns                  One of three columns              One of three columns              One of three columns                  One of three columns              One of three columns              One of three columns      Horizontal alignment            One of two columns              One of two columns                  One of two columns              One of two columns                  One of two columns              One of two columns                  One of two columns              One of two columns                  One of two columns              One of two columns                  One of two columns              One of two columns      Column wrappingIf more than  columns are placed within a single row each group of extra columns will as one unit wrap onto a new line      col    colSince      gt  this columnwide div gets wrapped onto a new line as one contiguous unit    colSubsequent columns continue along the new line  Column breaksBreaking columns to a new line in flexbox requires a small hack add an element with  wherever you want to wrap your columns to a new line Normally this is accomplished with multiple s but not every implementation method can account for this      col colsm    col colsm            col colsm    col colsm  You may also apply this break at specific breakpoints with our responsive display utilities      col colsm    col colsm            col colsm    col colsm  ReorderingOrder classesUse  classes for controlling the visual order of your content These classes are responsive so you can set the  by breakpoint eg  Includes support for  through  across all six grid tiers            First in DOM no order applied              Second in DOM with a larger order              Third in DOM with an order of       There are also responsive  and  classes that change the  of an element by applying  and  respectively These classes can also be intermixed with the numbered  classes as needed            First in DOM ordered last              Second in DOM unordered              Third in DOM ordered first      Offsetting columnsYou can offset grid columns in two ways our responsive  grid classes and our margin utilities Grid classes are sized to match columns while margins are more useful for quick layouts where the width of the offset is variable Offset classesMove columns to the right using  classes These classes increase the left margin of a column by  columns For example  moves  over four columns      colmd    colmd offsetmd        colmd offsetmd    colmd offsetmd        colmd offsetmd  In addition to column clearing at responsive breakpoints you may need to reset offsets See this in action in the grid example      colsm colmd    colsm offsetsm colmd offsetmd        colsm colmd collg    colsm colmd offsetmd collg offsetlg   Margin utilitiesWith the move to flexbox in v you can use margin utilities like  to force sibling columns away from one another      colmd    colmd msauto        colmd msmdauto    colmd msmdauto        colauto meauto    colauto  Standalone column classesThe  classes can also be used outside a  to give an element a specific width Whenever column classes are used as nondirect children of a row the paddings are omitted  col width of   colsm width of  above sm breakpointThe classes can be used together with utilities to create responsive floated images Make sure to wrap the content in a  wrapper to clear the float if the text is shorter        A paragraph of placeholder text Were using it here to show the use of the clearfix class Were adding quite a few meaningless phrases here to demonstrate how the columns interact here with the floated image        As you can see the paragraphs gracefully wrap around the floated image Now imagine how this would look with some actual content in here rather than just this boring placeholder text that goes on and on but actually conveys no tangible information at It simply takes up space and should not really be read        And yet here you are still persevering in reading this placeholder text hoping for some more insights or some hidden easter egg of content A joke perhaps Unfortunately theres none of that here"},{"layout":"docs","title":"Containers","description":"Containers are a fundamental building block of ndb-uikit that contain, pad, and align your content within a given device or viewport.","group":"layout","toc":true,"skipSize":210,"id":"containers.md","fullContent":"How they workContainers are the most basic layout element in ndbuikit and are required when using our default grid system Containers are used to contain pad and sometimes center the content within them While containers can be nested most layouts do not require a nested containerndbuikit comes with three different containers  which sets a  at each responsive breakpoint  which is  until the specified breakpoint  which is  at all breakpointsThe table below illustrates how each containers  compares to the original  and  across each breakpointSee them in action and compare them in our Grid example   Extra smallltpx  Smallgepx  Mediumgepx  Largegepx  XLargegepx  XXLargegepx                    px  px  px  px  px      px  px  px  px  px        px  px  px  px          px  px  px            px  px              px               Default containerOur default  class is a responsive fixedwidth container meaning its  changes at each breakpointResponsive containersResponsive containers allow you to specify a class that is  wide until the specified breakpoint is reached after which we apply s for each of the higher breakpoints For example  is  wide to start until the  breakpoint is reached where it will scale up with    and Fluid containersUse  for a full width container spanning the entire width of the viewportSassAs shown above ndbuikit generates a series of predefined container classes to help you build the layouts you desire You may customize these predefined container classes by modifying the Sass map found in  that powers themIn addition to customizing the Sass you can also create your own containers with our Sass mixinFor more information and examples on how to modify our Sass maps and variables please refer to the Sass section of the Grid documentation"},{"layout":"docs","title":"CSS Grid","description":"Learn how to enable, use, and customize our alternate layout system built on CSS Grid with examples and code snippets.","group":"layout","toc":true,"added":"5.1","skipSize":206,"id":"css-grid.md","fullContent":"ndbuikits default grid system represents the culmination of over a decade of CSS layout techniques tried and tested by millions of people But it was also created without many of the modern CSS features and techniques were seeing in browsers like the new CSS GridHeads upour CSS Grid system is experimental and optin as of v We included it in our documentations CSS to demonstrate it for you but its disabled by default Keep reading to learn how to enable it in your projectsHow it worksWith ndbuikit  weve added the option to enable a separate grid system thats built on CSS Grid but with a ndbuikit twist You still get classes you can apply on a whim to build responsive layouts but with a different approach under the hood CSS Grid is optin Disable the default grid system by setting  and enable the CSS Grid by setting  Then recompile your Sass Replace instances of  with  The  class sets  and creates a  that you build on with your HTML Replace  classes with  classes This is because our CSS Grid columns use the  property instead of  Columns and gutter sizes are set via CSS variables Set these on the parent  and customize however you want inline or in a stylesheet with  and In the future ndbuikit will likely shift to a hybrid solution as the  property has achieved nearly full browser support for flexboxKey differencesCompared to the default grid system Flex utilities dont affect the CSS Grid columns in the same way Gaps replaces gutters The  property replaces the horizontal  from our default grid system and functions more like  As such unlike s s have no negative margins and margin utilities cannot be used to change the grid gutters Grid gaps are applied horizontally and vertically by default See the customizing sectioncustomizing for more details Inline and custom styles should be viewed as replacements for modifier classes eg  vs  Nesting works similarly but may require you to reset your column counts on each instance of a nested  See the nesting sectionnesting for detailsExamplesThree columnsThree equalwidth columns across all viewports and devices can be created by using the  classes Add responsive classesresponsive to change the layout by viewport size  gcol  gcol  gcolResponsiveUse responsive classes to adjust your layout across viewports Here we start with two columns on the narrowest viewports and then grow to three columns on medium viewports and above  gcol gcolmd  gcol gcolmd  gcol gcolmdCompare that to this two column layout at all viewports  gcol  gcolWrappingGrid items automatically wrap to the next line when theres no more room horizontally Note that the  applies to horizontal and vertical gaps between grid items  gcol  gcol  gcol  gcolStartsStart classes aim to replace our default grids offset classes but theyre not entirely the same CSS Grid creates a grid template through styles that tell browsers to start at this column and end at this column Those properties are  and  Start classes are shorthand for the former Pair them with the column classes to size and align your columns however you need Start classes begin at  as  is an invalid value for these properties  gcol gstart  gcol gstartAuto columnsWhen there are no classes on the grid items the immediate children of a  each grid item will automatically be sized to one column                        This behavior can be mixed with grid column classes  gcol            NestingSimilar to our default grid system our CSS Grid allows for easy nesting of s However unlike the default this grid inherits changes in the rows columns and gaps Consider the example below We override the default number of columns with a local CSS variable  In the first autocolumn the column count is inherited and each column is onethird of the available width In the second autocolumn weve reset the column count on the nested  to  our default The third autocolumn has no nested contentIn practice this allows for more complex and custom layouts when compared to our default grid system      First autocolumn          Autocolumn      Autocolumn            Second autocolumn           of        of        of         Third autocolumnCustomizingCustomize the number of columns the number of rows and the width of the gaps with local CSS variables Variable  Fallback value  Description            The number of rows in your grid template      The number of columns in your grid template      The size of the gap between columns vertical and horizontal These CSS variables have no default value instead they apply fallback values that are used until a local instance is provided For example we use  for our CSS Grid rows which ignores  because that hasnt been set anywhere yet Once it is the  instance will use that value instead of the fallback value of No grid classesImmediate children elements of  are grid items so theyll be sized without explicitly adding a  class  Autocolumn  Autocolumn  AutocolumnColumns and gapsAdjust the number of columns and the gap  gcol  gcol  gcol  gcolAdding rowsAdding more rows and changing the placement of columns  Autocolumn  Autocolumn  AutocolumnGapsChange the vertical gaps only by modifying the  Note that we use  on s but  and  can be modified as needed  gcol  gcol  gcol  gcolBecause of that you can have different vertical and horizontal s which can take a single value all sides or a pair of values vertical and horizontal This can be applied with an inline style for  or with our  CSS variable  gcol  gcol  gcol  gcolSassOne limitation of the CSS Grid is that our default classes are still generated by two Sass variables  and  This effectively predetermines the number of classes generated in our compiled CSS You have two options here Modify those default Sass variables and recompile your CSS Use inline or custom styles to augment the provided classesFor example you can increase the column count and change the gap size and then size your columns with a mix of inline styles and predefined CSS Grid column classes eg    columns  gcol"},{"layout":"docs","title":"Grid system","description":"Use our powerful mobile-first flexbox grid to build layouts of all shapes and sizes thanks to a twelve column system, six default responsive tiers, Sass variables and mixins, and dozens of predefined classes.","group":"layout","toc":true,"skipSize":286,"id":"grid.md","fullContent":"Examplendbuikits grid system uses a series of containers rows and columns to layout and align content Its built with flexboxhttpsdevelopermozillaorgenUSdocsWebCSSCSSFlexibleBoxLayoutBasicConceptsofFlexbox and is fully responsive Below is an example and an indepth explanation for how the grid system comes togetherNew to or unfamiliar with flexbox Read this CSS Tricks flexbox guidehttpscsstrickscomsnippetscssaguidetoflexboxflexboxbackground for background terminology guidelines and code snippets            Column              Column              Column      The above example creates three equalwidth columns across all devices and viewports using our predefined grid classes Those columns are centered in the page with the parent How it worksBreaking it down heres how the grid system comes together Our grid supports six responsive breakpoints  Breakpoints are based on  media queries meaning they affect that breakpoint and all those above it eg  applies to     and  This means you can control container and column sizing and behavior by each breakpoint Containers center and horizontally pad your content Use  for a responsive pixel width  for  across all viewports and devices or a responsive container eg  for a combination of fluid and pixel widths Rows are wrappers for columns Each column has horizontal  called a gutter for controlling the space between them This  is then counteracted on the rows with negative margins to ensure the content in your columns is visually aligned down the left side Rows also support modifier classes to uniformly apply column sizingrowcolumns and gutter classes to change the spacing of your content Columns are incredibly flexible There are  template columns available per row allowing you to create different combinations of elements that span any number of columns Column classes indicate the number of template columns to span eg  spans four s are set in percentages so you always have the same relative sizing Gutters are also responsive and customizable Gutter classes are available across all breakpoints with all the same sizes as our margin and padding spacing Change horizontal gutters with  classes vertical gutters with  or all gutters with  classes  is also available to remove gutters Sass variables maps and mixins power the grid If you dont want to use the predefined grid classes in ndbuikit you can use our grids source Sasssass to create your own with more semantic markup We also include some CSS custom properties to consume these Sass variables for even greater flexibility for youBe aware of the limitations and bugs around flexboxhttpsphilipwaltonflexbugs like the inability to use some HTML elements as flex containershttpsphilipwaltonflexbugsflexbugGrid optionsndbuikits grid system can adapt across all six default breakpoints and any breakpoints you customize The six default grid tiers are as follows Extra small xs Small sm Medium md Large lg Extra large xl Extra extra large xxlAs noted above each of these breakpoints have their own container unique class prefix and modifiers Heres how the grid changes across these breakpoints                                      xs          ltpx                          sm          gepx                          md          gepx                          lg          gepx                          xl          gepx                          xxl          gepx                                    Container maxwidth        None auto        px        px        px        px        px                    Class prefix        col        colsm        colmd        collg        colxl        colxxl                     of columns                            Gutter width        rem rem on left and right                    Custom gutters        Yes                    Nestable        Yes                    Column ordering        Yes            Autolayout columnsUtilize breakpointspecific column classes for easy column sizing without an explicit numbered class like EqualwidthFor example here are two grid layouts that apply to every device and viewport from  to  Add any number of unitless classes for each breakpoint you need and every column will be the same width             of                of                    of                of                of       Setting one column widthAutolayout for flexbox grid columns also means you can set the width of one column and have the sibling columns automatically resize around it You may use predefined grid classes as shown below grid mixins or inline widths Note that the other columns will resize no matter the width of the center column             of                of  wider               of                    of                of  wider               of       Variable width contentUse  classes to size columns based on the natural width of their content             of               Variable width content               of                    of               Variable width content               of       Responsive classesndbuikits grid includes six tiers of predefined classes for building complex responsive layouts Customize the size of your columns on extra small small medium large or extra large devices however you see fitAll breakpointsFor grids that are the same from the smallest of devices to the largest use the  and  classes Specify a numbered class when you need a particularly sized column otherwise feel free to stick to       col    col    col    col        col    col  Stacked to horizontalUsing a single set of  classes you can create a basic grid system that starts out stacked and becomes horizontal at the small breakpoint       colsm    colsm        colsm    colsm    colsm  Mix and matchDont want your columns to simply stack in some grid tiers Use a combination of different classes for each tier as needed See the example below for a better idea of how it all works        colmd    col colmd          col colmd    col colmd    col colmd          col    col  Row columnsUse the responsive  classes to quickly set the number of columns that best render your content and layout Whereas normal  classes apply to the individual columns eg  the row columns classes are set on the parent  as a shortcut With  you can give the columns their natural widthUse these row columns classes to quickly create basic grid layouts or to control your card layouts      Column    Column    Column    Column        Column    Column    Column    Column        Column    Column    Column    Column        Column    Column    Column    Column        Column    Column    Column    Column        Column    Column    Column    Column  You can also use the accompanying Sass mixin NestingTo nest your content with the default grid add a new  and set of  columns within an existing  column Nested rows should include a set of columns that add up to  or fewer it is not required that you use all  available columns            Level  colsm                                Level  col colsm                          Level  col colsm                    SassWhen using ndbuikits source Sass files you have the option of using Sass variables and mixins to create custom semantic and responsive page layouts Our predefined grid classes use these same variables and mixins to provide a whole suite of readytouse classes for fast responsive layoutsVariablesVariables and maps determine the number of columns the gutter width and the media query point at which to begin floating columns We use these to generate the predefined grid classes documented above as well as for the custom mixins listed belowMixinsMixins are used in conjunction with the grid variables to generate semantic CSS for individual grid columnsExample usageYou can modify the variables to your own custom values or just use the mixins with their default values Heres an example of using the default settings to create a twocolumn layout with a gap betweenwidth makecontainer      Main content    Secondary content  Customizing the gridUsing our builtin grid Sass variables and maps its possible to completely customize the predefined grid classes Change the number of tiers the media query dimensions and the container widthsthen recompileColumns and guttersThe number of grid columns can be modified via Sass variables  is used to generate the widths in percent of each individual column while  sets the width for the column gutters  is used to set the maximum number of columns of  any number over this limit is ignoredGrid tiersMoving beyond the columns themselves you may also customize the number of grid tiers If you wanted just four grid tiers youd update the  and  to something like thisWhen making any changes to the Sass variables or maps youll need to save your changes and recompile Doing so will output a brandnew set of predefined grid classes for column widths offsets and ordering Responsive visibility utilities will also be updated to use the custom breakpoints Make sure to set grid values in  not   or"},{"layout":"docs","title":"Gutters","description":"Gutters are the padding between your columns, used to responsively space and align content in the ndb-uikit grid system.","group":"layout","toc":true,"skipSize":194,"id":"gutters.md","fullContent":"How they work Gutters are the gaps between column content created by horizontal  We set  and  on each column and use negative  to offset that at the start and end of each row to align content Gutters start at   wide This allows us to match our grid to the padding and margin spacers scale Gutters can be responsively adjusted Use breakpointspecific gutter classes to modify horizontal gutters vertical gutters and all guttersHorizontal gutters classes can be used to control the horizontal gutter widths The  or  parent may need to be adjusted if larger gutters are used too to avoid unwanted overflow using a matching padding utility For example in the following example weve increased the padding with            Custom column padding              Custom column padding      An alternative solution is to add a wrapper around the  with the  class           Custom column padding              Custom column padding      Vertical gutters classes can be used to control the vertical gutter widths Like the horizontal gutters the vertical gutters can cause some overflow below the  at the end of a page If this occurs you add a wrapper around  with the  class            Custom column padding              Custom column padding              Custom column padding              Custom column padding      Horizontal  vertical gutters classes can be used to control the horizontal gutter widths for the following example we use a smaller gutter width so there wont be a need to add the  wrapper class            Custom column padding              Custom column padding              Custom column padding              Custom column padding      Row columns guttersGutter classes can also be added to row columns In the following example we use responsive row columns and responsive gutter classes            Row column              Row column              Row column              Row column              Row column              Row column              Row column              Row column              Row column              Row column      No guttersThe gutters between columns in our predefined grid classes can be removed with  This removes the negative s from  and the horizontal  from all immediate children columnsNeed an edgetoedge design Drop the parent  or  and add  to the  to prevent overflowIn practice heres how it looks Note you can continue to use this with all other predefined grid classes including column widths responsive tiers reorders and more  colsm colmd  col colmdChange the guttersClasses are built from the  Sass map which is inherited from the  Sass map"},{"layout":"docs","title":"Utilities for layout","description":"For faster mobile-friendly and responsive development, ndb-uikit includes dozens of utility classes for showing, hiding, aligning, and spacing content.","group":"layout","toc":true,"skipSize":238,"id":"utilities.md","fullContent":"Changing Use our display utilities for responsively toggling common values of the  property Mix it with our grid system content or components to show or hide them across specific viewportsFlexbox optionsndbuikit is built with flexbox but not every elements  has been changed to  as this would add many unnecessary overrides and unexpectedly change key browser behaviors Most of our components are built with flexbox enabledShould you need to add  to an element do so with  or one of the responsive variants eg  Youll need this class or  value to allow the use of our extra flexbox utilities for sizing alignment spacing and moreMargin and paddingUse the  and  spacing utilities to control how elements and components are spaced and sized ndbuikit includes a sixlevel scale for spacing utilities based on a  value default  variable Choose values for all viewports eg  for  in LTR or pick responsive variants to target specific viewports eg  for  in LTR starting at the  breakpointToggle When toggling  isnt needed you can toggle the  of an element with our visibility utilities Invisible elements will still affect the layout of the page but are visually hidden from visitors"},{"layout":"docs","title":"Z-index","description":"While not a part of ndb-uikit's grid system, z-indexes play an important part in how our components overlay and interact with one another.","group":"layout","skipSize":202,"id":"z-index.md","fullContent":"Several ndbuikit components utilize  the CSS property that helps control layout by providing a third axis to arrange content We utilize a default zindex scale in ndbuikit thats been designed to properly layer navigation tooltips and popovers modals and moreThese higher values start at an arbitrary number high and specific enough to ideally avoid conflicts We need a standard set of these across our layered componentstooltips popovers navbars dropdowns modalsso we can be reasonably consistent in the behaviors Theres no reason we couldnt have used  or We dont encourage customization of these individual values should you change one you likely need to change them allTo handle overlapping borders within components eg buttons and inputs in input groups we use low single digit  values of   and  for default hover and active states On hoverfocusactive we bring a particular element to the forefront with a higher  value to show their border over the sibling elements"},{"layout":"docs","title":"Migrating to v5","description":"Track and review changes to the ndb-uikit source files, documentation, and components to help you migrate from v4 to v5.","group":"migration","aliases":"/migration/","toc":true,"skipSize":228,"id":"migration.md","fullContent":"VRefreshed designndbuikit V features a subtle design update for a handful of components and properties across the project most notably through refined  values on buttons and form controls Our documentation also has been updated with a new homepage simplerdocumentationlayout that no longer collapses sections of the sidebar and more prominent examples of ndbuikit IconshttpsiconsgetndbuikitcomMore CSS variablesWeve updated all our components to use CSS variables While Sass still underpins everything each component has been updated to include CSS variables on the component base classes eg  allowing for more realtime customization of ndbuikit In subsequent releases well continue to expand our use of CSS variables into our layout forms helpers and utilities Read more about CSS variables in each component on their respective documentation pagesOur CSS variable usage will be somewhat incomplete until ndbuikit  While wed love to fully implement these across the board they do run the risk of causing breaking changes For example setting  in our source code breaks potential Sass in your own code if you were doing  for some reasonAs such wherever possible we will continue to push towards more CSS variables but please recognize our implementation may be slightly limited in vNew ndbuikit V introduced a new Sass file with  It pulls out several Sass maps from  to fix an issue where updates to an original map were not applied to secondary maps that extend them For example updates to  were not being applied to other theme maps that relied on  breaking key customization workflows In short Sass has a limitation where once a default variable or map has been used it cannot be updated Theres a similar shortcoming with CSS variables when theyre used to compose other CSS variablesThis is why variable customizations in ndbuikit have to come after  but before  and the rest of our import stack The same applies to Sass mapsyou must override the defaults before they get used The following maps have been moved to the new         Your custom ndbuikit CSS builds should now look something like this with a separate maps importNew utilities Expanded  utilities to include  for semibold fonts Expanded  utilities to include two new sizes  and  for more optionsAdditional changes Introduced new  option  Now when opting into the experimental CSS Grid layout  classes will still be compiled unless this option is set to  Containers also now keep their gutter values Offcanvas component now has responsive variations The original  class remains unchangedit hides content across all viewports To make it responsive change that  class to any  class Thicker table dividers are now optin  Weve removed the thicker and more difficult to override border between table groups and moved it to an optional class you can apply  See the tabledocumentationfor an example Scrollspy has been rewrittenhttpstwbsndbuikitpull to use the Intersection Observer API which means you no longer need relative parent wrappers deprecates  config and more Look for your Scrollspy implementations to be more accurate and consistent in their nav highlighting Popovers and tooltips now use CSS variables Some CSS variables have been updated from their Sass counterparts to reduce the number of variables As a result three variables have been deprecated in this release   and  Added new  helpers Instead of setting individual  and  utilities you can now use the  helpers to set a  with contrasting foreground  Added  modifier to flip the order of labels and associated checkboxesradios Added striped columns support to tables via the new  classFor a complete list of changes see the V project on GitHubhttpstwbsndbuikitprojectsv Added experimental support for CSS Grid layout  This is a work in progress and is not yet ready for production use but you can opt into the new feature via Sass To enable it disable the default grid by setting  and enable the CSS Grid by setting  Updated navbars to support offcanvas  Add offcanvas drawers in any navbar with the responsive  classes and some offcanvas markup Added new placeholder component  Our newest component a way to provide temporary blocks in lieu of real content to help indicate that something is still loading in your site or app Collapse plugin now supports horizontal collapsing  Add  to your  to collapse the  instead of the  Avoid browser repainting by setting a  or  Added new stack and vertical rule helpers  Quickly apply multiple flexbox properties to quickly create custom layouts with stacks Choose from horizontal  and vertical  stacks Add vertical dividers similar to  elements with the new  helpers Added new global  CSS variables  Added several new CSS variables to the  level for controlling  styles More are in the works including across our utilities and components but for now read up CSS variables in the Customize section Overhauled color and background utilities to use CSS variables and added new text opacity and background opacity utilities   and  utilities are now built with CSS variables and  color values allowing you to easily customize any utility with new opacity utilities Added new snippet examples based to show how to customize our components  Pull ready to use customized components and other common design patterns with our new Snippets examples Includes footers dropdowns list groups and modals Removed unused positioning styles from popovers and tooltips as these are handled solely by Popper  has been deprecated and set to  in the processWant more information Read the v blog posthttpsbloggetndbuikitcomndbuikitHey there Changes to our first major release of ndbuikit  v are documented below They dont reflect the additional changes shown aboveDependencies Dropped jQuery Upgraded from Popper vx to Popper vx Replaced Libsass with Dart Sass as our Sass compiler given Libsass was deprecated Migrated from Jekyll to Hugo for building our documentationBrowser support Dropped Internet Explorer  and  Dropped Microsoft Edge Documentation changes Redesigned homepagedocumentationlayout and footer Added new Parcel guide Added new Customize section replacing vs Theming pagehttpsgetndbuikitcomdocsgettingstartedtheming with new details on Sass global configuration options color schemes CSS variables and more Reorganized all form documentation into new Forms section breaking apart the content into more focused pages Similarly updated the Layout section to flesh out grid content more clearly Renamed Navs component page to Navs  Tabs Renamed Checks page to Checks  radios Redesigned the navbar and added a new subnav to make it easier to get around our sites anddocumentationversions Added new keyboard shortcut for the search field Ctrl  Sass Weve ditched the default Sass map merges to make it easier to remove redundant values Keep in mind you now have to define all values in the Sass maps like  Check out how to deal with Sass maps Breaking Renamed  function and related variables to  as its no longer related to YIQ color space See httpstwbsndbuikitpull    is renamed to     and  are respectively renamed to  and  Breaking Media query mixins parameters have changed for a more logical approach    uses the breakpoint itself instead of the next breakpoint eg  instead of  targets viewports smaller than    Similarly the second parameter in  also uses the breakpoint itself instead of the next breakpoint eg  instead of  targets viewports between  and  Breaking Removed print styles and  variable Print display classes are still around See httpstwbsndbuikitpull Breaking Dropped   and  functions in favor of variables See httpstwbsndbuikitpull Breaking Renamed  function to  and now accepts any color you want instead of only  colors See httpstwbsndbuikitpull Watch out  was later on dropped in  Breaking Renamed  and  to  and  for brevity Breaking Removed the  mixin Use the  class to add gradients to elements instead of the generated  classes Breaking Removed previously deprecated mixins      and                 also dropped the associated utility class        Breaking Renamed  function to  to avoid collision with Sasss own color scaling function  mixins now allow  values and drop  from multiple arguments See httpstwbsndbuikitpull The  mixin now has a default valueColor system The color system which worked with  and  was removed in favor of a new color system All  and  functions in our codebase are replaced by  and  These functions will mix the color with either white or black instead of changing its lightness by a fixed amount The  will either tint or shade a color depending on whether its weight parameter is positive or negative See httpstwbsndbuikitpull for more details Added new tints and shades for every color providing nine separate colors for each base color as new Sass variables Improved color contrast Bumped color contrast ratio from  to  and updated blue green cyan and pink colors to ensure WCAG  AA contrast Also changed our color contrast color from  to  To support our color system weve added new custom  and  functions to mix our colors appropriatelyGrid updates New breakpoint Added new  breakpoint for  and up No changes to all other breakpoints Improved gutters Gutters are now set in rems and are narrower than v  or about  down from  This aligns our grid systems gutters with our spacing utilities   Added new gutter class   and  to control horizontalvertical gutters horizontal gutters and vertical gutters   Breaking Renamed  to  to match new gutter utilities Columns no longer have  applied so you may have to add  to some elements to restore that behavior Breaking Dropped several  classes that often went unused We now only provide  to  out of the box Breaking Dropped the  component as it can be easily replicated with utilities See httpstwbsndbuikitpull and the flex utilities page for an example Breaking  now only applies  to the column instead of resetting the global boxsizing This way our grid styles can be used in more places without interference  no longer disables the generation of container classes anymore See httpstwbsndbuikitpull Updated the  mixin to default to equal columns without a specified sizeContent Reboot etc RFS is now enabled by default Headings using the  mixin will automatically adjust their  to scale with the viewport This feature was previously optin with v Breaking Overhauled our display typography to replace our  variables and with a  Sass map Also removed the individual  variables for a single  and adjusted s Added two new  heading sizes  and  Links are underlined by default not just on hover unless theyre part of specific components Redesigned tables to refresh their styles and rebuild them with CSS variables for more control over styling Breaking Nested tables do not inherit styles anymore Breaking  and  are dropped in favor of the  variant classes which can be used for all table elements      and  Breaking The  mixin is renamed to  and accepts only  parameters  color name and  color code The border color and accent colors are automatically calculated based on the table factor variables Split table cell padding variables into  and  Breaking Dropped  class See httpstwbsndbuikitpull Breaking  utilities do not add hover and focus states to links anymore  helper classes can be used instead See httpstwbsndbuikitpull Breaking Dropped  class See httpstwbsndbuikitpull Breaking  elements now use  instead of  to better support the  attribute This also enables use of padding utilities to create thicker dividers eg  Reset default horizontal  on  and  elements from browser default  to  Added  which applies  globallyexcept for users asking for reduced motion through  media query See httpstwbsndbuikitpullRTL Horizontal direction specific variables utilities and mixins have all been renamed to use logical properties like those found in flexbox layoutseg  and  in lieu of  and Forms Added new floating forms Weve promoted the Floating labels example to fully supported form components See the new Floating labels page Breaking Consolidated native and custom form elements Checkboxes radios selects and other inputs that had native and custom classes in v have been consolidated Now nearly all our form elements are entirely custom most without the need for custom HTML    is now     is now     is now     is now     and  have been replaced by custom styles on top of     is now    Dropped native  and  Breaking Dropped  and  You can now just add buttons and  as direct children of the input groups The longstanding Missing border radius on input group with validation feedback bughttpstwbsndbuikitissues is finally fixed by adding an additional  class to input groups with validation Breaking Dropped formspecific layout classes for our grid system Use our grid and utilities instead of   or  Breaking Form labels now require  Breaking  no longer sets  allowing you to create inline or block help text as you wish just by changing the HTML element Form controls no longer used fixed  when possible instead deferring to  to improve customization and compatibility with other components Validation icons are no longer applied to s with  Rearranged source Sass files under  including input group stylesComponents Unified  values for alerts breadcrumbs cards dropdowns list groups modals popovers and tooltips to be based on our  variable See httpstwbsndbuikitpullAccordion Added new accordion componentAlerts Alerts now have examples with icons Removed custom styles for s in each alert since they already use Badges Breaking Dropped all  color classes for background utilities eg use  instead of  Breaking Dropped use the  utility instead Breaking Removed hover and focus styles for  and  elements Increased default padding for badges from  to Breadcrumbs Simplified the default appearance of breadcrumbs by removing   and  Added new CSS custom property  for easy customization without needing to recompile CSSButtons Breaking Toggle buttons with checkboxes or radios no longer require JavaScript and have new markup We no longer require a wrapping element add  to the  and pair it with any  classes on the  See httpstwbsndbuikitpull Thedocumentationfor this has moved from our Buttons page to the new Forms section Breaking Dropped  for utilities Instead of using  on the  wrap your buttons with  and a  utility to space them as needed Switch to responsive classes for even more control over them Read thedocumentationfor some examples Updated our  and  mixins to support additional parameters Updated buttons to ensure increased contrast on hover and active states Disabled buttons now have Card Breaking Dropped  in favor of our grid Wrap your cards in column classes and add a parent  container to recreate card decks but with more control over responsive alignment Breaking Dropped  in favor of Masonry See httpstwbsndbuikitpull Breaking Replaced the  based accordion with a new Accordion componentCarousel Added new  variant for dark text controls and indicators great for lighter backgrounds Replaced chevron icons for carousel controls with new SVGs from ndbuikit IconsClose button Breaking Renamed  to  for a less generic name Close buttons now use a  embedded SVG instead of a  in the HTML allowing for easier customization without the need to touch your markup Added new  variant that uses  to enable higher contrast dismiss icons against darker backgroundsCollapse Removed scroll anchoring for accordionsDropdowns Added new  variant and associated variables for ondemand dark dropdowns Added new variable for  Darkened the dropdown divider for improved contrast Breaking All the events for the dropdown are now triggered on the dropdown toggle button and then bubbled up to the parent element Dropdown menus now have a  attribute set when the positioning of the dropdown is static or dropdown is in the navbar This is added by our JavaScript and helps us use custom position styles without interfering with Poppers positioning Breaking Dropped  option for dropdown plugin in favor of native Popper configuration You can now disable the flipping behavior by passing an empty array for httpspopperjsorgdocsvmodifiersflipfallbackplacements option in fliphttpspopperjsorgdocsvmodifiersflip modifier Dropdown menus can now be clickable with a new  option to handle the auto close behavior You can use this option to accept the click inside or outside the dropdown menu to make it interactive Dropdowns now support s wrapped in sJumbotron Breaking Dropped the jumbotron component as it can be replicated with utilities See our new Jumbotron example for a demoList group Added new  modifier to list groupsNavs and tabs Added new  variables for    and   to the  classNavbars Breaking Navbars now require a container within to drastically simplify spacing requirements and CSS required Breaking The  class can no longer be applied to s it must be applied directly on sOffcanvas Added the new offcanvas componentPagination Pagination links now have customizable  that are dynamically rounded on all corners when separated from one another Added s to pagination linksPopovers Breaking Renamed  to  in our default popover template Renamed  option to Spinners Spinners now honor  by slowing down animations See httpstwbsndbuikitpull Improved spinner vertical alignmentToasts Toasts can now be positioned in a  with the help of positioning utilities Changed default toast duration to  seconds Removed  from toasts and replaced with proper s with  functionsTooltips Breaking Renamed  to  in our default tooltip template Breaking The default value for the  is changed to  for better placement of popper elements Breaking Renamed  option to Utilities Breaking Renamed several utilities to use logical property names instead of directional names with the addition of RTL support   Renamed  and  to  and    Renamed  and  to  and    Renamed  and  to  and    Renamed  and  to  and    Renamed  and  to  and    Renamed  and  to  and    Renamed  and  to  and  Breaking Disabled negative margins by default Added new  class for quickly setting the s background to additional elements Added new position utilities for    and  Values include   and  for each property Added new    utilities to horizontally or vertically center absolutefixed positioned elements Added new  utilities Breaking Renamed  to  Breaking Removed  as its an antiquated method for hiding text that shouldnt be used anymore Added  utilities for  utilities with RFS enabled These use the same scale as HTMLs default headings  large to small and can be modified via Sass map Breaking Renamed  utilities as  for brevity and consistency Breaking Renamed  utilities as  for brevity and consistency Added  to display utilities and new  utilities  for CSS Grid and flexbox layouts Breaking Removed  and  and introduced a new scale of classes  to  See httpstwbsndbuikitpull Added new  utilities    and  See here Moved the  utility in our CSS to give it more weight over other display utilities Extended the  helper to also work on containers using Helpers Breaking Responsive embed helpers have been renamed to ratio helpers with new class names and improved behaviors as well as a helpful CSS variable   Classes have been renamed to change  to  in the aspect ratio For example  is now    Weve dropped the  and element group selector in favor of a simpler  selector No more class is needed and the ratio helper now works with any HTML element   The  Sass map has been renamed to  and its values have been simplified to include the class name and the percentage as the  pair   CSS variables are now generated and included for each value in the Sass map Modify the  variable on the  to create any custom aspect ratio Breaking Screen reader classes are now visually hidden classes   Changed the Sass file from  to    Renamed  and  to  and    Renamed  and  mixins to  and   now also includes our helpers Helpers dont need to be imported in custom builds anymoreJavaScript Dropped jQuery dependency and rewrote plugins to be in regular JavaScript Breaking Data attributes for all JavaScript plugins are now namespaced to help distinguish ndbuikit functionality from third parties and your own code For example we use  instead of  All plugins can now accept a CSS selector as the first argument You can either pass a DOM element or any valid CSS selector to create a new instance of the plugin    can be passed as a function that accepts the ndbuikits default Popper config as an argument so that you can merge this default configuration in your way Applies to dropdowns popovers and tooltips The default value for the  is changed to  for better placement of Popper elements Applies to dropdowns popovers and tooltips Removed underscore from public static methods like"},{"layout":"docs","title":"Utility API","description":"The utility API is a Sass-based tool to generate utility classes.","group":"utilities","aliases":"/docs/1.0/utilities/","toc":true,"skipSize":178,"id":"api.md","fullContent":"ndbuikit utilities are generated with our utility API and can be used to modify or extend our default set of utility classes via Sass Our utility API is based on a series of Sass maps and functions for generating families of classes with various options If youre unfamiliar with Sass maps read up on the official Sass docshttpssasslangcomdocumentationvaluesmaps to get startedThe  map contains all our utilities and is later merged with your custom  map if present The utility map contains a keyed list of utility groups which accept the following options Option  Type  Defaultnbspvalue  Description          property  Required    Name of the property this can be a string or an array of strings eg horizontal paddings or margins  values  Required    List of values or a map if you dont want the class name to be the same as the value If  is used as map key  is not prepended to the class name  class  Optional  null  Name of the generated class If not provided and  is an array of strings  will default to the first element of the  array If not provided and  is a string the  keys are used for the  names  cssvariableutilities  Optional    Boolean to generate CSS variables instead of CSS rules  cssvariableutilities  Optional  null  Custom unprefixed name for the CSS variable inside the ruleset  localcssvariables  Optional  null  Map of local CSS variables to generate in addition to the CSS rules  states  Optional  null  List of pseudoclass variants eg  or  to generate  responsive  Optional    Boolean indicating if responsive classes should be generated    Optional    Boolean to enable fluid rescaling with RFS  print  Optional    Boolean indicating if print classes need to be generated    Optional    Boolean indicating if utility should be kept in RTL API explainedAll utility variables are added to the  variable within our  stylesheet Each group of utilities looks something like thisWhich outputs the followingPropertyThe required  key must be set for any utility and it must contain a valid CSS property This property is used in the generated utilitys ruleset When the  key is omitted it also serves as the default class name Consider the  utilityOutputValuesUse the  key to specify which values for the specified  should be used in the generated class names and rules Can be a list or map set in the utilities or in a Sass variableAs a list like with  utilitiesAs a map like with  utilitiesAs a Sass variable that sets the list or map as in our  utilitiesClassUse the  option to change the class prefix used in the compiled CSS For example to change from  to OutputIf  generates classes for each of the  keysOutputCSS variable utilitiesSet the  boolean option to  and the API will generate local CSS variables for the given selector instead of the usual  rules Add an optional  to set a different CSS variable name than the class nameConsider our  utilities If we add the  option well get a custom outputOutputLocal CSS variablesUse the  option to specify a Sass map that will generate local CSS variables within the utility classs ruleset Please note that it may require additional work to consume those local CSS variables in the generated CSS rules For example consider our  utilitiesOutputStatesUse the  option to generate pseudoclass variations Example pseudoclasses are  and  When a list of states are provided classnames are created for that pseudoclass For example to change opacity on hover add  and youll get  in your compiled CSSNeed multiple pseudoclasses Use a spaceseparated list of states OutputResponsiveAdd the  boolean to generate responsive utilities eg  across all breakpointsOutputPrintEnabling the  option will also generate utility classes for print which are only applied within the  media queryOutputImportanceAll utilities generated by the API include  to ensure they override components and modifier classes as intended You can toggle this setting globally with the  variable defaults to Using the APINow that youre familiar with how the utilities API works learn how to add your own custom classes and modify our default utilitiesOverride utilitiesOverride existing utilities by using the same key For example if you want additional responsive overflow utility classes you can do thisAdd utilitiesNew utilities can be added to the default  map with a  Make sure our required Sass files and  are imported first then use the  to add your additional utilities For example heres how to add a responsive  utility with three valuesModify utilitiesModify existing utilities in the default  map with  and  functions In the example below were adding an additional value to the  utilities Start with an initial  and then specify which utility you want to modify From there fetch the nested  map with  to access and modify the utilitys options and values Enable responsiveYou can enable responsive classes for an existing set of utilities that are not currently responsive by default For example to make the  classes responsiveThis will now generate responsive variations of  and  for each breakpoint Your generated CSS will look like this Rename utilitiesMissing v utilities or used to another naming convention The utilities API can be used to override the resulting  of a given utilityfor example to rename  utilities to oldish Remove utilitiesRemove any of the default utilities with the  Sass functionhttpssasslangcomdocumentationmodulesmapremoveYou can also use the  Sass functionhttpssasslangcomdocumentationmodulesmapmerge and set the group key to  to remove the utilityAdd remove modifyYou can add remove and modify many utilities all at once with the  Sass functionhttpssasslangcomdocumentationmodulesmapmerge Heres how you can combine the previous examples into one larger mapwidth Remove utility in RTLSome edge cases make RTL styling difficulthttpsrtlstylingcompostsrtlstylingcommonthingsthatmightnotworkforrtl such as line breaks in Arabic Thus utilities can be dropped from RTL output by setting the  option to OutputThis doesnt output anything in RTL thanks to the RTLCSS  control directivehttpsrtlcsscomlearnusageguidecontroldirectivesremove"},{"layout":"docs","title":"Background","description":"Convey meaning through `background-color` and add decoration with gradients.","group":"utilities","toc":true,"skipSize":156,"id":"background.md","fullContent":"Background colorSimilar to the contextual text color classes set the background of an element to any contextual class Background utilities do not set  so in some cases youll want to use  color utilitiesindex SiteData themecolors bgbgbodybgwhitebgtransparentBackground gradientBy adding a  class a linear gradient is added as background image to the backgrounds This gradient starts with a semitransparent white which fades out to the bottomDo you need a gradient in your custom CSS Just add index SiteData themecolors bgbggradientOpacityAs of v  utilities are generated with Sass using CSS variables This allows for realtime color changes without compilation and dynamic alpha transparency changesHow it worksConsider our default  utilityWe use an RGB version of our  with the value of  CSS variable and attached a second CSS variable  for the alpha transparency with a default value  thanks to a local CSS variable That means anytime you use  now your computed  value is  The local CSS variable inside each  class avoids inheritance issues so nested instances of the utilities dont automatically have a modified alpha transparencyExampleTo change that opacity override  via custom styles or inline stylesThis is default success backgroundThis is  opacity success backgroundOr choose from any of the  utilitiesThis is default success backgroundThis is  opacity success backgroundThis is  opacity success backgroundThis is  opacity success backgroundThis is  opacity success backgroundSassIn addition to the following Sass functionality consider reading about our included CSS custom properties aka CSS variables for colors and moreVariablesMost  utilities are generated by our theme colors reassigned from our generic color palette variablesGrayscale colors are also available but only a subset are used to generate any utilitiesMapTheme colors are then put into a Sass map so we can loop over them to generate our utilities component modifiers and moreGrayscale colors are also available as a Sass map This map is not used to generate any utilitiesRGB colors are generated from a separate Sass mapAnd background color opacities build on that with their own map thats consumed by the utilities APIMixinsNo mixins are used to generate our background utilities but we do have some additional mixins for other situations where youd like to create your own gradientsUtilities APIBackground utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Borders","description":"Use border utilities to quickly style the border and border-radius of an element. Great for images, buttons, or any other element.","group":"utilities","toc":true,"skipSize":207,"id":"borders.md","fullContent":"BorderUse border utilities to add or remove an elements borders Choose from all borders or one at a timeAdditiveAdd borders to custom elementsSubtractiveOr remove bordersColorChange the border color using utilities built on our theme colorsindex SiteData themecolors Or modify the default  of a component  Email address    Dangerous heading  Changing border color and widthOpacityndbuikit  utilities are generated with Sass using CSS variables This allows for realtime color changes without compilation and dynamic alpha transparency changesHow it worksConsider our default  utilityWe use an RGB version of our  with the value of  CSS variable and attached a second CSS variable  for the alpha transparency with a default value  thanks to a local CSS variable That means anytime you use  now your computed  value is  The local CSS variable inside each  class avoids inheritance issues so nested instances of the utilities dont automatically have a modified alpha transparencyExampleTo change that opacity override  via custom styles or inline stylesThis is default success borderThis is  opacity success borderOr choose from any of the  utilitiesThis is default success borderThis is  opacity success borderThis is  opacity success borderThis is  opacity success borderThis is  opacity success borderWidthRadiusAdd classes to an element to easily round its cornersSizesUse the scaling classes for larger or smaller rounded corners Sizes range from  to  and can be configured by modifying the utilities APICSSVariablesSass variablesSass mixinsUtilities APIBorder utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Colors","description":"Convey meaning through `color` with a handful of color utility classes. Includes support for styling links with hover states, too.","group":"utilities","toc":true,"skipSize":206,"id":"colors.md","fullContent":"ColorsColorize text with color utilities If you want to colorize links you can use the  helper classes which have  and  statesindex SiteData themecolors texttextbodytextmutedtextwhitetextblacktextwhiteDeprecation With the addition of  utilities and CSS variables for text utilities  and  are deprecated as of v Theyll be removed in vOpacityAs of v text color utilities are generated with Sass using CSS variables This allows for realtime color changes without compilation and dynamic alpha transparency changesHow it worksConsider our default  utilityWe use an RGB version of our  with the value of  CSS variable and attached a second CSS variable  for the alpha transparency with a default value  thanks to a local CSS variable That means anytime you use  now your computed  value is  The local CSS variable inside each  class avoids inheritance issues so nested instances of the utilities dont automatically have a modified alpha transparencyExampleTo change that opacity override  via custom styles or inline stylesThis is default primary textThis is  opacity primary textOr choose from any of the  utilitiesThis is default primary textThis is  opacity primary textThis is  opacity primary textThis is  opacity primary textSpecificitySometimes contextual classes cannot be applied due to the specificity of another selector In some cases a sufficient workaround is to wrap your elements content in a  or more semantic element with the desired classSassIn addition to the following Sass functionality consider reading about our included CSS custom properties aka CSS variables for colors and moreVariablesMost  utilities are generated by our theme colors reassigned from our generic color palette variablesGrayscale colors are also available but only a subset are used to generate any utilitiesMapTheme colors are then put into a Sass map so we can loop over them to generate our utilities component modifiers and moreGrayscale colors are also available as a Sass map This map is not used to generate any utilitiesRGB colors are generated from a separate Sass mapAnd color opacities build on that with their own map thats consumed by the utilities APIUtilities APIColor utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Display property","description":"Quickly and responsively toggle the display value of components and more with our display utilities. Includes support for some of the more common values, as well as some extras for controlling display when printing.","group":"utilities","toc":true,"skipSize":301,"id":"display.md","fullContent":"How it worksChange the value of the  propertyhttpsdevelopermozillaorgenUSdocsWebCSSdisplay with our responsive display utility classes We purposely support only a subset of all possible values for  Classes can be combined for various effects as you needNotationDisplay utility classes that apply to all breakpoints from  to  have no breakpoint abbreviation in them This is because those classes are applied from  and up and thus are not bound by a media query The remaining breakpoints however do include a breakpoint abbreviationAs such the classes are named using the format  for   for     and Where value is one of          The display values can be altered by changing the  values defined in  and recompiling the SCSSThe media queries affect screen widths with the given breakpoint or larger For example  sets  on   and  screensExamplesdinlinedinlinedblockdblockHiding elementsFor faster mobilefriendly development use responsive display classes for showing and hiding elements by device Avoid creating entirely different versions of the same site instead hide elements responsively for each screen sizeTo hide elements simply use the  class or one of the  classes for any responsive screen variationTo show an element only on a given interval of screen sizes you can combine one  class with a  class for example  will hide the element for all screen sizes except on medium and large devices Screen size  Class      Hidden on all    Hidden only on xs    Hidden only on sm    Hidden only on md    Hidden only on lg    Hidden only on xl    Hidden only on xxl    Visible on all    Visible only on xs    Visible only on sm    Visible only on md    Visible only on lg    Visible only on xl    Visible only on xxl   hide on lg and wider screenshide on screens smaller than lgDisplay in printChange the  value of elements when printing with our print display utility classes Includes support for the same  values as our responsive  utilities          The print and display classes can be combinedScreen Only Hide on print onlyPrint Only Hide on screen onlyHide up to large on screen but always show on printSassUtilities APIDisplay utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Flex","description":"Quickly manage the layout, alignment, and sizing of grid columns, navigation, components, and more with a full suite of responsive flexbox utilities. For more complex implementations, custom CSS may be necessary.","group":"utilities","toc":true,"skipSize":286,"id":"flex.md","fullContent":"Enable flex behaviorsApply  utilities to create a flexbox container and transform direct children elements into flex items Flex containers and items are able to be modified further with additional flex propertiesIm a flexbox containerIm an inline flexbox containerResponsive variations also exist for  and   DirectionSet the direction of flex items in a flex container with direction utilities In most cases you can omit the horizontal class here as the browser default is  However you may encounter situations where you needed to explicitly set this value like responsive layoutsUse  to set a horizontal direction the browser default or  to start the horizontal direction from the opposite side  Flex item   Flex item   Flex item   Flex item   Flex item   Flex item Use  to set a vertical direction or   to start the vertical direction from the opposite side  Flex item   Flex item   Flex item   Flex item   Flex item   Flex item Responsive variations also exist for     Justify contentUse  utilities on flexbox containers to change the alignment of flex items on the main axis the xaxis to start yaxis if  Choose from  browser default     or       Flex item    Flex item    Flex item        Flex item    Flex item    Flex item        Flex item    Flex item    Flex item        Flex item    Flex item    Flex item        Flex item    Flex item    Flex item        Flex item    Flex item    Flex item  Responsive variations also exist for       Align itemsUse  utilities on flexbox containers to change the alignment of flex items on the cross axis the yaxis to start xaxis if  Choose from     or  browser default      Flex item    Flex item    Flex item        Flex item    Flex item    Flex item        Flex item    Flex item    Flex item        Flex item    Flex item    Flex item        Flex item    Flex item    Flex item  Responsive variations also exist for      Align selfUse  utilities on flexbox items to individually change their alignment on the cross axis the yaxis to start xaxis if  Choose from the same options as      or  browser default      Flex item    Aligned flex item    Flex item        Flex item    Aligned flex item    Flex item        Flex item    Aligned flex item    Flex item        Flex item    Aligned flex item    Flex item        Flex item    Aligned flex item    Flex item  Responsive variations also exist for      FillUse the  class on a series of sibling elements to force them into widths equal to their content or equal widths if their content does not surpass their borderboxes while taking up all available horizontal space  Flex item with a lot of content  Flex item  Flex itemResponsive variations also exist for  Grow and shrinkUse  utilities to toggle a flex items ability to grow to fill available space In the example below the  elements uses all available space it can while allowing the remaining two flex items their necessary space  Flex item  Flex item  Third flex itemUse  utilities to toggle a flex items ability to shrink if necessary In the example below the second flex item with  is forced to wrap its contents to a new line shrinking to allow more space for the previous flex item with   Flex item  Flex itemResponsive variations also exist for  and   Auto marginsFlexbox can do some pretty awesome things when you mix flex alignments with auto margins Shown below are three examples of controlling flex items via auto margins default no auto margin pushing two items to the right  and pushing two items to the left   Flex item  Flex item  Flex item  Flex item  Flex item  Flex item  Flex item  Flex item  Flex itemWith alignitemsVertically move one flex item to the top or bottom of a container by mixing   and  or   Flex item  Flex item  Flex item  Flex item  Flex item  Flex itemWrapChange how flex items wrap in a flex container Choose from no wrapping at all the browser default with  wrapping with  or reverse wrapping with       Flex item    Flex item    Flex item    Flex item    Flex item        Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item        Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item  Responsive variations also exist for    OrderChange the visual order of specific flex items with a handful of  utilities We only provide options for making an item first or last as well as a reset to use the DOM order As  takes any integer value from  to  add custom CSS for any additional values needed  First flex item  Second flex item  Third flex itemResponsive variations also exist for seq    Additionally there are also responsive  and  classes that change the  of an element by applying  and  respectivelyslice first last  Align contentUse  utilities on flexbox containers to align flex items together on the cross axis Choose from  browser default     or  To demonstrate these utilities weve enforced  and increased the number of flex itemsHeads up This property has no effect on single rows of flex items      Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item        Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item        Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item        Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item        Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item        Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item    Flex item  Responsive variations also exist for       Media objectLooking to replicate the media object componenthttpsgetndbuikitcomdocscomponentsmediaobject from ndbuikit  Recreate it in no time with a few flex utilities that allow even more flexibility and customization than before              This is some content from a media component You can replace this with any content and adjust it as needed  And say you want to vertically center the content next to the image              This is some content from a media component You can replace this with any content and adjust it as needed  SassUtilities APIFlexbox utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Float","description":"Toggle floats on any element, across any breakpoint, using our responsive float utilities.","group":"utilities","toc":true,"skipSize":165,"id":"float.md","fullContent":"OverviewThese utility classes float an element to the left or right or disable floating based on the current viewport size using the CSS  propertyhttpsdevelopermozillaorgenUSdocsWebCSSfloat  is included to avoid specificity issues These use the same viewport breakpoints as our grid system Please be aware float utilities have no effect on flex itemsFloat start on all viewport sizesFloat end on all viewport sizesDont float on all viewport sizesResponsiveResponsive variations also exist for each  valueFloat start on viewports sized SM small or widerFloat start on viewports sized MD medium or widerFloat start on viewports sized LG large or widerFloat start on viewports sized XL extralarge or widerHere are all the support classes   SassUtilities APIFloat utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Interactions","description":"Utility classes that change how users interact with contents of a website.","group":"utilities","toc":false,"skipSize":157,"id":"interactions.md","fullContent":"Text selectionChange the way in which the content is selected when the user interacts with itThis paragraph will be entirely selected when clicked by the userThis paragraph has default select behaviorThis paragraph will not be selectable when clicked by the userPointer eventsndbuikit provides  and  classes to prevent or add element interactionsThis link can not be clickedThis link can be clicked this is default behaviorThis link can not be clicked because the pointerevents property is inherited from its parent However this link has a peauto class and can be clickedThe  class and the  CSS property it sets only prevents interactions with a pointer mouse stylus touch Links and controls with  are by default still focusable and actionable for keyboard users To ensure that they are completely neutralized even for keyboard users you may need to add further attributes such as  to prevent them from receiving keyboard focus and  to convey the fact they are effectively disabled to assistive technologies and possibly use JavaScript to completely prevent them from being actionableIf possible the simpler solution is For form controls add the  HTML attribute For links remove the  attribute making it a noninteractive anchor or placeholder linkSassUtilities APIInteraction utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Opacity","description":"Control the opacity of elements.","group":"utilities","added":"5.1","skipSize":112,"id":"opacity.md","fullContent":"The  property sets the opacity level for an element The opacity level describes the transparency level where  is not transparent at all  is  visible and  is completely transparentSet the  of an element using  utilities        Utilities APIOpacity utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Overflow","description":"Use these shorthand utilities for quickly configuring how content overflows an element.","group":"utilities","skipSize":155,"id":"overflow.md","fullContent":"Adjust the  property on the fly with four default values and classes These classes are not responsive by default      This is an example of using overflowauto on an element with set width and height dimensions By design this content will vertically scroll        This is an example of using overflowhidden on an element with set width and height dimensions        This is an example of using overflowvisible on an element with set width and height dimensions        This is an example of using overflowscroll on an element with set width and height dimensions  Using Sass variables you may customize the overflow utilities by changing the  variable in SassUtilities APIOverflow utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Position","description":"Use these shorthand utilities for quickly configuring the position of an element.","group":"utilities","toc":true,"skipSize":159,"id":"position.md","fullContent":"Position valuesQuick positioning classes are available though they are not responsiveArrange elementsArrange elements easily with the edge positioning utilities The format is Where property is one of   for the vertical  position   for the horizontal  position in LTR   for the vertical  position   for the horizontal  position in LTRWhere position is one of   for  edge position   for  edge position   for  edge positionYou can add more position values by adding entries to the  Sass map variable            Center elementsIn addition you can also center the elements with the transform utility class This class applies the transformations  and  to the element which in combination with the edge positioning utilities allows you to absolute center an element                  By adding  or  classes elements can be positioned only in horizontal or vertical direction                  ExamplesHere are some real life examples of these classes  Mails  unread messages  Marker   Alerts unread messagesYou can use these classes with existing components to create new ones Remember that you can extend its functionality by adding entries to the  variable              SassMapsDefault position utility values are declared in a Sass map then used to generate our utilitiesUtilities APIPosition utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Shadows","description":"Add or remove shadows to elements with box-shadow utilities.","group":"utilities","toc":true,"skipSize":137,"id":"shadows.md","fullContent":"ExamplesWhile shadows on components are disabled by default in ndbuikit and can be enabled via  you can also quickly add or remove a shadow with our  utility classes Includes support for  and three default sizes which have associated variables to matchNo shadowSmall shadowRegular shadowLarger shadowSassVariablesUtilities APIShadow utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Sizing","description":"Easily make an element as wide or as tall with our width and height utilities.","group":"utilities","toc":true,"skipSize":154,"id":"sizing.md","fullContent":"Relative to the parentWidth and height utilities are generated from the utility API in  Includes support for     and  by default Modify those values as you need to generate different utilities hereWidth Width Width Width Width auto  Height   Height   Height   Height   Height autoYou can also use  and  utilities as needed  Maxheight Relative to the viewportYou can also use utilities to set the width and height relative to the viewportSassUtilities APISizing utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Spacing","description":"ndb-uikit includes a wide range of shorthand responsive margin, padding, and gap utility classes to modify an element's appearance.","group":"utilities","toc":true,"skipSize":208,"id":"spacing.md","fullContent":"Margin and paddingAssign responsivefriendly  or  values to an element or a subset of its sides with shorthand classes Includes support for individual properties all properties and vertical and horizontal properties Classes are built from a default Sass map ranging from  to Using the CSS Grid layout module Consider using the gap utilitygap insteadNotationSpacing utilities that apply to all breakpoints from  to  have no breakpoint abbreviation in them This is because those classes are applied from  and up and thus are not bound by a media query The remaining breakpoints however do include a breakpoint abbreviationThe classes are named using the format  for  and  for     and Where property is one of   for classes that set    for classes that set Where sides is one of   for classes that set  or    for classes that set  or    start for classes that set  or  in LTR  or  in RTL   end for classes that set  or  in LTR  or  in RTL   for classes that set both  and    for classes that set both  and  blank  for classes that set a  or  on all  sides of the elementWhere size is one of   for classes that eliminate the  or  by setting it to    by default for classes that set the  or  to    by default for classes that set the  or  to    by default for classes that set the  or  to    by default for classes that set the  or  to    by default for classes that set the  or  to    for classes that set the  to autoYou can add more sizes by adding entries to the  Sass map variableExamplesHere are some representative examples of these classesHorizontal centeringAdditionally ndbuikit also includes an  class for horizontally centering fixedwidth block level contentthat is content that has  and a  setby setting the horizontal margins to       Centered element  Negative marginIn CSS  properties can utilize negative values  cannot These negative margins are disabled by default but can be enabled in Sass by setting The syntax is nearly the same as the default positive margin utilities but with the addition of  before the requested size Heres an example class thats the opposite of GapWhen using  you can make use of  utilities on the parent grid container This can save on having to add margin utilities to individual grid items children of a  container Gap utilities are responsive by default and are generated via our utilities API based on the  Sass map  Grid item   Grid item   Grid item Support includes responsive options for all of ndbuikits grid breakpoints as well as six sizes from the  map  There is no  utility class as its effectively the same as SassMapsSpacing utilities are declared via Sass map and then generated with our utilities APIUtilities APISpacing utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Text","description":"Documentation and examples for common text utilities to control alignment, wrapping, weight, and more.","group":"utilities","toc":true,"skipSize":176,"id":"text.md","fullContent":"Text alignmentEasily realign text to components with text alignment classes For start end and center alignment responsive classes are available that use the same viewport width breakpoints as the grid systemStart aligned text on all viewport sizesCenter aligned text on all viewport sizesEnd aligned text on all viewport sizesStart aligned text on viewports sized SM small or widerStart aligned text on viewports sized MD medium or widerStart aligned text on viewports sized LG large or widerStart aligned text on viewports sized XL extralarge or widerNote that we dont provide utility classes for justified text While aesthetically justified text might look more appealing it does make wordspacing more random and therefore harder to readText wrapping and overflowWrap text with a  class  This text should wrapPrevent text from wrapping with a  class  This text should overflow the parentWord breakPrevent long strings of text from breaking your components layout by using  to set  and  We use  instead of the more common  for wider browser support and add the deprecated  to avoid issues with flex containersmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmNote that breaking words isnt possible in Arabichttpsrtlstylingcompostsrtlstylinglinebreak which is the most used RTL language Therefore  is removed from our RTL compiled CSSText transformTransform text in components with text capitalization classesLowercased textUppercased textCapiTaliZed textNote how  only changes the first letter of each word leaving the case of any other letters unaffectedFont sizeQuickly change the  of text While our heading classes eg  apply   and  these utilities only apply  Sizing for these utilities matches HTMLs heading elements so as the number increases their size decreasesfs textfs textfs textfs textfs textfs textCustomize your available s by modifying the  Sass mapFont weight and italicsQuickly change the  or  of text with these utilities  utilities are abbreviated as  and  utilities are abbreviated as Bold textBolder weight text relative to the parent elementSemibold weight textNormal weight textLight weight textLighter weight text relative to the parent elementItalic textText with normal font styleLine heightChange the line height with  utilitiesThis is a long paragraph written to show how the lineheight of an element is affected by our utilities Classes are applied to the element itself or sometimes the parent element These classes can be customized as needed with our utility APIThis is a long paragraph written to show how the lineheight of an element is affected by our utilities Classes are applied to the element itself or sometimes the parent element These classes can be customized as needed with our utility APIThis is a long paragraph written to show how the lineheight of an element is affected by our utilities Classes are applied to the element itself or sometimes the parent element These classes can be customized as needed with our utility APIThis is a long paragraph written to show how the lineheight of an element is affected by our utilities Classes are applied to the element itself or sometimes the parent element These classes can be customized as needed with our utility APIMonospaceChange a selection to our monospace font stack with This is in monospaceReset colorReset a text or links color with  so that it inherits the color from its parent  Muted text with a reset linkText decorationDecorate text in components with text decoration classesThis text has a line underneath itThis text has a line going through itThis link has its text decoration removedSassVariablesMapsFontsize utilities are generated from this map in combination with our utilities APIUtilities APIFont and text utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Vertical alignment","description":"Easily change the vertical alignment of inline, inline-block, inline-table, and table cell elements.","group":"utilities","skipSize":178,"id":"vertical-align.md","fullContent":"Change the alignment of elements with the httpsdevelopermozillaorgenUSdocsWebCSSverticalalign utilities Please note that verticalalign only affects inline inlineblock inlinetable and table cell elementsChoose from      and  as neededTo vertically center noninline content like s and more use our flex box utilitiesWith inline elementsbaselinetopmiddlebottomtexttoptextbottomWith table cells            baseline      top      middle      bottom      texttop      textbottom      SassUtilities APIVertical align utilities are declared in our utilities API in  Learn how to use the utilities API"},{"layout":"docs","title":"Visibility","description":"Control the visibility of elements, without modifying their display, with visibility utilities.","group":"utilities","skipSize":165,"id":"visibility.md","fullContent":"Set the  of elements with our visibility utilities These utility classes do not modify the  value at all and do not affect layout   elements still take up space in the pageElements with the  class will be hidden both visually and for assistive technologyscreen reader usersApply  or  as neededSassUtilities APIVisibility utilities are declared in our utilities API in  Learn how to use the utilities API"}]